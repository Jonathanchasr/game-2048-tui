var searchIndex = JSON.parse('{\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[null],"p":[]},\
"cassowary":{"doc":"This crate contains an implementation of the Cassowary …","t":[4,4,13,3,13,13,13,13,3,13,13,13,13,13,13,13,13,3,4,4,4,3,4,3,13,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,17,17,17,17,5,5],"n":["AddConstraintError","AddEditVariableError","BadRequiredStrength","Constraint","DuplicateConstraint","DuplicateEditVariable","EQ","Equal","Expression","GE","GreaterOrEqual","InternalSolverError","InternalSolverError","InternalSolverError","InternalSolverError","LE","LessOrEqual","PartialConstraint","RelationalOperator","RemoveConstraintError","RemoveEditVariableError","Solver","SuggestValueError","Term","UnknownConstraint","UnknownEditVariable","UnknownEditVariable","UnsatisfiableConstraint","Variable","WeightedRelation","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_constraint","add_constraints","add_edit_variable","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","coefficient","constant","div","div","div","div","div","div","eq","eq","eq","expr","fetch_changes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_constant","from_term","get_value","has_constraint","has_edit_variable","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","ne","neg","neg","neg","negate","new","new","new","new","op","partial_cmp","partial_cmp","remove_constraint","remove_edit_variable","reset","strength","strength","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","suggest_value","terms","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable","0","0","0","0","0","0","0","MEDIUM","REQUIRED","STRONG","WEAK","clip","create"],"q":["cassowarycassowary::AddConstraintError","cassowary::RemoveConstraintError","cassowary::RemoveEditVariableError","cassowary::SuggestValueError","cassowary::WeightedRelation","","","cassowary::strength","","","","",""],"d":["The possible error conditions that <code>Solver::add_constraint</code> …","The possible error conditions that …","The specified strength was <code>REQUIRED</code>. This is illegal for …","A constraint, consisting of an equation governed by an …","The constraint specified has already been added to the …","The specified variable is already marked as an edit …","<code>==</code>","<code>==</code>","An expression that can be the left hand or right hand side …","<code>&gt;=</code>","<code>&gt;=</code>","The solver entered an invalid state. If this occurs please …","The solver entered an invalid state. If this occurs please …","The solver entered an invalid state. If this occurs please …","The solver entered an invalid state. If this occurs please …","<code>&lt;=</code>","<code>&lt;=</code>","This is an intermediate type used in the syntactic sugar …","The possible relations that a constraint can specify.","The possible error conditions that …","The possible error conditions that …","A constraint solver using the Cassowary algorithm. For …","The possible error conditions that <code>Solver::suggest_value</code> …","A variable and a coefficient to multiply that variable by. …","The constraint specified was not already in the solver, so …","The specified variable was not an edit variable in the …","The specified variable was not an edit variable in the …","The constraint is required, but it is unsatisfiable in …","Identifies a variable for the constraint solver. Each new …","This is part of the syntactic sugar used for specifying …","","","","","","","","","","","","","","","","Add a constraint to the solver.","","Add an edit variable to the solver.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The expression of the left hand side of the constraint …","Fetches all changes to the values of variables since the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an expression of the form <em>n</em>, where n is a …","Constructs an expression from a single term. Forms an …","Get the stored value for a variable.","Test whether a constraint has been added to the solver.","Test whether an edit variable has been added to the solver.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Mutates this expression by multiplying it by minus one.","Construct a new solver.","Produces a new unique variable for use in constraint …","General constructor. Each <code>Term</code> in <code>terms</code> is part of the sum …","Construct a new constraint from an expression, a …","The relational operator governing the constraint.","","","Remove a constraint from the solver.","Remove an edit variable from the solver.","Reset the solver to the empty starting condition.","Contains useful constants and functions for producing …","The strength of the constraint that the solver will use.","","","","","","","","","","","","","","","","Suggest a value for the given edit variable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clips a strength value to the legal range","Create a constraint as a linear combination of STRONG, …"],"i":[0,0,1,0,2,1,3,4,0,3,4,2,5,6,7,3,4,0,0,0,0,0,0,0,5,6,7,2,0,0,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,12,12,12,12,12,8,9,10,11,3,12,8,9,10,4,13,2,5,1,6,7,11,3,12,8,9,10,4,13,2,5,1,6,7,8,9,10,4,13,2,5,1,6,7,8,9,10,4,13,2,5,1,6,7,8,4,9,10,8,8,9,9,10,10,8,4,13,13,11,8,9,10,4,4,13,2,5,1,6,7,11,3,12,8,9,10,10,10,10,4,13,2,5,1,6,7,10,10,11,11,11,8,4,13,11,3,12,8,9,10,4,13,2,5,1,6,7,8,8,9,9,10,10,8,8,9,10,10,11,8,10,13,13,8,4,11,11,11,0,13,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,10,8,9,10,4,13,2,5,1,6,7,4,11,3,12,8,9,10,4,13,2,5,1,6,7,11,3,12,8,9,10,4,13,2,5,1,6,7,11,3,12,8,9,10,4,13,2,5,1,6,7,9,14,15,16,17,18,19,20,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["variable",3],["expression",3]],["expression",3]],[[["variable",3],["f64",0]],["expression",3]],[[["variable",3],["variable",3]],["expression",3]],[[["variable",3],["f32",0]],["expression",3]],[[["variable",3],["term",3]],["expression",3]],[[["term",3],["expression",3]],["expression",3]],[[["term",3],["term",3]],["expression",3]],[[["term",3],["f32",0]],["expression",3]],[[["term",3],["variable",3]],["expression",3]],[[["term",3],["f64",0]],["expression",3]],[[["expression",3],["variable",3]],["expression",3]],[[["expression",3],["f64",0]],["expression",3]],[[["expression",3],["term",3]],["expression",3]],[[["expression",3],["f32",0]],["expression",3]],[[["expression",3],["expression",3]],["expression",3]],[[["solver",3],["constraint",3]],["result",4,[["addconstrainterror",4]]]],[[["solver",3],["intoiterator",8]],["result",4,[["addconstrainterror",4]]]],[[["solver",3],["variable",3],["f64",0]],["result",4,[["addeditvariableerror",4]]]],[[["partialconstraint",3],["term",3]],["constraint",3]],[[["partialconstraint",3],["f64",0]],["constraint",3]],[[["partialconstraint",3],["expression",3]],["constraint",3]],[[["partialconstraint",3],["f32",0]],["constraint",3]],[[["partialconstraint",3],["variable",3]],["constraint",3]],[[["variable",3],["weightedrelation",4]],["partialconstraint",3]],[[["term",3],["weightedrelation",4]],["partialconstraint",3]],[[["expression",3],["weightedrelation",4]],["partialconstraint",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["variable",3]],["variable",3]],[[["term",3]],["term",3]],[[["expression",3]],["expression",3]],[[["relationaloperator",4]],["relationaloperator",4]],[[["constraint",3]],["constraint",3]],[[["addconstrainterror",4]],["addconstrainterror",4]],[[["removeconstrainterror",4]],["removeconstrainterror",4]],[[["addeditvariableerror",4]],["addeditvariableerror",4]],[[["removeeditvariableerror",4]],["removeeditvariableerror",4]],[[["suggestvalueerror",4]],["suggestvalueerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["variable",3],["variable",3]],["ordering",4]],[[["relationaloperator",4],["relationaloperator",4]],["ordering",4]],null,null,[[["variable",3],["f64",0]],["term",3]],[[["variable",3],["f32",0]],["term",3]],[[["term",3],["f64",0]],["term",3]],[[["term",3],["f32",0]],["term",3]],[[["expression",3],["f32",0]],["expression",3]],[[["expression",3],["f64",0]],["expression",3]],[[["variable",3],["variable",3]],["bool",0]],[[["relationaloperator",4],["relationaloperator",4]],["bool",0]],[[["constraint",3],["constraint",3]],["bool",0]],[[["constraint",3]],["expression",3]],[[["solver",3]]],[[["variable",3],["formatter",3]],["result",6]],[[["term",3],["formatter",3]],["result",6]],[[["expression",3],["formatter",3]],["result",6]],[[["relationaloperator",4],["formatter",3]],["result",6]],[[["relationaloperator",4],["formatter",3]],["result",6]],[[["constraint",3],["formatter",3]],["result",6]],[[["addconstrainterror",4],["formatter",3]],["result",6]],[[["removeconstrainterror",4],["formatter",3]],["result",6]],[[["addeditvariableerror",4],["formatter",3]],["result",6]],[[["removeeditvariableerror",4],["formatter",3]],["result",6]],[[["suggestvalueerror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["variable",3]],["expression",3]],[[["term",3]],["expression",3]],[[["f64",0]],["expression",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f64",0]],["expression",3]],[[["term",3]],["expression",3]],[[["solver",3],["variable",3]],["f64",0]],[[["solver",3],["constraint",3]],["bool",0]],[[["solver",3],["variable",3]],["bool",0]],[[["variable",3],["",0]]],[[["relationaloperator",4],["",0]]],[[["constraint",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["variable",3],["f32",0]],["term",3]],[[["variable",3],["f64",0]],["term",3]],[[["term",3],["f32",0]],["term",3]],[[["term",3],["f64",0]],["term",3]],[[["expression",3],["f32",0]],["expression",3]],[[["expression",3],["f64",0]],["expression",3]],[[["variable",3],["variable",3]],["bool",0]],[[["variable",3]],["term",3]],[[["term",3]],["term",3]],[[["expression",3]],["expression",3]],[[["expression",3]]],[[],["solver",3]],[[],["variable",3]],[[["vec",3,[["term",3]]],["f64",0]],["expression",3]],[[["expression",3],["relationaloperator",4],["f64",0]],["constraint",3]],[[["constraint",3]],["relationaloperator",4]],[[["variable",3],["variable",3]],["option",4,[["ordering",4]]]],[[["relationaloperator",4],["relationaloperator",4]],["option",4,[["ordering",4]]]],[[["solver",3],["constraint",3]],["result",4,[["removeconstrainterror",4]]]],[[["solver",3],["variable",3]],["result",4,[["removeeditvariableerror",4]]]],[[["solver",3]]],null,[[["constraint",3]],["f64",0]],[[["variable",3],["f64",0]],["expression",3]],[[["variable",3],["f32",0]],["expression",3]],[[["variable",3],["variable",3]],["expression",3]],[[["variable",3],["term",3]],["expression",3]],[[["variable",3],["expression",3]],["expression",3]],[[["term",3],["f64",0]],["expression",3]],[[["term",3],["variable",3]],["expression",3]],[[["term",3],["expression",3]],["expression",3]],[[["term",3],["term",3]],["expression",3]],[[["term",3],["f32",0]],["expression",3]],[[["expression",3],["f32",0]],["expression",3]],[[["expression",3],["expression",3]],["expression",3]],[[["expression",3],["variable",3]],["expression",3]],[[["expression",3],["term",3]],["expression",3]],[[["expression",3],["f64",0]],["expression",3]],[[["solver",3],["variable",3],["f64",0]],["result",4,[["suggestvalueerror",4]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["f64",0]],["f64",0]],[[["f64",0],["f64",0],["f64",0],["f64",0]],["f64",0]]],"p":[[4,"AddEditVariableError"],[4,"AddConstraintError"],[4,"WeightedRelation"],[4,"RelationalOperator"],[4,"RemoveConstraintError"],[4,"RemoveEditVariableError"],[4,"SuggestValueError"],[3,"Variable"],[3,"Term"],[3,"Expression"],[3,"Solver"],[3,"PartialConstraint"],[3,"Constraint"],[13,"InternalSolverError"],[13,"InternalSolverError"],[13,"InternalSolverError"],[13,"InternalSolverError"],[13,"EQ"],[13,"LE"],[13,"GE"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"getrandom":{"doc":"Interface to the operating system’s random number …","t":[18,18,3,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["CUSTOM_START","ERRNO_NOT_POSITIVE","Error","FAILED_RDRAND","INTERNAL_START","IOS_SEC_RANDOM","NODE_CRYPTO","NODE_RANDOM_FILL_SYNC","NO_RDRAND","UNSUPPORTED","VXWORKS_RAND_SECURE","WEB_CRYPTO","WEB_GET_RANDOM_VALUES","WINDOWS_RTL_GEN_RANDOM","borrow","borrow_mut","clone","clone_into","code","eq","fmt","fmt","from","from","getrandom","into","ne","raw_os_error","to_owned","to_string","try_from","try_into","type_id"],"q":["getrandom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Codes at or above this point can be used by users to …","The platform-specific <code>errno</code> returned a non-positive value.","A small and <code>no_std</code> compatible error type","RDRAND instruction failed due to a hardware issue.","Codes below this point represent OS Errors (i.e. positive …","Call to iOS <code>SecRandomCopyBytes</code> failed.","NodeJS does not have support for the <code>crypto</code> module.","NodeJS does not have support for <code>crypto.randomFillSync</code>.","RDRAND instruction unsupported on this target.","This target/platform is not supported by <code>getrandom</code>.","On VxWorks, call to <code>randSecure</code> failed (random number …","The browser does not have support for <code>self.crypto</code>.","The browser does not have support for …","Call to Windows <code>RtlGenRandom</code> failed.","","","","","Extract the bare error code.","","","","","Returns the argument unchanged.","Fill <code>dest</code> with random bytes from the system’s preferred …","Calls <code>U::from(self)</code>.","","Extract the raw OS error code (if this error came from the …","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",3]],["error",3]],[[["",0],["",0]]],[[["error",3]],["nonzerou32",3]],[[["error",3],["error",3]],["bool",0]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["nonzerou32",3]],["error",3]],[[]],[[],["result",4,[["error",3]]]],[[]],[[["error",3],["error",3]],["bool",0]],[[["error",3]],["option",4,[["i32",0]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"Error"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ACCOUNTING","AF_APPLETALK","AF_CCITT","AF_CHAOS","AF_CNT","AF_COIP","AF_DATAKIT","AF_DECnet","AF_DLI","AF_E164","AF_ECMA","AF_HYLINK","AF_IMPLINK","AF_INET","AF_INET6","AF_IPX","AF_ISDN","AF_ISO","AF_LAT","AF_LINK","AF_LOCAL","AF_NATM","AF_NETBIOS","AF_NS","AF_OSI","AF_PPP","AF_PUP","AF_ROUTE","AF_SIP","AF_SNA","AF_SYSTEM","AF_SYS_CONTROL","AF_UNIX","AF_UNSPEC","AIO_ALLDONE","AIO_CANCELED","AIO_LISTIO_MAX","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_DEFAULT","AI_MASK","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_UNUSABLE","AI_V4MAPPED","AI_V4MAPPED_CFG","ALTWERASE","ALT_DIGITS","AM_STR","ARPOP_REPLY","ARPOP_REQUEST","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_EACCESS","AT_FDCWD","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","B0","B110","B115200","B1200","B134","B14400","B150","B1800","B19200","B200","B230400","B2400","B28800","B300","B38400","B4800","B50","B57600","B600","B7200","B75","B76800","B9600","BIOCFLUSH","BIOCGBLEN","BIOCGDLT","BIOCGDLTLIST","BIOCGETIF","BIOCGHDRCMPLT","BIOCGRSIG","BIOCGRTIMEOUT","BIOCGSEESENT","BIOCGSTATS","BIOCIMMEDIATE","BIOCPROMISC","BIOCSBLEN","BIOCSDLT","BIOCSETF","BIOCSETFNR","BIOCSETIF","BIOCSHDRCMPLT","BIOCSRSIG","BIOCSRTIMEOUT","BIOCSSEESENT","BIOCVERSION","BOOT_TIME","BPF_ALIGNMENT","BRKINT","BS0","BS1","BSDLY","BUFSIZ","CCCryptorStatus","CCRNGStatus","CCRandomGenerateBytes","CCStatus","CIGNORE","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_THREAD_CPUTIME_ID","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CODESET","CONNECT_DATA_AUTHENTICATED","CONNECT_DATA_IDEMPOTENT","CONNECT_RESUME_ON_READ_WRITE","CPU_STATE_IDLE","CPU_STATE_MAX","CPU_STATE_NICE","CPU_STATE_SYSTEM","CPU_STATE_USER","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTLFLAG_ANYBODY","CTLFLAG_KERN","CTLFLAG_LOCKED","CTLFLAG_MASKED","CTLFLAG_NOAUTO","CTLFLAG_NOLOCK","CTLFLAG_OID2","CTLFLAG_RD","CTLFLAG_RW","CTLFLAG_SECURE","CTLFLAG_WR","CTLTYPE","CTLTYPE_INT","CTLTYPE_NODE","CTLTYPE_OPAQUE","CTLTYPE_QUAD","CTLTYPE_STRING","CTLTYPE_STRUCT","CTL_DEBUG","CTL_DEBUG_MAXID","CTL_DEBUG_NAME","CTL_DEBUG_VALUE","CTL_HW","CTL_KERN","CTL_MACHDEP","CTL_MAXID","CTL_NET","CTL_UNSPEC","CTL_USER","CTL_VFS","CTL_VM","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DEAD_PROCESS","DIR","DLT_ARCNET","DLT_ATM_RFC1483","DLT_AX25","DLT_CHAOS","DLT_EN10MB","DLT_EN3MB","DLT_FDDI","DLT_IEEE802","DLT_LOOP","DLT_NULL","DLT_PPP","DLT_PRONET","DLT_RAW","DLT_SLIP","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_MD_ORDER","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EAUTH","EBADARCH","EBADEXEC","EBADF","EBADMACHO","EBADMSG","EBADRPC","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDEVERR","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EFTYPE","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELAST","ELOOP","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENEEDAUTH","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOATTR","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPOLICY","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROCLIM","EPROCUNAVAIL","EPROGMISMATCH","EPROGUNAVAIL","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","EPWROFF","EQFULL","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMOTE","EROFS","ERPCMISMATCH","ESHLIBVERS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESTALE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUSERS","EVFILT_AIO","EVFILT_FS","EVFILT_MACHPORT","EVFILT_PROC","EVFILT_READ","EVFILT_SIGNAL","EVFILT_TIMER","EVFILT_USER","EVFILT_VM","EVFILT_VNODE","EVFILT_WRITE","EV_ADD","EV_CLEAR","EV_DELETE","EV_DISABLE","EV_DISPATCH","EV_ENABLE","EV_EOF","EV_ERROR","EV_FLAG0","EV_FLAG1","EV_ONESHOT","EV_OOBAND","EV_POLL","EV_RECEIPT","EV_SYSFLAGS","EWOULDBLOCK","EXDEV","EXIT_FAILURE","EXIT_SUCCESS","EXTA","EXTB","EXTPROC","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIODTYPE","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOSETOWN","FLUSHO","FOPEN_MAX","F_ALLOCATEALL","F_ALLOCATECONTIG","F_DUPFD","F_DUPFD_CLOEXEC","F_FREEZE_FS","F_FULLFSYNC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETPATH","F_GLOBAL_NOCACHE","F_LOCK","F_NOCACHE","F_NODIRECT","F_OK","F_PEOFPOSMODE","F_PREALLOCATE","F_RDADVISE","F_RDAHEAD","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_TEST","F_THAW_FS","F_TLOCK","F_ULOCK","F_UNLCK","F_VOLPOSMODE","F_WRLCK","GETALL","GETNCNT","GETPID","GETVAL","GETZCNT","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRPQUOTA","HOST_CPU_LOAD_INFO","HOST_CPU_LOAD_INFO_COUNT","HOST_EXPIRED_TASK_INFO","HOST_EXTMOD_INFO64","HOST_LOAD_INFO","HOST_VM_INFO","HOST_VM_INFO64","HOST_VM_INFO64_COUNT","HUPCL","HW_AVAILCPU","HW_BUS_FREQ","HW_BYTEORDER","HW_CACHELINE","HW_CPU_FREQ","HW_DISKNAMES","HW_DISKSTATS","HW_EPOCH","HW_FLOATINGPT","HW_L1DCACHESIZE","HW_L1ICACHESIZE","HW_L2CACHESIZE","HW_L2SETTINGS","HW_L3CACHESIZE","HW_L3SETTINGS","HW_MACHINE","HW_MACHINE_ARCH","HW_MAXID","HW_MEMSIZE","HW_MODEL","HW_NCPU","HW_PAGESIZE","HW_PHYSMEM","HW_PRODUCT","HW_TARGET","HW_TB_FREQ","HW_USERMEM","HW_VECTORUNIT","ICANON","ICRNL","IEXTEN","IFF_ALLMULTI","IFF_ALTPHYS","IFF_BROADCAST","IFF_DEBUG","IFF_LINK0","IFF_LINK1","IFF_LINK2","IFF_LOOPBACK","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_OACTIVE","IFF_POINTOPOINT","IFF_PROMISC","IFF_RUNNING","IFF_SIMPLEX","IFF_UP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INT_MAX","INT_MIN","IOV_MAX","IPC_CREAT","IPC_EXCL","IPC_M","IPC_NOWAIT","IPC_PRIVATE","IPC_R","IPC_RMID","IPC_SET","IPC_STAT","IPC_W","IPPROTO_3PC","IPPROTO_ADFS","IPPROTO_AH","IPPROTO_AHIP","IPPROTO_APES","IPPROTO_ARGUS","IPPROTO_AX25","IPPROTO_BHA","IPPROTO_BLT","IPPROTO_BRSATMON","IPPROTO_CFTP","IPPROTO_CHAOS","IPPROTO_CMTP","IPPROTO_CPHB","IPPROTO_CPNX","IPPROTO_DDP","IPPROTO_DGP","IPPROTO_DIVERT","IPPROTO_DONE","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_EMCON","IPPROTO_ENCAP","IPPROTO_EON","IPPROTO_ESP","IPPROTO_ETHERIP","IPPROTO_FRAGMENT","IPPROTO_GGP","IPPROTO_GMTP","IPPROTO_GRE","IPPROTO_HELLO","IPPROTO_HMP","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IDPR","IPPROTO_IDRP","IPPROTO_IGMP","IPPROTO_IGP","IPPROTO_IGRP","IPPROTO_IL","IPPROTO_INLSP","IPPROTO_INP","IPPROTO_IP","IPPROTO_IPCOMP","IPPROTO_IPCV","IPPROTO_IPEIP","IPPROTO_IPIP","IPPROTO_IPPC","IPPROTO_IPV6","IPPROTO_IRTP","IPPROTO_KRYPTOLAN","IPPROTO_LARP","IPPROTO_LEAF1","IPPROTO_LEAF2","IPPROTO_MAX","IPPROTO_MEAS","IPPROTO_MHRP","IPPROTO_MICP","IPPROTO_MTP","IPPROTO_MUX","IPPROTO_ND","IPPROTO_NHRP","IPPROTO_NONE","IPPROTO_NSP","IPPROTO_NVPII","IPPROTO_OSPFIGP","IPPROTO_PGM","IPPROTO_PIGP","IPPROTO_PIM","IPPROTO_PRM","IPPROTO_PUP","IPPROTO_PVP","IPPROTO_RAW","IPPROTO_RCCMON","IPPROTO_RDP","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_RVD","IPPROTO_SATEXPAK","IPPROTO_SATMON","IPPROTO_SCCSP","IPPROTO_SCTP","IPPROTO_SDRP","IPPROTO_SEP","IPPROTO_SRPC","IPPROTO_ST","IPPROTO_SVMTP","IPPROTO_SWIPE","IPPROTO_TCF","IPPROTO_TCP","IPPROTO_TP","IPPROTO_TPXX","IPPROTO_TRUNK1","IPPROTO_TRUNK2","IPPROTO_TTP","IPPROTO_UDP","IPPROTO_VINES","IPPROTO_VISA","IPPROTO_VMTP","IPPROTO_WBEXPAK","IPPROTO_WBMON","IPPROTO_WSN","IPPROTO_XNET","IPPROTO_XTP","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOTECT","IPV6_CHECKSUM","IPV6_HOPLIMIT","IPV6_JOIN_GROUP","IPV6_LEAVE_GROUP","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_PKTINFO","IPV6_RECVPKTINFO","IPV6_RECVTCLASS","IPV6_TCLASS","IPV6_UNICAST_HOPS","IPV6_V6ONLY","IP_ADD_MEMBERSHIP","IP_BOUND_IF","IP_DROP_MEMBERSHIP","IP_HDRINCL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_PKTINFO","IP_RECVDSTADDR","IP_RECVIF","IP_RECVTOS","IP_TOS","IP_TTL","ISIG","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","KERN_ABORTED","KERN_AFFINITY","KERN_AIOMAX","KERN_AIOPROCMAX","KERN_AIOTHREADS","KERN_ALREADY_IN_SET","KERN_ALREADY_WAITING","KERN_ARGMAX","KERN_BOOTFILE","KERN_BOOTTIME","KERN_CHECKOPENEVT","KERN_CLASSIC","KERN_CLASSICHANDLER","KERN_CLOCKRATE","KERN_CODESIGN_ERROR","KERN_COREDUMP","KERN_COREFILE","KERN_DEFAULT_SET","KERN_DOMAINNAME","KERN_DUMMY","KERN_DUMPDEV","KERN_EXCEPTION_PROTECTED","KERN_EXEC","KERN_FAILURE","KERN_FILE","KERN_HOSTID","KERN_HOSTNAME","KERN_INSUFFICIENT_BUFFER_SIZE","KERN_INVALID_ADDRESS","KERN_INVALID_ARGUMENT","KERN_INVALID_CAPABILITY","KERN_INVALID_HOST","KERN_INVALID_LEDGER","KERN_INVALID_MEMORY_CONTROL","KERN_INVALID_NAME","KERN_INVALID_OBJECT","KERN_INVALID_POLICY","KERN_INVALID_PROCESSOR_SET","KERN_INVALID_RIGHT","KERN_INVALID_SECURITY","KERN_INVALID_TASK","KERN_INVALID_VALUE","KERN_IPC","KERN_JOB_CONTROL","KERN_KDBUFWAIT","KERN_KDCPUMAP","KERN_KDDFLAGS","KERN_KDEBUG","KERN_KDEFLAGS","KERN_KDENABLE","KERN_KDGETBUF","KERN_KDGETENTROPY","KERN_KDGETREG","KERN_KDPIDEX","KERN_KDPIDTR","KERN_KDREADCURTHRMAP","KERN_KDREADTR","KERN_KDREMOVE","KERN_KDSETBUF","KERN_KDSETREG","KERN_KDSETRTCDEC","KERN_KDSETUP","KERN_KDSET_TYPEFILTER","KERN_KDTHRMAP","KERN_KDWRITEMAP","KERN_KDWRITETR","KERN_LOCK_OWNED","KERN_LOCK_OWNED_SELF","KERN_LOCK_SET_DESTROYED","KERN_LOCK_UNSTABLE","KERN_LOGSIGEXIT","KERN_LOW_PRI_DELAY","KERN_LOW_PRI_WINDOW","KERN_MAXFILES","KERN_MAXFILESPERPROC","KERN_MAXID","KERN_MAXPARTITIONS","KERN_MAXPROC","KERN_MAXPROCPERUID","KERN_MAXVNODES","KERN_MEMORY_DATA_MOVED","KERN_MEMORY_ERROR","KERN_MEMORY_FAILURE","KERN_MEMORY_PRESENT","KERN_MEMORY_RESTART_COPY","KERN_NAME_EXISTS","KERN_NETBOOT","KERN_NGROUPS","KERN_NISDOMAINNAME","KERN_NODE_DOWN","KERN_NOT_DEPRESSED","KERN_NOT_IN_SET","KERN_NOT_RECEIVER","KERN_NOT_SUPPORTED","KERN_NOT_WAITING","KERN_NO_ACCESS","KERN_NO_SPACE","KERN_NTP_PLL","KERN_NX_PROTECTION","KERN_OPENEVT_PROC","KERN_OPERATION_TIMED_OUT","KERN_OSRELDATE","KERN_OSRELEASE","KERN_OSREV","KERN_OSTYPE","KERN_OSVERSION","KERN_POLICY_LIMIT","KERN_POLICY_STATIC","KERN_POSIX","KERN_POSIX1","KERN_PROC","KERN_PROCARGS","KERN_PROCARGS2","KERN_PROCDELAYTERM","KERN_PROCNAME","KERN_PROC_ALL","KERN_PROC_LCID","KERN_PROC_PGRP","KERN_PROC_PID","KERN_PROC_RUID","KERN_PROC_SESSION","KERN_PROC_TTY","KERN_PROC_UID","KERN_PROF","KERN_PROTECTION_FAILURE","KERN_PS_STRINGS","KERN_RAGEVNODE","KERN_RAGE_PROC","KERN_RAGE_THREAD","KERN_RESOURCE_SHORTAGE","KERN_RIGHT_EXISTS","KERN_RPC_CONTINUE_ORPHAN","KERN_RPC_SERVER_TERMINATED","KERN_RPC_TERMINATE_ORPHAN","KERN_SAFEBOOT","KERN_SAVED_IDS","KERN_SECURELVL","KERN_SEMAPHORE_DESTROYED","KERN_SHREG_PRIVATIZABLE","KERN_SPECULATIVE_READS","KERN_SUCCESS","KERN_SUGID_COREDUMP","KERN_SYMFILE","KERN_SYSV","KERN_TERMINATED","KERN_TFP","KERN_TFP_POLICY","KERN_TFP_POLICY_DEFAULT","KERN_TFP_POLICY_DENY","KERN_THALTSTACK","KERN_THREADNAME","KERN_TRANSLATE","KERN_TTY","KERN_UNOPENEVT_PROC","KERN_UNRAGE_PROC","KERN_UNRAGE_THREAD","KERN_UPDATEINTERVAL","KERN_UREFS_OVERFLOW","KERN_USRSTACK32","KERN_USRSTACK64","KERN_VERSION","KERN_VNODE","KIPC_MAXSOCKBUF","KIPC_MAX_DATALEN","KIPC_MAX_HDR","KIPC_MAX_LINKHDR","KIPC_MAX_PROTOHDR","KIPC_MBSTAT","KIPC_NMBCLUSTERS","KIPC_SOCKBUF_WASTE","KIPC_SOMAXCONN","KIPC_SOQLIMITCOMPAT","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_SEGMENT","LC_SEGMENT_64","LC_TIME","LC_TIME_MASK","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LOCAL_PEERCRED","LOCAL_PEEREPID","LOCAL_PEEREUUID","LOCAL_PEERPID","LOCAL_PEERUUID","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_INSTALL","LOG_KERN","LOG_LAUNCHD","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NETINFO","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_RAS","LOG_REMOTEAUTH","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","MACH_PORT_NULL","MACH_TASK_BASIC_INFO","MACH_TASK_BASIC_INFO_COUNT","MADV_CAN_REUSE","MADV_DONTNEED","MADV_FREE","MADV_FREE_REUSABLE","MADV_FREE_REUSE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_ZERO_WIRED_PAGES","MAP_ANON","MAP_ANONYMOUS","MAP_COPY","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_HASSEMAPHORE","MAP_JIT","MAP_NOCACHE","MAP_NOEXTEND","MAP_NORESERVE","MAP_PRIVATE","MAP_RENAME","MAP_SHARED","MAXCOMLEN","MAXFREQ","MAXPATHLEN","MAXPHASE","MAXSEC","MAXTC","MAXTHREADNAMESIZE","MCL_CURRENT","MCL_FUTURE","MDMBUF","MEMORY_OBJECT_NULL","MH_MAGIC","MH_MAGIC_64","MINCORE_INCORE","MINCORE_MODIFIED","MINCORE_MODIFIED_OTHER","MINCORE_REFERENCED","MINCORE_REFERENCED_OTHER","MINSEC","MINSIGSTKSZ","MNT_ASYNC","MNT_AUTOMOUNTED","MNT_CPROTECT","MNT_DEFWRITE","MNT_DONTBROWSE","MNT_DOVOLFS","MNT_EXPORTED","MNT_FORCE","MNT_IGNORE_OWNERSHIP","MNT_JOURNALED","MNT_LOCAL","MNT_MULTILABEL","MNT_NOATIME","MNT_NOBLOCK","MNT_NODEV","MNT_NOEXEC","MNT_NOSUID","MNT_NOUSERXATTR","MNT_NOWAIT","MNT_QUARANTINE","MNT_QUOTA","MNT_RDONLY","MNT_RELOAD","MNT_ROOTFS","MNT_SNAPSHOT","MNT_SYNCHRONOUS","MNT_UNION","MNT_UPDATE","MNT_WAIT","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_PPSMAX","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOF","MSG_EOR","MSG_FLUSH","MSG_HAVEMORE","MSG_HOLD","MSG_OOB","MSG_PEEK","MSG_RCVMORE","MSG_SEND","MSG_TRUNC","MSG_WAITALL","MS_ASYNC","MS_DEACTIVATE","MS_INVALIDATE","MS_KILLPAGES","MS_SYNC","NANOSECOND","NCCS","NET_RT_DUMP","NET_RT_FLAGS","NET_RT_IFLIST","NET_RT_IFLIST2","NEW_TIME","NI_DGRAM","NI_MAXHOST","NI_MAXSERV","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSCOPE","NI_NUMERICSERV","NL0","NL1","NLDLY","NOEXPR","NOFLSH","NOKERNINFO","NOSTR","NOTE_ABSOLUTE","NOTE_ATTRIB","NOTE_BACKGROUND","NOTE_CHILD","NOTE_CRITICAL","NOTE_DELETE","NOTE_EXEC","NOTE_EXIT","NOTE_EXITSTATUS","NOTE_EXIT_CSERROR","NOTE_EXIT_DECRYPTFAIL","NOTE_EXIT_DETAIL","NOTE_EXIT_DETAIL_MASK","NOTE_EXIT_MEMORY","NOTE_EXTEND","NOTE_FFAND","NOTE_FFCOPY","NOTE_FFCTRLMASK","NOTE_FFLAGSMASK","NOTE_FFNOP","NOTE_FFOR","NOTE_FORK","NOTE_LEEWAY","NOTE_LINK","NOTE_LOWAT","NOTE_NONE","NOTE_NSECONDS","NOTE_PCTRLMASK","NOTE_PDATAMASK","NOTE_RENAME","NOTE_REVOKE","NOTE_SECONDS","NOTE_SIGNAL","NOTE_TRACK","NOTE_TRACKERR","NOTE_TRIGGER","NOTE_USECONDS","NOTE_VM_ERROR","NOTE_VM_PRESSURE","NOTE_VM_PRESSURE_SUDDEN_TERMINATE","NOTE_VM_PRESSURE_TERMINATE","NOTE_WRITE","NTP_API","OCRNL","OFDEL","OFILL","OLD_TIME","ONLCR","ONLRET","ONOCR","ONOEOT","OPOST","OXTABS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECTORY","O_DSYNC","O_EXCL","O_EXLOCK","O_FSYNC","O_NDELAY","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_RDONLY","O_RDWR","O_SHLOCK","O_SYMLINK","O_SYNC","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_APPLETALK","PF_CCITT","PF_CHAOS","PF_CNT","PF_COIP","PF_DATAKIT","PF_DECnet","PF_DLI","PF_ECMA","PF_HYLINK","PF_IMPLINK","PF_INET","PF_INET6","PF_IPX","PF_ISDN","PF_ISO","PF_KEY","PF_LAT","PF_LINK","PF_LOCAL","PF_NATM","PF_NETBIOS","PF_NS","PF_OSI","PF_PIP","PF_PPP","PF_PUP","PF_ROUTE","PF_RTIP","PF_SIP","PF_SNA","PF_SYSTEM","PF_UNIX","PF_UNSPEC","PF_XTP","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_CLOEXEC_DEFAULT","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETEXEC","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_START_SUSPENDED","PRIO_DARWIN_BG","PRIO_DARWIN_NONUI","PRIO_DARWIN_PROCESS","PRIO_DARWIN_THREAD","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROCESSOR_BASIC_INFO","PROCESSOR_CPU_LOAD_INFO","PROCESSOR_PM_REGS_INFO","PROCESSOR_SET_BASIC_INFO","PROCESSOR_SET_LOAD_INFO","PROCESSOR_TEMPERATURE","PROC_CSM_ALL","PROC_CSM_NOSMT","PROC_CSM_TECS","PROC_PIDPATHINFO_MAXSIZE","PROC_PIDTASKALLINFO","PROC_PIDTASKINFO","PROC_PIDTBSDINFO","PROC_PIDTHREADINFO","PROC_PIDVNODEPATHINFO","PROT_EXEC","PROT_NONE","PROT_READ","PROT_WRITE","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_INTROSPECTION_THREAD_CREATE","PTHREAD_INTROSPECTION_THREAD_DESTROY","PTHREAD_INTROSPECTION_THREAD_START","PTHREAD_INTROSPECTION_THREAD_TERMINATE","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PT_ATTACH","PT_ATTACHEXC","PT_CONTINUE","PT_DENY_ATTACH","PT_DETACH","PT_FIRSTMACH","PT_FORCEQUOTA","PT_KILL","PT_READ_D","PT_READ_I","PT_READ_U","PT_SIGEXC","PT_STEP","PT_THUPDATE","PT_TRACE_ME","PT_WRITE_D","PT_WRITE_I","PT_WRITE_U","P_ALL","P_PGID","P_PID","QCMD","QOS_CLASS_BACKGROUND","QOS_CLASS_DEFAULT","QOS_CLASS_UNSPECIFIED","QOS_CLASS_USER_INITIATED","QOS_CLASS_USER_INTERACTIVE","QOS_CLASS_UTILITY","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETQUOTA","Q_SYNC","RADIXCHAR","RAND_MAX","REG_ASSERT","REG_ATOI","REG_BACKR","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_BASIC","REG_DUMP","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EESCAPE","REG_EMPTY","REG_EPAREN","REG_ERANGE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_INVARG","REG_ITOA","REG_LARGE","REG_NEWLINE","REG_NOMATCH","REG_NOSPEC","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_PEND","REG_STARTEND","REG_TRACE","RENAME_EXCL","RENAME_SWAP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RTAX_AUTHOR","RTAX_BRD","RTAX_DST","RTAX_GATEWAY","RTAX_GENMASK","RTAX_IFA","RTAX_IFP","RTAX_MAX","RTAX_NETMASK","RTA_AUTHOR","RTA_BRD","RTA_DST","RTA_GATEWAY","RTA_GENMASK","RTA_IFA","RTA_IFP","RTA_NETMASK","RTF_BLACKHOLE","RTF_BROADCAST","RTF_CLONING","RTF_CONDEMNED","RTF_DEAD","RTF_DELCLONE","RTF_DONE","RTF_DYNAMIC","RTF_GATEWAY","RTF_GLOBAL","RTF_HOST","RTF_IFREF","RTF_IFSCOPE","RTF_LLINFO","RTF_LOCAL","RTF_MODIFIED","RTF_MULTICAST","RTF_NOIFREF","RTF_PINNED","RTF_PRCLONING","RTF_PROTO1","RTF_PROTO2","RTF_PROTO3","RTF_PROXY","RTF_REJECT","RTF_ROUTER","RTF_STATIC","RTF_UP","RTF_WASCLONED","RTF_XRESOLVE","RTLD_DEFAULT","RTLD_FIRST","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTLD_SELF","RTM_ADD","RTM_CHANGE","RTM_DELADDR","RTM_DELETE","RTM_DELMADDR","RTM_GET","RTM_GET2","RTM_IFINFO","RTM_IFINFO2","RTM_LOCK","RTM_LOSING","RTM_MISS","RTM_NEWADDR","RTM_NEWMADDR","RTM_NEWMADDR2","RTM_OLDADD","RTM_OLDDEL","RTM_REDIRECT","RTM_RESOLVE","RTM_VERSION","RTV_EXPIRE","RTV_HOPCOUNT","RTV_MTU","RTV_RPIPE","RTV_RTT","RTV_RTTVAR","RTV_SPIPE","RTV_SSTHRESH","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_INFO_V0","RUSAGE_INFO_V1","RUSAGE_INFO_V2","RUSAGE_INFO_V3","RUSAGE_INFO_V4","RUSAGE_SELF","R_OK","SAE_ASSOCID_ALL","SAE_ASSOCID_ANY","SAE_CONNID_ALL","SAE_CONNID_ANY","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCALE_PPM","SCHED_FIFO","SCHED_OTHER","SCHED_RR","SCM_CREDS","SCM_RIGHTS","SCM_TIMESTAMP","SEEK_CUR","SEEK_END","SEEK_SET","SEM_FAILED","SEM_UNDO","SETALL","SETVAL","SF_APPEND","SF_ARCHIVED","SF_IMMUTABLE","SF_SETTABLE","SHMLBA","SHM_R","SHM_RDONLY","SHM_RND","SHM_W","SHUTDOWN_TIME","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEMT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGFPE","SIGHUP","SIGILL","SIGINFO","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGNATURE","SIGPIPE","SIGPROF","SIGQUIT","SIGSEGV","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCGIFADDR","SOCK_DGRAM","SOCK_MAXADDRLEN","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOL_LOCAL","SOL_SOCKET","SOMAXCONN","SO_ACCEPTCONN","SO_BROADCAST","SO_DEBUG","SO_DONTROUTE","SO_DONTTRUNC","SO_ERROR","SO_KEEPALIVE","SO_LABEL","SO_LINGER","SO_LINGER_SEC","SO_NKE","SO_NOADDRERR","SO_NOSIGPIPE","SO_NOTIFYCONFLICT","SO_NP_EXTENSIONS","SO_NREAD","SO_NWRITE","SO_OOBINLINE","SO_PEERLABEL","SO_RANDOMPORT","SO_RCVBUF","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_REUSEPORT","SO_REUSESHAREUID","SO_SNDBUF","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMP_MONOTONIC","SO_TYPE","SO_USELOOPBACK","SO_WANTMORE","SO_WANTOOBFLAG","SS_DISABLE","SS_ONSTACK","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","ST_NOSUID","ST_RDONLY","SUPERPAGE_NONE","SUPERPAGE_SIZE_2MB","SUPERPAGE_SIZE_ANY","SYSDIR_DIRECTORY_ADMIN_APPLICATION","SYSDIR_DIRECTORY_ALL_APPLICATIONS","SYSDIR_DIRECTORY_ALL_LIBRARIES","SYSDIR_DIRECTORY_APPLICATION","SYSDIR_DIRECTORY_APPLICATION_SUPPORT","SYSDIR_DIRECTORY_AUTOSAVED_INFORMATION","SYSDIR_DIRECTORY_CACHES","SYSDIR_DIRECTORY_CORESERVICE","SYSDIR_DIRECTORY_DEMO_APPLICATION","SYSDIR_DIRECTORY_DESKTOP","SYSDIR_DIRECTORY_DEVELOPER","SYSDIR_DIRECTORY_DEVELOPER_APPLICATION","SYSDIR_DIRECTORY_DOCUMENT","SYSDIR_DIRECTORY_DOCUMENTATION","SYSDIR_DIRECTORY_DOWNLOADS","SYSDIR_DIRECTORY_INPUT_METHODS","SYSDIR_DIRECTORY_LIBRARY","SYSDIR_DIRECTORY_MOVIES","SYSDIR_DIRECTORY_MUSIC","SYSDIR_DIRECTORY_PICTURES","SYSDIR_DIRECTORY_PREFERENCE_PANES","SYSDIR_DIRECTORY_PRINTER_DESCRIPTION","SYSDIR_DIRECTORY_SHARED_PUBLIC","SYSDIR_DIRECTORY_USER","SYSDIR_DOMAIN_MASK_ALL","SYSDIR_DOMAIN_MASK_LOCAL","SYSDIR_DOMAIN_MASK_NETWORK","SYSDIR_DOMAIN_MASK_SYSTEM","SYSDIR_DOMAIN_MASK_USER","SYSPROTO_CONTROL","SYSPROTO_EVENT","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TASK_THREAD_TIMES_INFO","TASK_THREAD_TIMES_INFO_COUNT","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_FASTOPEN","TCP_KEEPALIVE","TCP_KEEPCNT","TCP_KEEPINTVL","TCP_MAXSEG","TCP_NODELAY","TCP_NOOPT","TCP_NOPUSH","TCSADRAIN","TCSAFLUSH","TCSANOW","THOUSEP","THREAD_AFFINITY_POLICY","THREAD_AFFINITY_POLICY_COUNT","THREAD_AFFINITY_TAG_NULL","THREAD_BACKGROUND_POLICY","THREAD_BACKGROUND_POLICY_COUNT","THREAD_BACKGROUND_POLICY_DARWIN_BG","THREAD_BASIC_INFO","THREAD_BASIC_INFO_COUNT","THREAD_EXTENDED_INFO","THREAD_EXTENDED_INFO_COUNT","THREAD_EXTENDED_POLICY","THREAD_EXTENDED_POLICY_COUNT","THREAD_IDENTIFIER_INFO","THREAD_IDENTIFIER_INFO_COUNT","THREAD_LATENCY_QOS_POLICY","THREAD_LATENCY_QOS_POLICY_COUNT","THREAD_PRECEDENCE_POLICY","THREAD_PRECEDENCE_POLICY_COUNT","THREAD_STANDARD_POLICY","THREAD_STANDARD_POLICY_COUNT","THREAD_THROUGHPUT_QOS_POLICY","THREAD_THROUGHPUT_QOS_POLICY_COUNT","THREAD_TIME_CONSTRAINT_POLICY","THREAD_TIME_CONSTRAINT_POLICY_COUNT","TH_FLAGS_GLOBAL_FORCED_IDLE","TH_FLAGS_IDLE","TH_FLAGS_SWAPPED","TH_STATE_HALTED","TH_STATE_RUNNING","TH_STATE_STOPPED","TH_STATE_UNINTERRUPTIBLE","TH_STATE_WAITING","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCDTR","TIOCCONS","TIOCDCDTIMESTAMP","TIOCDRAIN","TIOCDSIMICROCODE","TIOCEXCL","TIOCEXT","TIOCFLUSH","TIOCGDRAINWAIT","TIOCGETD","TIOCGPGRP","TIOCGWINSZ","TIOCIXOFF","TIOCIXON","TIOCMBIC","TIOCMBIS","TIOCMGDTRWAIT","TIOCMGET","TIOCMODG","TIOCMODS","TIOCMSDTRWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCPTYGNAME","TIOCPTYGRANT","TIOCPTYUNLK","TIOCREMOTE","TIOCSBRK","TIOCSCONS","TIOCSCTTY","TIOCSDRAINWAIT","TIOCSDTR","TIOCSETD","TIOCSIG","TIOCSPGRP","TIOCSTART","TIOCSTAT","TIOCSTI","TIOCSTOP","TIOCSWINSZ","TIOCTIMESTAMP","TIOCUCNTL","TMP_MAX","TOSTOP","T_FMT","T_FMT_AMPM","UF_APPEND","UF_COMPRESSED","UF_HIDDEN","UF_IMMUTABLE","UF_NODUMP","UF_OPAQUE","UF_SETTABLE","UF_TRACKED","USER_BC_BASE_MAX","USER_BC_DIM_MAX","USER_BC_SCALE_MAX","USER_BC_STRING_MAX","USER_COLL_WEIGHTS_MAX","USER_CS_PATH","USER_EXPR_NEST_MAX","USER_LINE_MAX","USER_MAXID","USER_POSIX2_CHAR_TERM","USER_POSIX2_C_BIND","USER_POSIX2_C_DEV","USER_POSIX2_FORT_DEV","USER_POSIX2_FORT_RUN","USER_POSIX2_LOCALEDEF","USER_POSIX2_SW_DEV","USER_POSIX2_UPE","USER_POSIX2_VERSION","USER_PROCESS","USER_RE_DUP_MAX","USER_STREAM_MAX","USER_TZNAME_MAX","USRQUOTA","UTIME_NOW","UTIME_OMIT","UTUN_OPT_FLAGS","UTUN_OPT_IFNAME","VDISCARD","VDSUSP","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VM_FLAGS_ALIAS_MASK","VM_FLAGS_ANYWHERE","VM_FLAGS_FIXED","VM_FLAGS_NO_CACHE","VM_FLAGS_OVERWRITE","VM_FLAGS_PURGABLE","VM_FLAGS_RANDOM_ADDR","VM_FLAGS_RESILIENT_CODESIGN","VM_FLAGS_RESILIENT_MEDIA","VM_FLAGS_RETURN_4K_DATA_ADDR","VM_FLAGS_RETURN_DATA_ADDR","VM_FLAGS_SUPERPAGE_MASK","VM_FLAGS_SUPERPAGE_NONE","VM_FLAGS_SUPERPAGE_SHIFT","VM_FLAGS_SUPERPAGE_SIZE_2MB","VM_FLAGS_SUPERPAGE_SIZE_ANY","VM_FLAGS_USER_ALLOCATE","VM_FLAGS_USER_MAP","VM_FLAGS_USER_REMAP","VM_LOADAVG","VM_MACHFACTOR","VM_MAKE_TAG","VM_MAXID","VM_MEMORY_ACCELERATE","VM_MEMORY_ANALYSIS_TOOL","VM_MEMORY_APPKIT","VM_MEMORY_APPLICATION_SPECIFIC_1","VM_MEMORY_APPLICATION_SPECIFIC_16","VM_MEMORY_ASL","VM_MEMORY_ASSETSD","VM_MEMORY_ATS","VM_MEMORY_CARBON","VM_MEMORY_CGIMAGE","VM_MEMORY_COREDATA","VM_MEMORY_COREDATA_OBJECTIDS","VM_MEMORY_COREGRAPHICS","VM_MEMORY_COREGRAPHICS_BACKINGSTORES","VM_MEMORY_COREGRAPHICS_DATA","VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","VM_MEMORY_COREGRAPHICS_MISC","VM_MEMORY_COREGRAPHICS_SHARED","VM_MEMORY_COREGRAPHICS_XALLOC","VM_MEMORY_COREIMAGE","VM_MEMORY_COREPROFILE","VM_MEMORY_CORESERVICES","VM_MEMORY_COREUI","VM_MEMORY_COREUIFILE","VM_MEMORY_CORPSEINFO","VM_MEMORY_DHMM","VM_MEMORY_DYLD","VM_MEMORY_DYLD_MALLOC","VM_MEMORY_DYLIB","VM_MEMORY_FOUNDATION","VM_MEMORY_GENEALOGY","VM_MEMORY_GLSL","VM_MEMORY_GUARD","VM_MEMORY_IMAGEIO","VM_MEMORY_IOKIT","VM_MEMORY_JAVA","VM_MEMORY_JAVASCRIPT_CORE","VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","VM_MEMORY_LAYERKIT","VM_MEMORY_LIBDISPATCH","VM_MEMORY_MACH_MSG","VM_MEMORY_MALLOC","VM_MEMORY_MALLOC_HUGE","VM_MEMORY_MALLOC_LARGE","VM_MEMORY_MALLOC_LARGE_REUSABLE","VM_MEMORY_MALLOC_LARGE_REUSED","VM_MEMORY_MALLOC_NANO","VM_MEMORY_MALLOC_SMALL","VM_MEMORY_MALLOC_TINY","VM_MEMORY_OBJC_DISPATCHERS","VM_MEMORY_OPENCL","VM_MEMORY_OS_ALLOC_ONCE","VM_MEMORY_RAWCAMERA","VM_MEMORY_REALLOC","VM_MEMORY_SBRK","VM_MEMORY_SCENEKIT","VM_MEMORY_SHARED_PMAP","VM_MEMORY_SKYWALK","VM_MEMORY_SQLITE","VM_MEMORY_STACK","VM_MEMORY_SWIFT_METADATA","VM_MEMORY_SWIFT_RUNTIME","VM_MEMORY_TCMALLOC","VM_MEMORY_UNSHARED_PMAP","VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","VM_METER","VM_PAGE_QUERY_PAGE_COPIED","VM_PAGE_QUERY_PAGE_CS_NX","VM_PAGE_QUERY_PAGE_CS_TAINTED","VM_PAGE_QUERY_PAGE_CS_VALIDATED","VM_PAGE_QUERY_PAGE_DIRTY","VM_PAGE_QUERY_PAGE_EXTERNAL","VM_PAGE_QUERY_PAGE_FICTITIOUS","VM_PAGE_QUERY_PAGE_PAGED_OUT","VM_PAGE_QUERY_PAGE_PRESENT","VM_PAGE_QUERY_PAGE_REF","VM_PAGE_QUERY_PAGE_SPECULATIVE","VM_PROT_EXECUTE","VM_PROT_NONE","VM_PROT_READ","VM_PROT_WRITE","VM_SWAPUSAGE","VQUIT","VREPRINT","VSTART","VSTATUS","VSTOP","VSUSP","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_OK","XATTR_CREATE","XATTR_NODEFAULT","XATTR_NOFOLLOW","XATTR_NOSECURITY","XATTR_REPLACE","XATTR_SHOWCOMPRESSION","XUCRED_VERSION","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_NSGetEnviron","_NSGetExecutablePath","_PC_CHOWN_RESTRICTED","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_VDISABLE","_POSIX_VDISABLE","_PTHREAD_COND_SIG_init","_PTHREAD_MUTEX_SIG_init","_PTHREAD_RWLOCK_SIG_init","_RLIMIT_POSIX_FLAG","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FILE_LOCKING","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_UTX_HOSTSIZE","_UTX_IDSIZE","_UTX_LINESIZE","_UTX_USERSIZE","_WSTATUS","_WSTOPPED","__PTHREAD_CONDATTR_SIZE__","__PTHREAD_COND_SIZE__","__PTHREAD_MUTEX_SIZE__","__PTHREAD_RWLOCKATTR_SIZE__","__PTHREAD_RWLOCK_SIZE__","__cpsr","__darwin_arm_exception_state64","__darwin_arm_neon_state64","__darwin_arm_thread_state64","__darwin_mcontext64","__error","__es","__esr","__exception","__far","__fp","__fpcr","__fpsr","__lr","__ns","__pad","__pc","__sp","__ss","__v","__x","_dyld_get_image_header","_dyld_get_image_name","_dyld_get_image_vmaddr_slide","_dyld_image_count","_exit","_key","_seq","abort","abs","accept","access","acct","actime","active_count","active_count","address","addrinfo","affinity_tag","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arc4random","arc4random_buf","arc4random_uniform","arphdr","array","atexit","atof","atoi","backtrace","bh_caplen","bh_datalen","bh_hdrlen","bh_tstamp","bind","blkcnt_t","blksize_t","blocks_in_use","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpf_hdr","brk","bsearch","buf","bytes_free","bytes_total","bytes_used","c_cc","c_cflag","c_char","c_double","c_float","c_iflag","c_int","c_ispeed","c_lflag","c_long","c_longlong","c_oflag","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","cc_t","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","chdir","chflags","chmod","chown","chroot","chunks_free","chunks_used","clearerr","clock_getres","clock_gettime","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clonefile","clonefileat","close","closedir","closelog","cmd","cmd","cmd","cmdsize","cmdsize","cmdsize","cmsg_len","cmsg_level","cmsg_type","cmsghdr","compressions","compressor_page_count","computation","connect","connectx","constant","constraint","cow_faults","cow_faults","cpu_subtype","cpu_subtype_t","cpu_ticks","cpu_type","cpu_type_t","cpu_usage","cpusubtype","cpusubtype","cputype","cputype","cr_groups","cr_ngroups","cr_uid","cr_version","creat","cuid","currency_symbol","d_ino","d_name","d_namlen","d_reclen","d_seekoff","d_type","data","data","decimal_point","decompressions","default_policy","denom","dev_t","difftime","dirent","dirfd","disconnectx","dispatch_qaddr","dladdr","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlopen","dlsym","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curbytes","dqb_curinodes","dqb_id","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_spare","dqblk","dup","dup2","duplocale","e_tdev","e_tpgid","endgrent","endpwent","endservent","endutxent","errcnt","esterror","esterror","events","exchangedata","execl","execle","execlp","execv","execve","execvp","exit","ext","external_page_count","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_favail","f_ffree","f_ffree","f_files","f_files","f_flag","f_flags","f_frsize","f_fsid","f_fsid","f_fssubtype","f_fstypename","f_iosize","f_mntfromname","f_mntonname","f_namemax","f_owner","f_reserved","f_type","faccessat","faults","faults","fchdir","fchflags","fchmod","fchmodat","fchown","fchownat","fclonefileat","fclose","fcntl","fd","fd_set","fdopen","fdopendir","feof","ferror","fflags","fflags","fflush","fgetc","fgetpos","fgets","fgetxattr","fileno","fileoff","fileoff","filesize","filesize","filetype","filetype","filter","filter","flags","flags","flags","flags","flags","flags","flags","flistxattr","flock","flock","fmemopen","fmt","fopen","fork","forkpty","fpathconf","fpos_t","fprintf","fputc","fputs","frac_digits","fread","free","free_count","free_count","freeaddrinfo","freeifaddrs","freelocale","fremovexattr","freopen","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fseek","fseeko","fsetpos","fsetxattr","fsfilcnt_t","fsid_t","fst_bytesalloc","fst_flags","fst_length","fst_offset","fst_posmode","fstat","fstatat","fstatfs","fstatvfs","fstore_t","fsync","ftell","ftello","ftok","ftruncate","futimens","futimes","fwrite","gai_strerror","getaddrinfo","getchar","getchar_unlocked","getcwd","getdomainname","getdtablesize","getegid","getenv","geteuid","getfsstat","getgid","getgrent","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","gethostuuid","getifaddrs","getitimer","getline","getloadavg","getlogin","getmntinfo","getnameinfo","getopt","getpeereid","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprogname","getprotobyname","getprotobynumber","getpwent","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrlimit","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid_t","gl_offs","gl_pathc","gl_pathv","glob","glob_t","globfree","gmtime","gmtime_r","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","group","grouping","h_addr_list","h_addrtype","h_aliases","h_length","h_name","hdr_cnt","headers","hits","hits","host_flavor_t","host_info64_t","host_info_t","host_processor_info","host_statistics","host_statistics64","host_t","hostent","hstrerror","iconv","iconv_close","iconv_open","iconv_t","id_t","ident","ident","idtype_t","if_data","if_data64","if_freenameindex","if_index","if_indextoname","if_msghdr","if_msghdr2","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_dstaddr","ifa_flags","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifi_addrlen","ifi_addrlen","ifi_baudrate","ifi_baudrate","ifi_collisions","ifi_collisions","ifi_hdrlen","ifi_hdrlen","ifi_hwassist","ifi_ibytes","ifi_ibytes","ifi_ierrors","ifi_ierrors","ifi_imcasts","ifi_imcasts","ifi_ipackets","ifi_ipackets","ifi_iqdrops","ifi_iqdrops","ifi_lastchange","ifi_lastchange","ifi_metric","ifi_metric","ifi_mtu","ifi_mtu","ifi_noproto","ifi_noproto","ifi_obytes","ifi_obytes","ifi_oerrors","ifi_oerrors","ifi_omcasts","ifi_omcasts","ifi_opackets","ifi_opackets","ifi_physical","ifi_physical","ifi_recvquota","ifi_recvquota","ifi_recvtiming","ifi_recvtiming","ifi_reserved1","ifi_reserved2","ifi_type","ifi_type","ifi_typelen","ifi_typelen","ifi_unused1","ifi_unused1","ifi_unused2","ifi_xmitquota","ifi_xmitquota","ifi_xmittiming","ifi_xmittiming","ifm_addrs","ifm_addrs","ifm_data","ifm_data","ifm_flags","ifm_flags","ifm_index","ifm_index","ifm_msglen","ifm_msglen","ifm_snd_drops","ifm_snd_len","ifm_snd_maxlen","ifm_timer","ifm_type","ifm_type","ifm_version","ifm_version","importance","imr_interface","imr_multiaddr","in6_addr","in6_pktinfo","in_addr","in_addr_t","in_pktinfo","in_port_t","inactive_count","inactive_count","initgroups","initprot","initprot","ino_t","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","integer_t","internal_page_count","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","iov_base","iov_len","iovec","ip_mreq","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","is_master","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_value","itimerval","jitcnt","jitter","kCCAlignmentError","kCCBufferTooSmall","kCCCallSequenceError","kCCDecodeError","kCCInvalidKey","kCCKeySizeError","kCCMemoryFailure","kCCOverflow","kCCParamError","kCCRNGFailure","kCCSuccess","kCCUnimplemented","kCCUnspecifiedError","kern_return_t","kevent","kevent","kevent64","kevent64_s","key_t","kill","killpg","kqueue","l_len","l_linger","l_onoff","l_pid","l_start","l_type","l_whence","labs","lchown","lconv","linger","link","linkat","lio_listio","listen","listxattr","load_average","load_command","locale_t","localeconv","localeconv_l","localtime","localtime_r","lockf","login_tty","lookups","lookups","lseek","lstat","lutimes","mach_absolute_time","mach_factor","mach_header","mach_header_64","mach_host_self","mach_msg_type_number_t","mach_port_t","mach_task_basic_info","mach_task_basic_info_data_t","mach_task_basic_info_t","mach_task_self","mach_task_self_","mach_thread_self","mach_timebase_info","mach_timebase_info","mach_timebase_info_data_t","mach_vm_address_t","mach_vm_map","mach_vm_offset_t","mach_vm_size_t","machine","madvise","magic","magic","malloc","malloc_default_zone","malloc_printf","malloc_statistics_t","malloc_zone_calloc","malloc_zone_check","malloc_zone_free","malloc_zone_from_ptr","malloc_zone_log","malloc_zone_malloc","malloc_zone_print","malloc_zone_print_ptr_info","malloc_zone_realloc","malloc_zone_statistics","malloc_zone_t","malloc_zone_valloc","max_align_t","max_size_in_use","maxerror","maxerror","maxprot","maxprot","mcontext_t","mem_entry_name_port_t","memchr","memcmp","memcpy","memmem","memmove","memory_object_offset_t","memory_object_t","memset","memset_pattern16","memset_pattern4","memset_pattern8","memset_s","microseconds","mincore","mkdir","mkdirat","mkdtemp","mkfifo","mknod","mkstemp","mkstemps","mktime","mlock","mlockall","mmap","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","mstats","mstats","msync","munlock","munlockall","munmap","n_cs_precedes","n_sep_by_space","n_sign_posn","nanosleep","natural_t","ncmds","ncmds","negative_sign","newlocale","nfds_t","nice","nl_item","nl_langinfo","nlink_t","no_data","nodename","nsects","nsects","ntp_adjtime","ntp_gettime","ntptimeval","numer","off_t","offset","open","open_memstream","open_wmemstream","openat","opendir","openlog","openpty","p_aliases","p_cs_precedes","p_name","p_proto","p_sep_by_space","p_sign_posn","pageins","pageins","pageouts","pageouts","passwd","pathconf","pause","pbi_comm","pbi_flags","pbi_gid","pbi_name","pbi_nfiles","pbi_nice","pbi_pgid","pbi_pid","pbi_pjobc","pbi_ppid","pbi_rgid","pbi_ruid","pbi_start_tvsec","pbi_start_tvusec","pbi_status","pbi_svgid","pbi_svuid","pbi_uid","pbi_xstatus","pbsd","pclose","period","perror","pid_t","pipe","policy","policy","policy_t","poll","pollfd","popen","positive_sign","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppsfreq","pread","preadv","precision","preemptible","printf","priority","proc_bsdinfo","proc_kmsgbuf","proc_libversion","proc_listallpids","proc_listchildpids","proc_listpgrppids","proc_listpids","proc_name","proc_pid_rusage","proc_pidfdinfo","proc_pidfileportinfo","proc_pidinfo","proc_pidpath","proc_regionfilename","proc_set_csm","proc_set_no_smt","proc_setthread_csm","proc_setthread_no_smt","proc_taskallinfo","proc_taskinfo","proc_threadinfo","proc_vnodepathinfo","processor_basic_info","processor_basic_info_data_t","processor_basic_info_t","processor_count","processor_cpu_load_info","processor_cpu_load_info_data_t","processor_cpu_load_info_t","processor_flavor_t","processor_info_array_t","processor_info_t","processor_set_basic_info","processor_set_basic_info_data_t","processor_set_basic_info_t","processor_set_load_info","processor_set_load_info_data_t","processor_set_load_info_t","protoent","pselect","pseudo_AF_HDRCMPLT","pseudo_AF_KEY","pseudo_AF_PIP","pseudo_AF_RTIP","pseudo_AF_XTP","pth_cpu_usage","pth_cpu_usage","pth_curpri","pth_curpri","pth_flags","pth_flags","pth_maxpriority","pth_maxpriority","pth_name","pth_name","pth_policy","pth_policy","pth_priority","pth_priority","pth_run_state","pth_run_state","pth_sleep_time","pth_sleep_time","pth_system_time","pth_system_time","pth_user_time","pth_user_time","pthread_atfork","pthread_attr_destroy","pthread_attr_get_qos_class_np","pthread_attr_getschedparam","pthread_attr_init","pthread_attr_set_qos_class_np","pthread_attr_setdetachstate","pthread_attr_setschedparam","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setpshared","pthread_condattr_t","pthread_cpu_number_np","pthread_create","pthread_create_from_mach_thread","pthread_detach","pthread_exit","pthread_from_mach_thread_np","pthread_get_qos_class_np","pthread_get_stackaddr_np","pthread_get_stacksize_np","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_introspection_getspecific_np","pthread_introspection_hook_install","pthread_introspection_hook_t","pthread_introspection_setspecific_np","pthread_jit_write_protect_np","pthread_jit_write_protect_supported_np","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mach_thread_np","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getpshared","pthread_mutexattr_init","pthread_mutexattr_setpshared","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_set_qos_class_self_np","pthread_setname_np","pthread_setschedparam","pthread_setspecific","pthread_sigmask","pthread_t","pthread_threadid_np","pti_cow_faults","pti_csw","pti_faults","pti_messages_received","pti_messages_sent","pti_numrunning","pti_pageins","pti_policy","pti_priority","pti_resident_size","pti_syscalls_mach","pti_syscalls_unix","pti_threadnum","pti_threads_system","pti_threads_user","pti_total_system","pti_total_user","pti_virtual_size","ptinfo","ptrace","ptrdiff_t","ptsname","purgeable_count","purgeable_count","purges","purges","putchar","putchar_unlocked","putenv","puts","pututxline","pvi_cdir","pvi_rdir","pw_change","pw_class","pw_dir","pw_expire","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwritev","qos_class_t","qsort","querylocale","quotactl","ra_count","ra_offset","radvisory","raise","rand","reactivations","reactivations","read","readdir","readdir_r","readlink","readlinkat","readv","realloc","realpath","recv","recvfrom","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","release","remove","removexattr","rename","renameat","renameatx_np","renamex_np","res_init","reserved","resident_size","resident_size_max","revents","rewind","rewinddir","rfu_1","ri_billed_energy","ri_billed_system_time","ri_billed_system_time","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_cpu_time_qos_background","ri_cpu_time_qos_background","ri_cpu_time_qos_default","ri_cpu_time_qos_default","ri_cpu_time_qos_legacy","ri_cpu_time_qos_legacy","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_utility","ri_cpu_time_qos_utility","ri_cycles","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_instructions","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interval_max_phys_footprint","ri_lifetime_max_phys_footprint","ri_logical_writes","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_runnable_time","ri_serviced_energy","ri_serviced_system_time","ri_serviced_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","rlim_cur","rlim_max","rlim_t","rlimit","rm_eo","rm_so","rmdir","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","run_state","running","rusage","rusage_info_t","rusage_info_v0","rusage_info_v1","rusage_info_v2","rusage_info_v3","rusage_info_v4","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_endpoints_t","sa_family","sa_family_t","sa_flags","sa_len","sa_mask","sa_sigaction","sae_associd_t","sae_connid_t","sae_dstaddr","sae_dstaddrlen","sae_srcaddr","sae_srcaddrlen","sae_srcif","sbrk","sc_family","sc_id","sc_len","sc_reserved","sc_unit","scanf","sched_get_priority_max","sched_get_priority_min","sched_param","sched_priority","sched_yield","sdl_alen","sdl_data","sdl_family","sdl_index","sdl_len","sdl_nlen","sdl_slen","sdl_type","seconds","seekdir","segment_command","segment_command_64","segname","segname","select","sem_base","sem_close","sem_ctime","sem_flg","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_pad1","sem_pad2","sem_pad3","sem_perm","sem_post","sem_t","sem_trywait","sem_unlink","sem_wait","sembuf","semctl","semget","semid_ds","semop","semun","send","sendfile","sendmsg","sendto","servent","setbuf","setdomainname","setegid","setenv","seteuid","setgid","setgrent","setgroups","sethostid","sethostname","setitimer","setlocale","setlogmask","setpgid","setpriority","setprogname","setpwent","setrlimit","setservent","setsid","setsockopt","settimeofday","setuid","setutxent","setvbuf","setxattr","sf_hdtr","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_internal","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_addr","si_code","si_errno","si_pid","si_pid","si_signo","si_status","si_status","si_uid","si_uid","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_attributes","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","sigpending","sigprocmask","sigset_t","sigval","sigwait","sin6_addr","sin6_family","sin6_flowinfo","sin6_len","sin6_port","sin6_scope_id","sin_addr","sin_addr","sin_family","sin_family","sin_len","sin_len","sin_other","sin_port","sin_port","sin_srcaddr","sin_tos","sin_zero","sival_ptr","size","size_allocated","size_in_use","size_t","sizeofcmds","sizeofcmds","sleep","sleep_time","slot_num","snprintf","sockaddr","sockaddr_ctl","sockaddr_dl","sockaddr_in","sockaddr_in6","sockaddr_inarp","sockaddr_storage","sockaddr_un","socket","socketpair","socklen_t","speculative_count","speculative_count","speed_t","sprintf","srand","ss_family","ss_flags","ss_len","ss_size","ss_sp","ss_sysaddr","sscanf","ssize_t","st_atime","st_atime_nsec","st_birthtime","st_birthtime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_flags","st_gen","st_gid","st_ino","st_lspare","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_qspare","st_rdev","st_size","st_uid","stabil","stack_t","stat","stat","statfs","statfs","status","statvfs","statvfs","stbcnt","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strpbrk","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtol","strtoul","strxfrm","sun_family","sun_len","sun_path","suseconds_t","suspend_count","suspend_count","swapins","swapouts","symlink","symlinkat","sync","syscall","sysconf","sysctl","sysctlbyname","sysctlnametomib","sysdir_get_next_search_path_enumeration","sysdir_search_path_directory_t","sysdir_search_path_domain_mask_t","sysdir_search_path_enumeration_state","sysdir_start_search_path_enumeration","syslog","sysname","system","system_time","system_time","system_time","tai","task_count","task_flavor_t","task_for_pid","task_info","task_info_t","task_t","task_thread_times_info","task_thread_times_info_data_t","task_thread_times_info_t","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","telldir","termios","thousands_sep","thread_affinity_policy","thread_affinity_policy_data_t","thread_affinity_policy_t","thread_background_policy","thread_background_policy_data_t","thread_background_policy_t","thread_basic_info","thread_basic_info_data_t","thread_basic_info_t","thread_count","thread_extended_info","thread_extended_info_data_t","thread_extended_info_t","thread_extended_policy","thread_extended_policy_data_t","thread_extended_policy_t","thread_flavor_t","thread_handle","thread_id","thread_identifier_info","thread_identifier_info_data_t","thread_identifier_info_t","thread_info","thread_info_t","thread_inspect_t","thread_latency_qos_policy","thread_latency_qos_policy_data_t","thread_latency_qos_policy_t","thread_latency_qos_t","thread_latency_qos_tier","thread_policy_flavor_t","thread_policy_get","thread_policy_set","thread_policy_t","thread_precedence_policy","thread_precedence_policy_data_t","thread_precedence_policy_t","thread_standard_policy","thread_standard_policy_data_t","thread_standard_policy_t","thread_t","thread_throughput_qos_policy","thread_throughput_qos_policy_data_t","thread_throughput_qos_policy_t","thread_throughput_qos_t","thread_throughput_qos_tier","thread_time_constraint_policy","thread_time_constraint_policy_data_t","thread_time_constraint_policy_t","throttled_count","time","time","time_state","time_t","time_value_t","timegm","times","timeshare","timespec","timeval","timeval32","timex","timezone","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","total_uncompressed_pages_in_compressor","toupper","trailers","trl_cnt","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uc_link","uc_mcontext","uc_mcsize","uc_onstack","uc_sigmask","uc_stack","ucontext_t","udata","udata","uid","uid_t","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","uname","ungetc","unlink","unlinkat","unlockpt","unmount","unsetenv","useconds_t","uselocale","user_time","user_time","user_time","usleep","ut_host","ut_id","ut_line","ut_pid","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpx","utmpxname","utsname","uuid_t","val","version","vi_fsid","vi_pad","vi_stat","vi_type","vinfo_stat","vip_path","vip_vi","virtual_size","vm_address_t","vm_deallocate","vm_inherit_t","vm_map_t","vm_offset_t","vm_page_size","vm_prot_t","vm_range_t","vm_size_t","vm_statistics","vm_statistics64","vm_statistics64_data_t","vm_statistics64_t","vm_statistics_data_t","vm_statistics_t","vmaddr","vmaddr","vmsize","vmsize","vnode_info","vnode_info_path","vst_atime","vst_atimensec","vst_birthtime","vst_birthtimensec","vst_blksize","vst_blocks","vst_ctime","vst_ctimensec","vst_dev","vst_flags","vst_gen","vst_gid","vst_ino","vst_mode","vst_mtime","vst_mtimensec","vst_nlink","vst_qspare","vst_rdev","vst_size","vst_uid","wait","wait4","waitid","waitpid","wchar_t","wcslen","wcstombs","winsize","wire_count","wire_count","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xsu_avail","xsu_encrypted","xsu_pagesize","xsu_total","xsu_used","xsw_usage","xucred","zero_fill_count","zero_fill_count"],"q":["libcd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","data includes security that replaces the TFO-cookie","data is idempotent","resume connect() on read/writehird Party Connect","Any distributed FS","IP6 Auth Header","any host internal protocol","any private encr. scheme","Argus","AX.25 Frames","BHA","Bulk Data Transfer","BackRoom SATNET Monitoring","CFTP","Chaos","Control Message Transport","Comp. Prot. HeartBeat","Comp. Prot. Net. Executive","Datagram Delivery","dissimilar gateway prot.","divert pseudo-protocol","last return value of *_input(), meaning “all job for …","IP6 destination option","exterior gateway protocol","EMCON","encapsulation header","ISO cnlp","IP6 Encap Sec. Payload","Ethernet IP encapsulation","IP6 fragmentation header","gateway2 (deprecated)","GMTP","General Routing Encap.","“hello” routing protocol","Host Monitoring","IP6 hop-by-hop options","","","xns idp","InterDomain Policy Routing","InterDomain Routing","group mgmt protocol","NSFNET-IGP","Cisco/GXS IGRP","IL transport protocol","Integ. Net Layer Security","Merit Internodal","","payload compression (IPComp)","Packet Core Utility","IP encapsulated in IP","for compatibility","Pluribus Packet Core","","Reliable Transaction","Kryptolan","Locus Address Resoloution","Leaf-1","Leaf-2","","DCN Measurement Subsystems","Mobile Host Routing","Mobile Int.ing control","Multicast Transport","Multiplexing","Sun net disk proto (temp.)","Next Hop Resolution","IP6 no next header","Network Services","network voice protocol","OSPFIGP","PGM","private interior gateway","Protocol Independent Mcast","Packet Radio Measurement","pup","Packet Video Protocol","raw IP packet","BBN RCC Monitoring","Reliable Data","IP6 routing header","resource reservation","Remote Virtual Disk","SATNET/Backroom EXPAK","Satnet Monitoring","Semaphore Comm. security","SCTP","Source Demand Routing","Sequential Exchange","Strite RPC protocol","Stream protocol II.","Secure VMTP","IP with encryption","TCF","","tp-4 w/ class negotiation","TP++ Transport","Trunk-1","Trunk-2","TTP","","Banyon VINES","VISA Protocol","VMTP","WIDEBAND EXPAK","WIDEBAND Monitoring","Wang Span Network","Cross Net Debuggersae_associd_t)(-1ULL))","","((sae_connid_tnable/Disable TCP Fastopen on this socketquivalent to C’s <code>void</code> type when used as a pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Notesalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cmsghdr",0]],["c_uchar",0]],[[["msghdr",0]],["cmsghdr",0]],[[["c_uint",6]],["c_uint",6]],[[["msghdr",0],["cmsghdr",0]],["cmsghdr",0]],[[["c_uint",6]],["c_uint",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6],["fd_set",0]]],[[["c_int",6],["fd_set",0]],["bool",0]],[[["c_int",6],["fd_set",0]]],null,[[["fd_set",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6],["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",0]],["u32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["bool",0]],null,[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],[[["c_int",6]],["bool",0]],null,null,null,[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dir",4]],["dir",4]],[[["file",4]],["file",4]],[[["fpos_t",4]],["fpos_t",4]],[[["group",3]],["group",3]],[[["utimbuf",3]],["utimbuf",3]],[[["timeval",3]],["timeval",3]],[[["timespec",3]],["timespec",3]],[[["rlimit",3]],["rlimit",3]],[[["rusage",3]],["rusage",3]],[[["ipv6_mreq",3]],["ipv6_mreq",3]],[[["hostent",3]],["hostent",3]],[[["iovec",3]],["iovec",3]],[[["pollfd",3]],["pollfd",3]],[[["winsize",3]],["winsize",3]],[[["linger",3]],["linger",3]],[[["sigval",3]],["sigval",3]],[[["itimerval",3]],["itimerval",3]],[[["tms",3]],["tms",3]],[[["servent",3]],["servent",3]],[[["protoent",3]],["protoent",3]],[[["sockaddr",3]],["sockaddr",3]],[[["sockaddr_in6",3]],["sockaddr_in6",3]],[[["passwd",3]],["passwd",3]],[[["ifaddrs",3]],["ifaddrs",3]],[[["fd_set",3]],["fd_set",3]],[[["tm",3]],["tm",3]],[[["msghdr",3]],["msghdr",3]],[[["cmsghdr",3]],["cmsghdr",3]],[[["fsid_t",3]],["fsid_t",3]],[[["if_nameindex",3]],["if_nameindex",3]],[[["regex_t",3]],["regex_t",3]],[[["regmatch_t",3]],["regmatch_t",3]],[[["sockaddr_un",3]],["sockaddr_un",3]],[[["utsname",3]],["utsname",3]],[[["timezone",4]],["timezone",4]],[[["qos_class_t",4]],["qos_class_t",4]],[[["sysdir_search_path_directory_t",4]],["sysdir_search_path_directory_t",4]],[[["sysdir_search_path_domain_mask_t",4]],["sysdir_search_path_domain_mask_t",4]],[[["ip_mreq",3]],["ip_mreq",3]],[[["aiocb",3]],["aiocb",3]],[[["glob_t",3]],["glob_t",3]],[[["addrinfo",3]],["addrinfo",3]],[[["mach_timebase_info",3]],["mach_timebase_info",3]],[[["stat",3]],["stat",3]],[[["pthread_mutexattr_t",3]],["pthread_mutexattr_t",3]],[[["pthread_condattr_t",3]],["pthread_condattr_t",3]],[[["pthread_rwlockattr_t",3]],["pthread_rwlockattr_t",3]],[[["siginfo_t",3]],["siginfo_t",3]],[[["sigaction",3]],["sigaction",3]],[[["stack_t",3]],["stack_t",3]],[[["fstore_t",3]],["fstore_t",3]],[[["radvisory",3]],["radvisory",3]],[[["statvfs",3]],["statvfs",3]],[[["dl_info",3]],["dl_info",3]],[[["sockaddr_in",3]],["sockaddr_in",3]],[[["kevent64_s",3]],["kevent64_s",3]],[[["dqblk",3]],["dqblk",3]],[[["if_msghdr",3]],["if_msghdr",3]],[[["termios",3]],["termios",3]],[[["flock",3]],["flock",3]],[[["sf_hdtr",3]],["sf_hdtr",3]],[[["lconv",3]],["lconv",3]],[[["proc_taskinfo",3]],["proc_taskinfo",3]],[[["proc_bsdinfo",3]],["proc_bsdinfo",3]],[[["proc_taskallinfo",3]],["proc_taskallinfo",3]],[[["xsw_usage",3]],["xsw_usage",3]],[[["xucred",3]],["xucred",3]],[[["mach_header",3]],["mach_header",3]],[[["mach_header_64",3]],["mach_header_64",3]],[[["segment_command",3]],["segment_command",3]],[[["segment_command_64",3]],["segment_command_64",3]],[[["load_command",3]],["load_command",3]],[[["sockaddr_dl",3]],["sockaddr_dl",3]],[[["sockaddr_inarp",3]],["sockaddr_inarp",3]],[[["sockaddr_ctl",3]],["sockaddr_ctl",3]],[[["in_pktinfo",3]],["in_pktinfo",3]],[[["in6_pktinfo",3]],["in6_pktinfo",3]],[[["ipc_perm",3]],["ipc_perm",3]],[[["sembuf",3]],["sembuf",3]],[[["arphdr",3]],["arphdr",3]],[[["in_addr",3]],["in_addr",3]],[[["sa_endpoints_t",3]],["sa_endpoints_t",3]],[[["timex",3]],["timex",3]],[[["ntptimeval",3]],["ntptimeval",3]],[[["thread_standard_policy",3]],["thread_standard_policy",3]],[[["thread_extended_policy",3]],["thread_extended_policy",3]],[[["thread_time_constraint_policy",3]],["thread_time_constraint_policy",3]],[[["thread_precedence_policy",3]],["thread_precedence_policy",3]],[[["thread_affinity_policy",3]],["thread_affinity_policy",3]],[[["thread_background_policy",3]],["thread_background_policy",3]],[[["thread_latency_qos_policy",3]],["thread_latency_qos_policy",3]],[[["thread_throughput_qos_policy",3]],["thread_throughput_qos_policy",3]],[[["malloc_statistics_t",3]],["malloc_statistics_t",3]],[[["mstats",3]],["mstats",3]],[[["vm_range_t",3]],["vm_range_t",3]],[[["sched_param",3]],["sched_param",3]],[[["vinfo_stat",3]],["vinfo_stat",3]],[[["vnode_info",3]],["vnode_info",3]],[[["vnode_info_path",3]],["vnode_info_path",3]],[[["proc_vnodepathinfo",3]],["proc_vnodepathinfo",3]],[[["vm_statistics",3]],["vm_statistics",3]],[[["task_thread_times_info",3]],["task_thread_times_info",3]],[[["rusage_info_v0",3]],["rusage_info_v0",3]],[[["rusage_info_v1",3]],["rusage_info_v1",3]],[[["rusage_info_v2",3]],["rusage_info_v2",3]],[[["rusage_info_v3",3]],["rusage_info_v3",3]],[[["rusage_info_v4",3]],["rusage_info_v4",3]],[[["kevent",3]],["kevent",3]],[[["semid_ds",3]],["semid_ds",3]],[[["shmid_ds",3]],["shmid_ds",3]],[[["proc_threadinfo",3]],["proc_threadinfo",3]],[[["statfs",3]],["statfs",3]],[[["dirent",3]],["dirent",3]],[[["pthread_rwlock_t",3]],["pthread_rwlock_t",3]],[[["pthread_mutex_t",3]],["pthread_mutex_t",3]],[[["pthread_cond_t",3]],["pthread_cond_t",3]],[[["sockaddr_storage",3]],["sockaddr_storage",3]],[[["utmpx",3]],["utmpx",3]],[[["sigevent",3]],["sigevent",3]],[[["processor_cpu_load_info",3]],["processor_cpu_load_info",3]],[[["processor_basic_info",3]],["processor_basic_info",3]],[[["processor_set_basic_info",3]],["processor_set_basic_info",3]],[[["processor_set_load_info",3]],["processor_set_load_info",3]],[[["time_value_t",3]],["time_value_t",3]],[[["thread_basic_info",3]],["thread_basic_info",3]],[[["thread_identifier_info",3]],["thread_identifier_info",3]],[[["thread_extended_info",3]],["thread_extended_info",3]],[[["if_data64",3]],["if_data64",3]],[[["if_msghdr2",3]],["if_msghdr2",3]],[[["vm_statistics64",3]],["vm_statistics64",3]],[[["mach_task_basic_info",3]],["mach_task_basic_info",3]],[[["semun",19]],["semun",19]],[[["timeval32",3]],["timeval32",3]],[[["if_data",3]],["if_data",3]],[[["bpf_hdr",3]],["bpf_hdr",3]],[[["pthread_attr_t",3]],["pthread_attr_t",3]],[[["malloc_zone_t",3]],["malloc_zone_t",3]],[[["max_align_t",3]],["max_align_t",3]],[[["ucontext_t",3]],["ucontext_t",3]],[[["__darwin_mcontext64",3]],["__darwin_mcontext64",3]],[[["__darwin_arm_exception_state64",3]],["__darwin_arm_exception_state64",3]],[[["__darwin_arm_thread_state64",3]],["__darwin_arm_thread_state64",3]],[[["__darwin_arm_neon_state64",3]],["__darwin_arm_neon_state64",3]],[[["in6_addr",3]],["in6_addr",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_void",4],["formatter",3]],["result",4,[["error",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mach_port_t",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["siginfo_t",3]],["c_void",0]],null,null,null,[[["siginfo_t",3]],["pid_t",6]],null,null,[[["siginfo_t",3]],["c_int",6]],null,[[["siginfo_t",3]],["uid_t",6]],null,[[["siginfo_t",3]],["sigval",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"qos_class_t"],[4,"sysdir_search_path_directory_t"],[4,"sysdir_search_path_domain_mask_t"],[3,"__darwin_arm_thread_state64"],[3,"__darwin_mcontext64"],[3,"__darwin_arm_exception_state64"],[3,"__darwin_arm_neon_state64"],[3,"ipc_perm"],[3,"utimbuf"],[3,"vm_statistics"],[3,"vm_statistics64"],[3,"vm_range_t"],[3,"thread_affinity_policy"],[3,"addrinfo"],[3,"aiocb"],[3,"arphdr"],[19,"semun"],[3,"bpf_hdr"],[3,"malloc_statistics_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[3,"group"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"fd_set"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"fsid_t"],[3,"if_nameindex"],[3,"regex_t"],[3,"regmatch_t"],[3,"sockaddr_un"],[3,"utsname"],[4,"timezone"],[3,"ip_mreq"],[3,"glob_t"],[3,"mach_timebase_info"],[3,"stat"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"sembuf"],[3,"in_addr"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"thread_standard_policy"],[3,"thread_extended_policy"],[3,"thread_time_constraint_policy"],[3,"thread_precedence_policy"],[3,"thread_background_policy"],[3,"thread_latency_qos_policy"],[3,"thread_throughput_qos_policy"],[3,"mstats"],[3,"sched_param"],[3,"vinfo_stat"],[3,"vnode_info"],[3,"vnode_info_path"],[3,"proc_vnodepathinfo"],[3,"task_thread_times_info"],[3,"rusage_info_v0"],[3,"rusage_info_v1"],[3,"rusage_info_v2"],[3,"rusage_info_v3"],[3,"rusage_info_v4"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"processor_cpu_load_info"],[3,"processor_basic_info"],[3,"processor_set_basic_info"],[3,"processor_set_load_info"],[3,"time_value_t"],[3,"thread_basic_info"],[3,"thread_identifier_info"],[3,"thread_extended_info"],[3,"if_data64"],[3,"if_msghdr2"],[3,"mach_task_basic_info"],[3,"timeval32"],[3,"if_data"],[3,"pthread_attr_t"],[3,"malloc_zone_t"],[3,"max_align_t"],[3,"ucontext_t"],[3,"in6_addr"],[4,"c_void"]]},\
"numtoa":{"doc":"The standard library provides a convenient method of …","t":[8,10,10],"n":["NumToA","numtoa","numtoa_str"],"q":["numtoa","",""],"d":["Converts a number into a string representation, storing …","Given a base for encoding and a mutable byte slice, write …","Convenience method for quickly getting a string from the …"],"i":[0,1,1],"f":[null,[[],["usize",0]],[[],["str",0]]],"p":[[8,"NumToA"]]},\
"ppv_lite86":{"doc":"","t":[8,8,8,8,8,8,8,8,8,8,16,8,8,8,8,8,8,8,8,8,8,8,8,8,10,10,14,14,14,14,10,10,10,0,10,10,10,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,16,10,11,11,10,10,10,11,11,2,2,2,10,10,10,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,3,6,6,3,6,6,6,11,11,11,11,11,11,11,19,3,3,11,11,11,11],"n":["AndNot","ArithOps","BSwap","BitOps0","BitOps128","BitOps32","BitOps64","LaneWords4","Machine","MultiLane","Output","RotateEachWord128","RotateEachWord32","RotateEachWord64","Store","StoreBytes","Swap64","UnsafeFrom","VZip","Vec2","Vec4","Vec4Ext","Vector","Words4","andnot","bswap","dispatch","dispatch_light128","dispatch_light256","dispatch_light512","extract","extract","from_lanes","generic","insert","insert","instance","read_be","read_be","read_le","read_le","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right8","shuffle1230","shuffle2301","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","swap1","swap16","swap2","swap32","swap4","swap64","swap8","to_lanes","to_scalars","transpose4","u128x1","u128x1","u128x2","u128x2","u128x4","u128x4","u32x4","u32x4","u32x4x2","u32x4x2","u32x4x4","u32x4x4","u64x2","u64x2","u64x2x2","u64x2x2","u64x2x4","u64x2x4","u64x4","u64x4","unpack","unpack","unpack","unsafe_from","unsafe_read_be","unsafe_read_le","vec","vec","vec128_storage","vec256_storage","vec512_storage","vzip","write_be","write_le","G0","G1","GenericMachine","add","add","add","add_assign","add_assign","add_assign","andnot","andnot","andnot","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bswap","bswap","bswap","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","eq","eq","eq","eq","eq","extract","extract","extract","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_lanes","from_lanes","from_lanes","from_lanes","insert","insert","insert","instance","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","new128","new128","not","not","not","rotate_each_word_right11","rotate_each_word_right11","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right12","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right16","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right20","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right24","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right25","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right7","rotate_each_word_right7","rotate_each_word_right8","rotate_each_word_right8","rotate_each_word_right8","shuffle1230","shuffle1230","shuffle2301","shuffle2301","shuffle3012","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","split128","split128","swap1","swap1","swap1","swap16","swap16","swap16","swap2","swap2","swap2","swap32","swap32","swap32","swap4","swap4","swap4","swap64","swap64","swap64","swap8","swap8","swap8","to_lanes","to_lanes","to_lanes","to_lanes","to_scalars","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128x1_generic","u128x2_generic","u128x4_generic","u32x4_generic","u32x4x2_generic","u32x4x4_generic","u64x2_generic","u64x2x2_generic","u64x2x4_generic","u64x4_generic","unpack","unpack","unpack","unsafe_read_be","unsafe_read_be","unsafe_read_le","unsafe_read_le","vec128_storage","vec256_storage","vec512_storage","write_be","write_be","write_le","write_le"],"q":["ppv_lite86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ppv_lite86::generic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Ops that depend on word size","","Ops that are independent of word size and endian","","","","A vector composed one or more lanes each composed of four …","","A vector composed of multiple 128-bit lanes.","","","","","","","Exchange neigboring ranges of bits of the specified size","","Combine single vectors into a multi-lane vector.","A vector composed of two elements, which may be words or …","A vector composed of four elements, which may be words or …","Vec4 functions which may not be implemented yet for all …","","A vector composed of four words; depending on their size, …","","","","","","","","","Build a multi-lane vector from individual lanes.","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","Split a multi-lane vector into single-lane vectors.","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,3,4,5,0,3,4,6,6,6,6,6,7,7,7,7,7,7,8,7,7,9,9,9,10,10,10,11,11,11,11,11,11,11,5,12,13,0,6,0,6,0,6,0,6,0,6,0,6,0,6,0,6,0,6,0,6,14,6,6,15,16,16,6,6,0,0,0,17,16,16,0,0,0,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,21,22,23,24,18,19,20,25,26,21,22,23,24,18,19,20,25,26,18,19,20,21,22,23,24,18,19,20,25,26,21,22,23,21,22,23,18,19,20,27,18,19,18,19,20,21,21,21,21,21,21,22,23,24,18,19,20,25,26,27,18,19,20,27,18,19,24,21,22,23,24,18,19,20,25,26,22,23,18,19,20,22,23,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,19,20,18,19,20,18,19,20,27,18,27,18,27,18,18,18,18,22,23,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,27,18,19,20,28,21,22,23,24,18,19,20,25,26,21,22,23,24,18,19,20,25,26,21,22,23,24,18,19,20,25,26,0,0,0,0,0,0,0,0,0,0,18,19,20,18,19,18,19,0,0,0,18,19,18,19],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,[[["u32",0]]],[[["u32",0]]],[[]],null,[[["u32",0]]],[[["u32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["store",8]],[[],["store",8]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["u32x4_generic",3],["u32x4_generic",3]]],[[["u64x2_generic",3],["u64x2_generic",3]]],[[["u128x1_generic",3],["u128x1_generic",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["vec128_storage",19]],["vec128_storage",19]],[[["vec256_storage",3]],["vec256_storage",3]],[[["vec512_storage",3]],["vec512_storage",3]],[[["genericmachine",3]],["genericmachine",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["g0",3]],["g0",3]],[[["g1",3]],["g1",3]],[[],["vec128_storage",19]],[[],["vec256_storage",3]],[[],["vec512_storage",3]],[[["vec128_storage",19],["vec128_storage",19]],["bool",0]],[[["vec256_storage",3],["vec256_storage",3]],["bool",0]],[[["vec512_storage",3],["vec512_storage",3]],["bool",0]],[[["u32x4_generic",3],["u32x4_generic",3]],["bool",0]],[[["u64x2_generic",3],["u64x2_generic",3]],["bool",0]],[[["u128x1_generic",3],["u128x1_generic",3]],["bool",0]],[[["u64x4_generic",6],["u32",0]],["u64",0]],[[["u32x4_generic",3],["u32",0]],["u32",0]],[[["u64x2_generic",3],["u32",0]],["u64",0]],[[["u32x4_generic",3],["formatter",3]],["result",6]],[[["u64x2_generic",3],["formatter",3]],["result",6]],[[["u128x1_generic",3],["formatter",3]],["result",6]],[[["u64x2_generic",3]],["vec128_storage",19]],[[["u128x1_generic",3]],["vec128_storage",19]],[[]],[[],["vec128_storage",19]],[[],["vec128_storage",19]],[[["u32x4_generic",3]],["vec128_storage",19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64x4_generic",6]],[[],["u32x4_generic",3]],[[],["u64x2_generic",3]],[[],["u128x1_generic",3]],[[["u64x4_generic",6],["u64",0],["u32",0]],["u64x4_generic",6]],[[["u32x4_generic",3],["u32",0],["u32",0]],["u32x4_generic",3]],[[["u64x2_generic",3],["u64",0],["u32",0]],["u64x2_generic",3]],[[],["genericmachine",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec256_storage",3],["vec256_storage",3]],["bool",0]],[[["vec512_storage",3],["vec512_storage",3]],["bool",0]],[[["u32x4_generic",3],["u32x4_generic",3]],["bool",0]],[[["u64x2_generic",3],["u64x2_generic",3]],["bool",0]],[[["u128x1_generic",3],["u128x1_generic",3]],["bool",0]],[[],["vec256_storage",3]],[[],["vec512_storage",3]],[[["u32x4_generic",3]]],[[["u64x2_generic",3]]],[[["u128x1_generic",3]]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u64x4_generic",6]],["u64x4_generic",6]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x4_generic",6]],["u64x4_generic",6]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x4_generic",6]],["u64x4_generic",6]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["vec256_storage",3]]],[[["vec512_storage",3]]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u32x4_generic",3]],["u32x4_generic",3]],[[["u64x2_generic",3]],["u64x2_generic",3]],[[["u128x1_generic",3]],["u128x1_generic",3]],[[["u64x4_generic",6]]],[[["u32x4_generic",3]]],[[["u64x2_generic",3]]],[[["u128x1_generic",3]]],[[["u32x4x4_generic",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["vec128_storage",19]],["u32x4_generic",3]],[[["vec128_storage",19]],["u64x2_generic",3]],[[["vec128_storage",19]],["u128x1_generic",3]],[[],["u32x4_generic",3]],[[],["u64x2_generic",3]],[[],["u32x4_generic",3]],[[],["u64x2_generic",3]],null,null,null,[[["u32x4_generic",3]]],[[["u64x2_generic",3]]],[[["u32x4_generic",3]]],[[["u64x2_generic",3]]]],"p":[[8,"AndNot"],[8,"BSwap"],[8,"Vec2"],[8,"Vec4"],[8,"MultiLane"],[8,"Machine"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"Vector"],[8,"Vec4Ext"],[8,"Store"],[8,"UnsafeFrom"],[8,"StoreBytes"],[8,"VZip"],[3,"u32x4_generic"],[3,"u64x2_generic"],[3,"u128x1_generic"],[19,"vec128_storage"],[3,"vec256_storage"],[3,"vec512_storage"],[3,"GenericMachine"],[3,"G0"],[3,"G1"],[6,"u64x4_generic"],[6,"u32x4x4_generic"]]},\
"rand":{"doc":"Utilities for random number generation","t":[18,8,3,8,18,8,8,16,8,11,11,11,0,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,0,5,11,11,0,11,11,11,11,11,0,11,11,5,11,10,11,11,10,11,11,11,11,13,3,3,4,3,3,8,8,13,13,13,3,3,3,3,13,3,4,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,8,8,8,16,3,3,3,3,3,8,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,3,8,11,11,10,11,10,11,11,10,10,11,10,10,11,11,0,11,11,11,11,10,10,11,11,11,11,11,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CUSTOM_START","CryptoRng","Error","Fill","INTERNAL_START","Rng","RngCore","Seed","SeedableRng","borrow","borrow_mut","code","distributions","fill","fill","fill_bytes","fmt","fmt","from","from","from","from_entropy","from_rng","from_seed","gen","gen","gen_bool","gen_bool","gen_range","gen_range","gen_ratio","gen_ratio","inner","into","new","next_u32","next_u64","prelude","random","raw_os_error","read","rngs","sample","sample","sample_iter","sample_iter","seed_from_u64","seq","source","take_inner","thread_rng","to_string","try_fill","try_fill","try_fill","try_fill_bytes","try_from","try_into","type_id","vzip","AllWeightsZero","Alphanumeric","Bernoulli","BernoulliError","DistIter","DistMap","DistString","Distribution","InvalidProbability","InvalidWeight","NoItem","Open01","OpenClosed01","Slice","Standard","TooMany","Uniform","WeightedError","WeightedIndex","append_string","append_string","append_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ratio","into","into","into","into","into","into","into","into","into","into","into_iter","map","map","new","new","next","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_iter","sample_iter","sample_string","sample_string","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weighted","SampleBorrow","SampleRange","SampleUniform","Sampler","Uniform","UniformChar","UniformDuration","UniformFloat","UniformInt","UniformSampler","X","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_empty","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AllWeightsZero","InvalidWeight","NoItem","TooMany","WeightedError","WeightedIndex","alias_method","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","from","from","into","into","new","sample","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_weights","vzip","vzip","Weight","WeightedIndex","borrow","borrow_mut","fmt","from","into","new","try_from","try_into","type_id","vzip","CryptoRng","Distribution","IteratorRandom","Rng","RngCore","SeedableRng","SliceRandom","StdRng","ThreadRng","random","thread_rng","OsRng","StdRng","ThreadRng","adapter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from_rng","from_seed","into","into","into","mock","ne","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ReadError","ReadRng","ReseedingRng","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reseed","source","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","StepRng","borrow","borrow_mut","clone","clone_into","eq","fill_bytes","fmt","from","into","ne","new","next_u32","next_u64","to_owned","try_fill_bytes","try_from","try_into","type_id","vzip","Item","IteratorRandom","SliceChooseIter","SliceRandom","borrow","borrow_mut","choose","choose","choose_multiple","choose_multiple","choose_multiple_fill","choose_multiple_weighted","choose_mut","choose_stable","choose_weighted","choose_weighted_mut","fmt","from","index","into","into_iter","len","next","partial_shuffle","shuffle","size_hint","try_from","try_into","type_id","vzip","IndexVec","IndexVecIntoIter","IndexVecIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","from","from","from","from","from","index","into","into","into","into_iter","into_iter","into_iter","into_vec","is_empty","iter","len","next","next","sample","sample_weighted","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributionsrand::distributions::uniform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions::weighted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions::weighted::alias_method","","","","","","","","","","","","rand::prelude","","","","","","","","","","","rand::rngs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::rngs::adapter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::rngs::mock","","","","","","","","","","","","","","","","","","","","rand::seq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::seq::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Types which may be filled with random data","Codes below this point represent OS Errors (i.e. positive …","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","","","Retrieve the error code, if any.","Generating random samples from probability distributions","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","Returns the argument unchanged.","","","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Return a random value supporting the <code>Standard</code> distribution.","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Return a bool with a probability of <code>numerator/denominator</code> …","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Convenience re-export of common members","Generates a random value using the thread-local random …","Extract the raw OS error code (if this error came from the …","","Random number generators and adapters","Sample a new value, using the given distribution.","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Sequence-related functionality","","Unwrap the inner error (<code>std</code> only)","Retrieve the lazily-initialized thread-local random number …","","Fill self with random data","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","","All items in the provided weight collection are zero.","Sample a <code>u8</code>, uniformly distributed over ASCII letters and …","The Bernoulli distribution.","Error type returned from <code>Bernoulli::new</code>.","An iterator that generates random values of <code>T</code> with …","A distribution of values of type <code>S</code> derived from the …","<code>String</code> sampler","Types (distributions) that can be used to create a random …","<code>p &lt; 0</code> or <code>p &gt; 1</code>.","A weight is either less than zero, greater than the …","The provided weight collection contains no items.","A distribution to sample floating point numbers uniformly …","A distribution to sample floating point numbers uniformly …","A distribution to sample items uniformly from a slice.","A generic random value distribution, implemented for many …","Too many weights are provided (length greater than <code>u32::MAX</code>…","Sample values uniformly between two bounds.","Error type returned from <code>WeightedIndex::new</code>.","A distribution using weighted sampling of discrete items","Append <code>len</code> random chars to <code>string</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new <code>Bernoulli</code> with the probability of success …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a distribution of values of ‘S’ by mapping the …","Create a distribution of values of ‘S’ by mapping the …","Construct a new <code>Bernoulli</code> with the given probability of …","Create a new <code>Slice</code> instance which samples uniformly from …","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates random values of <code>T</code>, …","Generate a <code>String</code> of <code>len</code> random chars","Generate a <code>String</code> of <code>len</code> random chars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A distribution uniformly sampling numbers within a given …","","","","","","","","","","","Weighted index sampling","Helper trait similar to <code>Borrow</code> but implemented only for …","Range that supports generating a single sample efficiently.","Helper trait for creating objects using the correct …","The <code>UniformSampler</code> implementation supporting type <code>X</code>.","Sample values uniformly between two bounds.","The back-end implementing <code>UniformSampler</code> for <code>char</code>.","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.","The back-end implementing <code>UniformSampler</code> for …","The back-end implementing <code>UniformSampler</code> for integer types.","Helper trait handling actual uniform sampling.","The type sampled by this implementation.","Immutably borrows from an owned value. See <code>Borrow::borrow</code>","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the range is empty.","Construct self, with inclusive lower bound and exclusive …","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Construct self, with inclusive bounds <code>[low, high]</code>.","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Sample a value.","","","","","","","","","","","","","","","","","Generate a sample from the given range.","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All items in the provided weight collection are zero.","A weight is either less than zero, greater than the …","The provided weight collection contains no items.","Too many weights are provided (length greater than <code>u32::MAX</code>…","Error type returned from <code>WeightedIndex::new</code>.","A distribution using weighted sampling of discrete items","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new a <code>WeightedIndex</code> <code>Distribution</code> using the values","","","","","","","","","","","Update a subset of weights, without changing the number of …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A random number generator that retrieves randomness from …","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …","A reference to the thread-local generator","Wrappers / adapters forming RNGs","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mock random number generator","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ReadRng</code> error type","An RNG that reads random bytes straight from any type …","A wrapper around any PRNG that implements <code>BlockRngCore</code>, …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>ReadRng</code> from a <code>Read</code>.","Create a new <code>ReseedingRng</code> from an existing PRNG, combined …","","","","","Reseed the internal PRNG.","","","","","","","","","","","","","","","","","","A simple implementation of <code>RngCore</code> for testing purposes.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a <code>StepRng</code>, yielding an arithmetic sequence starting …","","","","","","","","","The element type.","Extension trait on iterators, providing random sampling …","An iterator over multiple slice elements.","Extension trait on slices, providing random mutation and …","","","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Chooses <code>amount</code> elements from the slice at random, without …","Collects <code>amount</code> values at random from the iterator into a …","Collects values at random from the iterator into a …","Similar to <code>choose_multiple</code>, but where the likelihood of …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Similar to <code>choose</code>, but where the likelihood of each …","Similar to <code>choose_mut</code>, but where the likelihood of each …","","Returns the argument unchanged.","Low-level API for sampling indices","Calls <code>U::from(self)</code>.","","","","Shuffle a slice in place, but exit early.","Shuffle a mutable slice in place.","","","","","","A vector of indices.","Return type of <code>IndexVec::into_iter</code>.","Return type of <code>IndexVec::iter</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Return the value at the given <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into an iterator over the indices as a sequence of …","","","Return result as a <code>Vec&lt;usize&gt;</code>. Conversion may or may not …","Returns <code>true</code> if the length is 0.","Iterate over the indices as a sequence of <code>usize</code> values","Returns the number of indices","","","Randomly sample exactly <code>amount</code> distinct indices from …","Randomly sample exactly <code>amount</code> distinct indices from …","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,1,0,0,2,0,1,1,1,0,3,3,4,1,1,1,1,1,2,2,2,3,3,3,3,3,3,3,3,1,1,1,4,4,0,0,1,4,0,3,3,3,3,2,0,1,1,0,1,5,3,3,4,1,1,1,1,6,0,0,0,0,0,0,0,7,6,6,0,0,0,0,6,0,0,0,8,9,10,11,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,10,11,7,14,15,9,16,17,10,11,7,14,15,9,16,17,10,7,11,7,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,17,17,10,11,11,7,12,13,14,15,9,16,17,10,12,18,18,11,16,12,18,11,13,14,14,15,15,9,16,17,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,18,18,8,8,12,11,7,14,15,9,16,17,10,7,11,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,10,11,7,12,13,14,15,9,16,17,10,0,11,7,12,13,14,15,9,16,17,10,0,0,0,0,19,0,0,0,0,0,0,20,21,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,26,20,17,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,25,20,17,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,25,20,22,22,22,22,22,22,22,22,22,22,22,22,23,24,24,25,26,20,22,22,22,22,22,22,22,22,22,22,22,22,24,24,20,22,22,22,22,22,22,22,22,22,22,22,22,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,6,6,6,6,0,0,0,27,6,27,6,27,6,27,6,6,27,6,6,27,6,27,6,27,27,27,6,6,27,6,27,6,27,6,27,27,6,0,0,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,30,31,29,30,31,29,30,31,29,30,31,29,31,30,29,30,31,29,30,31,29,30,31,30,30,29,30,31,0,30,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,0,0,0,32,33,34,32,33,34,34,34,32,34,32,33,33,34,32,33,34,32,33,34,32,34,32,34,32,34,34,33,34,33,32,34,32,33,34,32,33,34,32,33,34,32,33,34,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,0,0,0,37,37,36,38,36,38,38,36,36,38,36,36,37,37,0,37,37,37,37,36,36,37,37,37,37,37,0,0,0,39,40,41,39,40,41,39,41,39,41,39,39,40,41,39,39,39,40,41,39,39,40,41,39,40,41,39,39,39,39,40,41,0,0,40,41,39,41,39,40,41,39,40,41,39,40,41,39,40,41],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",3]],["option",4,[["nonzerou32",3]]]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["error",3],["formatter",3]],["result",4,[["error",3]]]],[[["error",3],["formatter",3]],["result",4,[["error",3]]]],[[]],[[["error",3]],["error",3]],[[["nonzerou32",3]],["error",3]],[[]],[[],["result",4,[["error",3]]]],[[]],[[["",0]]],[[["",0]]],[[["",0],["f64",0]],["bool",0]],[[["",0],["f64",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0],["u32",0],["u32",0]],["bool",0]],[[["",0],["u32",0],["u32",0]],["bool",0]],[[["error",3]],["error",8]],[[]],[[],["error",3]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],null,[[]],[[["error",3]],["option",4,[["i32",0]]]],[[["rngcore",8]],["result",4,[["usize",0],["error",3]]]],null,[[["",0],["distribution",8]]],[[["",0],["distribution",8]]],[[],["distiter",3]],[[],["distiter",3]],[[["u64",0]]],null,[[["error",3]],["option",4,[["error",8]]]],[[["error",3]],["box",3,[["error",8],["global",3]]]],[[],["threadrng",3]],[[["",0]],["string",3]],[[["",0],["",0]],["result",4,[["error",3]]]],[[["",0],["",0]],["result",4,[["error",3]]]],[[["",0],["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["",0],["string",3],["usize",0]]],[[["alphanumeric",3],["",0],["string",3],["usize",0]]],[[["standard",3],["",0],["string",3],["usize",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["bernoulli",3]],["bernoulli",3]],[[["bernoullierror",4]],["bernoullierror",4]],[[["openclosed01",3]],["openclosed01",3]],[[["open01",3]],["open01",3]],[[["alphanumeric",3]],["alphanumeric",3]],[[["slice",3,[["clone",8]]]],["slice",3,[["clone",8]]]],[[["uniform",3,[["",26,[["clone",8],["sampleuniform",8]]]]]],["uniform",3,[["",26,[["clone",8],["sampleuniform",8]]]]]],[[["standard",3]],["standard",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["bernoullierror",4],["bernoullierror",4]],["bool",0]],[[["bernoulli",3],["formatter",3]],["result",6]],[[["bernoullierror",4],["formatter",3]],["result",6]],[[["bernoullierror",4],["formatter",3]],["result",6]],[[["distiter",3,[["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["distmap",3,[["debug",8],["debug",8],["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[["openclosed01",3],["formatter",3]],["result",6]],[[["open01",3],["formatter",3]],["result",6]],[[["alphanumeric",3],["formatter",3]],["result",6]],[[["slice",3,[["debug",8]]],["formatter",3]],["result",6]],[[["uniform",3,[["",26,[["debug",8],["sampleuniform",8]]]]],["formatter",3]],["result",6]],[[["standard",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rangeinclusive",3,[["sampleuniform",8]]]],["uniform",3,[["sampleuniform",8]]]],[[["range",3,[["sampleuniform",8]]]],["uniform",3,[["sampleuniform",8]]]],[[]],[[]],[[["u32",0],["u32",0]],["result",4,[["bernoulli",3],["bernoullierror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["distmap",3]],[[],["distmap",3]],[[["f64",0]],["result",4,[["bernoulli",3],["bernoullierror",4]]]],[[],["result",4,[["slice",3],["emptyslice",3]]]],[[["distiter",3]],["option",4]],[[["",0],["",0]]],[[["bernoulli",3],["",0]],["bool",0]],[[["distmap",3],["",0]]],[[["openclosed01",3],["",0]],["f32",0]],[[["openclosed01",3],["",0]],["f64",0]],[[["open01",3],["",0]],["f32",0]],[[["open01",3],["",0]],["f64",0]],[[["alphanumeric",3],["",0]],["u8",0]],[[["slice",3],["",0]],["",0]],[[["uniform",3,[["sampleuniform",8]]],["",0]],["sampleuniform",8]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["u8",0]],[[["standard",3],["",0]],["isize",0]],[[["standard",3],["",0]],["u16",0]],[[["standard",3],["",0]],["u32",0]],[[["standard",3],["",0]],["u64",0]],[[["standard",3],["",0]],["nonzerou8",3]],[[["standard",3],["",0]],["u128",0]],[[["standard",3],["",0]],["f64",0]],[[["standard",3],["",0]],["usize",0]],[[["standard",3],["",0]],["i8",0]],[[["standard",3],["",0]],["nonzerou16",3]],[[["standard",3],["",0]],["wrapping",3]],[[["standard",3],["",0]],["option",4]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["nonzerou32",3]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["nonzerou64",3]],[[["standard",3],["",0]],["nonzerou128",3]],[[["standard",3],["",0]],["nonzerousize",3]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["f32",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["i128",0]],[[["standard",3],["",0]],["char",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["i64",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["bool",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["i32",0]],[[["standard",3],["",0]]],[[["standard",3],["",0]]],[[["standard",3],["",0]],["i16",0]],[[["standard",3],["",0]]],[[],["distiter",3]],[[],["distiter",3]],[[["",0],["",0],["usize",0]],["string",3]],[[["",0],["",0],["usize",0]],["string",3]],[[["distiter",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["uniformint",3,[["clone",8]]]],["uniformint",3,[["clone",8]]]],[[["uniformchar",3]],["uniformchar",3]],[[["uniformfloat",3,[["clone",8]]]],["uniformfloat",3,[["clone",8]]]],[[["uniformduration",3]],["uniformduration",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["uniformint",3,[["debug",8]]],["formatter",3]],["result",6]],[[["uniformchar",3],["formatter",3]],["result",6]],[[["uniformfloat",3,[["debug",8]]],["formatter",3]],["result",6]],[[["uniformduration",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[]],[[],["uniform",3,[["sampleuniform",8]]]],[[],["uniformint",3,[["u8",0]]]],[[],["uniformint",3,[["u32",0]]]],[[],["uniformint",3,[["usize",0]]]],[[],["uniformint",3,[["u64",0]]]],[[],["uniformint",3,[["u16",0]]]],[[],["uniformint",3,[["isize",0]]]],[[],["uniformint",3,[["i8",0]]]],[[],["uniformint",3,[["i16",0]]]],[[],["uniformint",3,[["u128",0]]]],[[],["uniformint",3,[["i32",0]]]],[[],["uniformint",3,[["i64",0]]]],[[],["uniformint",3,[["i128",0]]]],[[],["uniformchar",3]],[[],["uniformfloat",3,[["f32",0]]]],[[],["uniformfloat",3,[["f64",0]]]],[[],["uniformduration",3]],[[]],[[],["uniform",3,[["sampleuniform",8]]]],[[],["uniformint",3,[["u64",0]]]],[[],["uniformint",3,[["i8",0]]]],[[],["uniformint",3,[["u8",0]]]],[[],["uniformint",3,[["i32",0]]]],[[],["uniformint",3,[["u128",0]]]],[[],["uniformint",3,[["usize",0]]]],[[],["uniformint",3,[["i16",0]]]],[[],["uniformint",3,[["i64",0]]]],[[],["uniformint",3,[["isize",0]]]],[[],["uniformint",3,[["u16",0]]]],[[],["uniformint",3,[["i128",0]]]],[[],["uniformint",3,[["u32",0]]]],[[],["uniformchar",3]],[[],["uniformfloat",3,[["f64",0]]]],[[],["uniformfloat",3,[["f32",0]]]],[[],["uniformduration",3]],[[["",0],["",0]]],[[["uniformint",3,[["usize",0]]],["",0]]],[[["uniformint",3,[["u128",0]]],["",0]]],[[["uniformint",3,[["u32",0]]],["",0]]],[[["uniformint",3,[["u8",0]]],["",0]]],[[["uniformint",3,[["i64",0]]],["",0]]],[[["uniformint",3,[["u16",0]]],["",0]]],[[["uniformint",3,[["i128",0]]],["",0]]],[[["uniformint",3,[["u64",0]]],["",0]]],[[["uniformint",3,[["i32",0]]],["",0]]],[[["uniformint",3,[["i8",0]]],["",0]]],[[["uniformint",3,[["isize",0]]],["",0]]],[[["uniformint",3,[["i16",0]]],["",0]]],[[["uniformchar",3],["",0]]],[[["uniformfloat",3,[["f64",0]]],["",0]]],[[["uniformfloat",3,[["f32",0]]],["",0]]],[[["uniformduration",3],["",0]],["duration",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["weightedindex",3,[["",26,[["clone",8],["sampleuniform",8],["partialord",8]]]]]],["weightedindex",3,[["",26,[["clone",8],["sampleuniform",8],["partialord",8]]]]]],[[["weightederror",4]],["weightederror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["weightederror",4],["weightederror",4]],["bool",0]],[[["weightedindex",3,[["",26,[["debug",8],["sampleuniform",8],["partialord",8]]]]],["formatter",3]],["result",6]],[[["weightederror",4],["formatter",3]],["result",6]],[[["weightederror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4,[["weightedindex",3,[["",26,[["sampleuniform",8],["partialord",8]]]]],["weightederror",4]]]],[[["weightedindex",3],["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["weightedindex",3,[["",26,[["sampleuniform",8],["partialord",8]]]]]],["result",4,[["weightederror",4]]]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["weightedindex",3,[["",26,[["debug",8],["weight",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["vec",3,[["weight",8]]]],["result",4,[["weightedindex",3,[["weight",8]]],["weightederror",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["osrng",3]],["osrng",3]],[[["stdrng",3]],["stdrng",3]],[[["threadrng",3]],["threadrng",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["osrng",3]],[[],["threadrng",3]],[[["stdrng",3],["stdrng",3]],["bool",0]],[[["osrng",3]]],[[["stdrng",3]]],[[["threadrng",3]]],[[["osrng",3],["formatter",3]],["result",4,[["error",3]]]],[[["stdrng",3],["formatter",3]],["result",6]],[[["threadrng",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["rngcore",8]],["result",4,[["stdrng",3],["error",3]]]],[[],["stdrng",3]],[[]],[[]],[[]],null,[[["stdrng",3],["stdrng",3]],["bool",0]],[[["osrng",3]],["u32",0]],[[["stdrng",3]],["u32",0]],[[["threadrng",3]],["u32",0]],[[["osrng",3]],["u64",0]],[[["stdrng",3]],["u64",0]],[[["threadrng",3]],["u64",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["osrng",3]],["result",4,[["error",3]]]],[[["stdrng",3]],["result",4,[["error",3]]]],[[["threadrng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["reseedingrng",3]],["reseedingrng",3]],[[["",0],["",0]]],[[["readrng",3,[["read",8]]]]],[[["reseedingrng",3,[["rngcore",8]]]]],[[["readrng",3,[["debug",8]]],["formatter",3]],["result",6]],[[["readerror",3],["formatter",3]],["result",6]],[[["readerror",3],["formatter",3]],["result",6]],[[["reseedingrng",3,[["debug",8],["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["read",8]],["readrng",3,[["read",8]]]],[[["u64",0]],["reseedingrng",3]],[[["readrng",3,[["read",8]]]],["u32",0]],[[["reseedingrng",3,[["rngcore",8]]]],["u32",0]],[[["readrng",3,[["read",8]]]],["u64",0]],[[["reseedingrng",3,[["rngcore",8]]]],["u64",0]],[[["reseedingrng",3]],["result",4,[["error",3]]]],[[["readerror",3]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[["readrng",3,[["read",8]]]],["result",4,[["error",3]]]],[[["reseedingrng",3,[["rngcore",8]]]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["steprng",3]],["steprng",3]],[[["",0],["",0]]],[[["steprng",3],["steprng",3]],["bool",0]],[[["steprng",3]]],[[["steprng",3],["formatter",3]],["result",6]],[[]],[[]],[[["steprng",3],["steprng",3]],["bool",0]],[[["u64",0],["u64",0]],["steprng",3]],[[["steprng",3]],["u32",0]],[[["steprng",3]],["u64",0]],[[["",0]]],[[["steprng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0],["usize",0]],["slicechooseiter",3]],[[["",0],["usize",0]],["vec",3]],[[["",0]],["usize",0]],[[["",0],["",0],["usize",0]],["result",4,[["slicechooseiter",3],["weightederror",4]]]],[[["",0],["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["",0]],["result",4,[["weightederror",4]]]],[[["",0],["",0]],["result",4,[["weightederror",4]]]],[[["slicechooseiter",3,[["",26,[["debug",8],["sized",8]]],["debug",8]]],["formatter",3]],["result",6]],[[]],null,[[]],[[]],[[["slicechooseiter",3,[["",26,[["index",8,[["usize",0]]],["sized",8]]]]]],["usize",0]],[[["slicechooseiter",3,[["",26,[["index",8,[["usize",0]]],["sized",8]]]]]],["option",4]],[[["",0],["",0],["usize",0]]],[[["",0],["",0]]],[[["slicechooseiter",3,[["",26,[["index",8,[["usize",0]]],["sized",8]]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["indexvec",4]],["indexvec",4]],[[["indexvecintoiter",4]],["indexvecintoiter",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["indexvec",4],["indexvec",4]],["bool",0]],[[["indexvec",4],["formatter",3]],["result",6]],[[["indexveciter",4],["formatter",3]],["result",6]],[[["indexvecintoiter",4],["formatter",3]],["result",6]],[[]],[[["vec",3,[["u32",0]]]],["indexvec",4]],[[["vec",3,[["usize",0]]]],["indexvec",4]],[[]],[[]],[[["indexvec",4],["usize",0]],["usize",0]],[[]],[[]],[[]],[[["indexvec",4]],["indexvecintoiter",4]],[[]],[[]],[[["indexvec",4]],["vec",3,[["usize",0]]]],[[["indexvec",4]],["bool",0]],[[["indexvec",4]],["indexveciter",4]],[[["indexvec",4]],["usize",0]],[[["indexveciter",4]],["option",4,[["usize",0]]]],[[["indexvecintoiter",4]],["option",4]],[[["",0],["usize",0],["usize",0]],["indexvec",4]],[[["",0],["usize",0],["usize",0]],["result",4,[["indexvec",4],["weightederror",4]]]],[[["indexveciter",4]]],[[["indexvecintoiter",4]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"Error"],[8,"SeedableRng"],[8,"Rng"],[8,"RngCore"],[8,"Fill"],[4,"WeightedError"],[4,"BernoulliError"],[8,"DistString"],[3,"Alphanumeric"],[3,"Standard"],[3,"Bernoulli"],[3,"DistIter"],[3,"DistMap"],[3,"OpenClosed01"],[3,"Open01"],[3,"Slice"],[3,"Uniform"],[8,"Distribution"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"UniformInt"],[3,"UniformChar"],[3,"UniformFloat"],[3,"UniformDuration"],[8,"SampleRange"],[3,"WeightedIndex"],[3,"WeightedIndex"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadRng"],[3,"ReadError"],[3,"ReseedingRng"],[3,"StepRng"],[8,"SliceRandom"],[3,"SliceChooseIter"],[8,"IteratorRandom"],[4,"IndexVec"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","t":[3,3,3,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ChaCha12Core","ChaCha12Rng","ChaCha20Core","ChaCha20Rng","ChaCha8Core","ChaCha8Rng","ChaChaCore","ChaChaRng","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_seed","from_seed","from_seed","from_seed","from_seed","from_seed","generate","generate","generate","get_seed","get_seed","get_seed","get_stream","get_stream","get_stream","get_word_pos","get_word_pos","get_word_pos","into","into","into","into","into","into","ne","ne","ne","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","rand_core","set_stream","set_stream","set_stream","set_word_pos","set_word_pos","set_word_pos","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["rand_chacha","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["ChaCha with 12 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds","A cryptographically secure random number generator that …","ChaCha with 8 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds, low-level interface","ChaCha with 20 rounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Get the seed.","Get the seed.","Get the seed.","Get the stream number.","Get the stream number.","Get the stream number.","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Set the stream number.","Set the stream number.","Set the stream number.","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,2,4,6,1,2,3,4,5,6,1,2,2,3,4,4,5,6,6,1,2,3,4,5,6,1,3,5,2,4,6,2,4,6,2,4,6,1,2,3,4,5,6,1,3,5,2,4,6,2,4,6,0,2,4,6,2,4,6,1,2,3,4,5,6,2,4,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6],"f":[null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["chacha20core",3]],["chacha20core",3]],[[["chacha20rng",3]],["chacha20rng",3]],[[["chacha12core",3]],["chacha12core",3]],[[["chacha12rng",3]],["chacha12rng",3]],[[["chacha8core",3]],["chacha8core",3]],[[["chacha8rng",3]],["chacha8rng",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["chacha20core",3],["chacha20core",3]],["bool",0]],[[["chacha20rng",3],["chacha20rng",3]],["bool",0]],[[["chacha12core",3],["chacha12core",3]],["bool",0]],[[["chacha12rng",3],["chacha12rng",3]],["bool",0]],[[["chacha8core",3],["chacha8core",3]],["bool",0]],[[["chacha8rng",3],["chacha8rng",3]],["bool",0]],[[["chacha20rng",3]]],[[["chacha12rng",3]]],[[["chacha8rng",3]]],[[["chacha20core",3],["formatter",3]],["result",6]],[[["chacha20rng",3],["formatter",3]],["result",6]],[[["chacha12core",3],["formatter",3]],["result",6]],[[["chacha12rng",3],["formatter",3]],["result",6]],[[["chacha8core",3],["formatter",3]],["result",6]],[[["chacha8rng",3],["formatter",3]],["result",6]],[[]],[[["chacha20core",3]],["chacha20rng",3]],[[]],[[]],[[]],[[["chacha12core",3]],["chacha12rng",3]],[[]],[[]],[[["chacha8core",3]],["chacha8rng",3]],[[],["chacha20core",3]],[[],["chacha20rng",3]],[[],["chacha12core",3]],[[],["chacha12rng",3]],[[],["chacha8core",3]],[[],["chacha8rng",3]],[[["chacha20core",3]]],[[["chacha12core",3]]],[[["chacha8core",3]]],[[["chacha20rng",3]]],[[["chacha12rng",3]]],[[["chacha8rng",3]]],[[["chacha20rng",3]],["u64",0]],[[["chacha12rng",3]],["u64",0]],[[["chacha8rng",3]],["u64",0]],[[["chacha20rng",3]],["u128",0]],[[["chacha12rng",3]],["u128",0]],[[["chacha8rng",3]],["u128",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["chacha20core",3],["chacha20core",3]],["bool",0]],[[["chacha12core",3],["chacha12core",3]],["bool",0]],[[["chacha8core",3],["chacha8core",3]],["bool",0]],[[["chacha20rng",3]],["u32",0]],[[["chacha12rng",3]],["u32",0]],[[["chacha8rng",3]],["u32",0]],[[["chacha20rng",3]],["u64",0]],[[["chacha12rng",3]],["u64",0]],[[["chacha8rng",3]],["u64",0]],null,[[["chacha20rng",3],["u64",0]]],[[["chacha12rng",3],["u64",0]]],[[["chacha8rng",3],["u64",0]]],[[["chacha20rng",3],["u128",0]]],[[["chacha12rng",3],["u128",0]]],[[["chacha8rng",3],["u128",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["chacha20rng",3]],["result",4,[["error",3]]]],[[["chacha12rng",3]],["result",4,[["error",3]]]],[[["chacha8rng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"ChaCha20Core"],[3,"ChaCha20Rng"],[3,"ChaCha12Core"],[3,"ChaCha12Rng"],[3,"ChaCha8Core"],[3,"ChaCha8Rng"]]},\
"rand_core":{"doc":"Random number generation traits","t":[18,8,3,18,3,8,16,8,0,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,0,11,10,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,3,8,16,16,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5],"n":["CUSTOM_START","CryptoRng","Error","INTERNAL_START","OsRng","RngCore","Seed","SeedableRng","block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","default","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from","from_entropy","from_rng","from_seed","impls","inner","into","into","le","new","next_u32","next_u32","next_u64","next_u64","raw_os_error","read","seed_from_u64","source","take_inner","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","BlockRng","BlockRng64","BlockRngCore","Item","Results","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","core","core","fill_bytes","fill_bytes","fmt","fmt","from","from","from_rng","from_rng","from_seed","from_seed","generate","generate_and_set","generate_and_set","index","index","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reset","reset","seed_from_u64","seed_from_u64","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","next_u64_via_u32","read_u32_into","read_u64_into"],"q":["rand_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand_core::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand_core::impls","","","","","","rand_core::le",""],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","A random number generator that retrieves randomness from …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","The <code>BlockRngCore</code> trait and implementation helpers","","","","","","","Retrieve the error code, if any.","","Fill <code>dest</code> with random data.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Helper functions for implementing <code>RngCore</code> functions.","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Little-Endian utilities","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","","Return the next random <code>u64</code>.","","Extract the raw OS error code (if this error came from the …","","Create a new PRNG using a <code>u64</code> seed.","","Unwrap the inner error (<code>std</code> only)","","","Fill <code>dest</code> entirely with random data.","","","","","","","","A wrapper type implementing <code>RngCore</code> for some type …","A wrapper type implementing <code>RngCore</code> for some type …","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","","","","","","","","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generate a new block of results.","Generate a new set of results immediately, setting the …","Generate a new set of results immediately, setting the …","Get the index into the result buffer.","Get the index into the result buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>BlockRng</code> from an existing RNG implementing …","Create a new <code>BlockRng</code> from an existing RNG implementing …","","","","","Reset the number of available results. This will force a …","Reset the number of available results. This will force a …","","","","","","","","","","","","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>."],"i":[1,0,0,1,0,0,2,0,0,1,3,1,3,3,3,1,3,4,3,1,1,3,1,1,1,3,2,2,2,0,1,1,3,0,1,4,3,4,3,1,4,2,1,1,3,1,4,3,1,3,1,3,1,3,0,0,0,5,5,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,5,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["osrng",3]],["osrng",3]],[[["",0],["",0]]],[[["error",3]],["option",4,[["nonzerou32",3]]]],[[],["osrng",3]],[[["",0]]],[[["osrng",3]]],[[["error",3],["formatter",3]],["result",6]],[[["error",3],["formatter",3]],["result",6]],[[["osrng",3],["formatter",3]],["result",6]],[[["nonzerou32",3]],["error",3]],[[]],[[["error",3]],["error",3]],[[]],[[]],[[["rngcore",8]],["result",4,[["error",3]]]],[[]],null,[[["error",3]],["error",8]],[[]],[[]],null,[[],["error",3]],[[["",0]],["u32",0]],[[["osrng",3]],["u32",0]],[[["",0]],["u64",0]],[[["osrng",3]],["u64",0]],[[["error",3]],["option",4,[["i32",0]]]],[[["rngcore",8]],["result",4,[["usize",0],["error",3]]]],[[["u64",0]]],[[["error",3]],["option",4,[["error",8]]]],[[["error",3]],["box",3,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["result",4,[["error",3]]]],[[["osrng",3]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["blockrng",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],["blockrng",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],[[["blockrng64",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],["blockrng64",3,[["",26,[["clone",8],["blockrngcore",8],["sized",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["blockrng",3,[["blockrngcore",8]]]]],[[["blockrng64",3,[["blockrngcore",8]]]]],[[["blockrng",3,[["",26,[["blockrngcore",8],["debug",8]]]]],["formatter",3]],["result",6]],[[["blockrng64",3,[["",26,[["blockrngcore",8],["debug",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[["rngcore",8]],["result",4,[["blockrng",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]],["error",3]]]],[[["rngcore",8]],["result",4,[["blockrng64",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]],["error",3]]]],[[],["blockrng",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[],["blockrng64",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[["",0]]],[[["blockrng",3,[["blockrngcore",8]]],["usize",0]]],[[["blockrng64",3,[["blockrngcore",8]]],["usize",0]]],[[["blockrng",3,[["blockrngcore",8]]]],["usize",0]],[[["blockrng64",3,[["blockrngcore",8]]]],["usize",0]],[[]],[[]],[[["blockrngcore",8]],["blockrng",3,[["blockrngcore",8]]]],[[["blockrngcore",8]],["blockrng64",3,[["blockrngcore",8]]]],[[["blockrng",3,[["blockrngcore",8]]]],["u32",0]],[[["blockrng64",3,[["blockrngcore",8]]]],["u32",0]],[[["blockrng",3,[["blockrngcore",8]]]],["u64",0]],[[["blockrng64",3,[["blockrngcore",8]]]],["u64",0]],[[["blockrng",3,[["blockrngcore",8]]]]],[[["blockrng64",3,[["blockrngcore",8]]]]],[[["u64",0]],["blockrng",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[["u64",0]],["blockrng64",3,[["",26,[["blockrngcore",8],["seedablerng",8]]]]]],[[["",0]]],[[["",0]]],[[["blockrng",3,[["blockrngcore",8]]]],["result",4,[["error",3]]]],[[["blockrng64",3,[["blockrngcore",8]]]],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[]],[[]]],"p":[[3,"Error"],[8,"SeedableRng"],[3,"OsRng"],[8,"RngCore"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"]]},\
"termion":{"doc":"Termion is a pure Rust, bindless library for low-level …","t":[3,5,11,11,0,0,0,0,11,11,11,5,0,11,5,11,0,11,11,0,0,0,5,5,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,8,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,8,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AsyncReader","async_stdin","borrow","borrow_mut","clear","color","cursor","event","events","events_and_raw","from","get_tty","input","into","is_tty","keys","raw","read","read_line","screen","scroll","style","terminal_size","terminal_size_pixels","try_from","try_into","type_id","AfterCursor","All","BeforeCursor","CurrentLine","UntilNewline","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","0","1","2","AnsiValue","Bg","Black","Blue","Color","Cyan","DetectColors","Fg","Green","LightBlack","LightBlue","LightCyan","LightGreen","LightMagenta","LightRed","LightWhite","LightYellow","Magenta","Red","Reset","Rgb","White","Yellow","available_colors","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_str","bg_string","bg_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_str","fg_string","fg_string","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","grayscale","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","rgb","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_bg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","write_fg","0","0","0","0","0","1","BlinkingBar","BlinkingBlock","BlinkingUnderline","DetectCursorPos","Down","Goto","Hide","HideCursor","Left","Restore","Right","Save","Show","SteadyBar","SteadyBlock","SteadyUnderline","Up","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","available_colors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cursor_pos","cursor_pos","default","deref","deref_mut","drop","eq","eq","eq","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_raw_mode","ne","ne","ne","ne","ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","Alt","BackTab","Backspace","Char","Ctrl","Delete","Down","End","Esc","Event","F","Hold","Home","Insert","Key","Key","Left","Left","Middle","Mouse","MouseButton","MouseEvent","Null","PageDown","PageUp","Press","Release","Right","Right","Unsupported","Up","WheelDown","WheelUp","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","hash","into","into","into","into","ne","ne","ne","parse_event","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","1","1","1","2","Events","EventsAndRaw","Keys","MouseTerminal","TermRead","TermReadEventsAndRaw","available_colors","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cursor_pos","deref","deref_mut","drop","events","events_and_raw","flush","from","from","from","from","from","from","into","into","into","into","into_iter","into_iter","into_iter","into_raw_mode","keys","next","next","next","read_line","read_passwd","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","CONTROL_SEQUENCE_TIMEOUT","IntoRawMode","RawTerminal","activate_raw_mode","as_raw_fd","available_colors","borrow","borrow_mut","cursor_pos","deref","deref_mut","drop","flush","from","into","into_raw_mode","into_raw_mode","suspend_raw_mode","try_from","try_into","type_id","write","AlternateScreen","ToAlternateScreen","ToMainScreen","available_colors","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cursor_pos","deref","deref_mut","drop","flush","fmt","fmt","from","from","from","from","into","into","into","into_raw_mode","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","0","0","Down","Up","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","into","into","ne","ne","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Blink","Bold","CrossedOut","Faint","Framed","Invert","Italic","NoBlink","NoBold","NoCrossedOut","NoFaint","NoInvert","NoItalic","NoUnderline","Reset","Underline","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["termion","","","","","","","","","","","","","","","","","","","","","","","","","","","termion::clear","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","termion::colortermion::cursortermion::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","termion::event::Event","","","termion::event::Key","","","","termion::event::MouseEvent","","","","","","","termion::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","termion::raw","","","","","","","","","","","","","","","","","","","","","","termion::screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","termion::scroll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","termion::styled":["An asynchronous reader.","Construct an asynchronous handle to the TTY standard input.","","","Clearing the screen.","Color managemement.","Cursor movement.","Mouse and key events.","","","Returns the argument unchanged.","Get the TTY device.","User input.","Calls <code>U::from(self)</code>.","Is this stream a TTY?","","Managing raw mode.","Read from the byte stream.","","Managing switching between main and alternate screen …","Scrolling.","Text styling management.","Get the size of the terminal.","Get the size of the terminal, in pixels","","","","Clear everything after the cursor.","Clear the entire screen.","Clear everything before the cursor.","Clear the current line.","Clear from cursor to newline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An arbitrary ANSI color value.","A background color.","Black.","Blue.","A terminal color.","Cyan.","Types that allow detection of the colors they support.","A foreground color.","Green.","High-intensity light black.","High-intensity light blue.","High-intensity light cyan.","High-intensity light green.","High-intensity light magenta.","High-intensity light red.","High-intensity light white.","High-intensity light yellow.","Magenta.","Red.","Reset colors to defaults.","A truecolor RGB.","White.","Yellow.","How many ANSI colors are supported (from 8 to 256)?","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI escape sequences as a string.","Returns the ANSI sequence as a string.","Returns the ANSI sequence as a string.","Returns the ANSI sequence as a string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI escape sequence as a string.","Returns the ANSI sequence as a string.","Returns the ANSI sequence as a string.","Returns the ANSI sequence as a string.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Grayscale color.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","216-color (r, g, b ≤ 5) RGB.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write the background version of this color.","","","","","","","","","","","","","","","","","","","","","Write the foreground version of this color.","","","","","","","","","","","","","","","","","","","","","","","","","","","Change the cursor style to blinking bar","Change the cursor style to blinking block","Change the cursor style to blinking underline","Types that allow detection of the cursor position.","Move cursor down.","Goto some position ((1,1)-based).","Hide the cursor.","Hide the cursor for the lifetime of this struct. It will …","Move cursor left.","Restore the cursor.","Move cursor right.","Save the cursor.","Show the cursor.","Change the cursor style to steady bar","Change the cursor style to steady block","Change the cursor style to steady underline","Move cursor up.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the (1,1)-based cursor position from the terminal.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create a hide cursor wrapper struct for the provided …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Alt modified character.","Backward Tab key.","Backspace.","Normal character.","Ctrl modified character.","Delete key.","Down arrow.","End key.","Esc key.","An event reported by the terminal.","Function keys.","A mouse button is held over the given coordinates.","Home key.","Insert key.","A key.","A key press.","The left mouse button.","Left arrow.","The middle mouse button.","A mouse button press, release or wheel use at specific …","A mouse button.","A mouse related event.","Null byte.","Page Down key.","Page Up key.","A mouse button was pressed.","A mouse button was released.","The right mouse button.","Right arrow.","An event that cannot currently be evaluated.","Up arrow.","Mouse wheel is going down.","Mouse wheel is going up.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Parse an Event from <code>item</code> and possibly subsequent bytes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over input events.","An iterator over input events and the bytes that define …","An iterator over input keys.","A terminal with added mouse support.","Extension to <code>Read</code> trait.","Extension to <code>TermRead</code> trait. A separate trait in order to …","","","","","","","","","","","","","","An iterator over input events.","An iterator over input events and the bytes that define …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","An iterator over key inputs.","","","","Read a line.","Read a password.","","","","","","","","","","","","","","The timeout of an escape code control sequence, in …","Types which can be converted into “raw mode”.","A terminal restorer, which keeps the previous state of the …","Temporarily switch to raw mode","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Switch to raw mode.","","Temporarily switch to original mode","","","","","A terminal restorer, which wraps a type implementing …","Switch to the alternate screen buffer of the terminal.","Switch to the main screen buffer of the terminal.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an alternate screen wrapper struct for the provided …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Scroll down.","Scroll up.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Blinking text (not widely supported).","Bold text.","Crossed out text (not widely supported).","Fainted text (not widely supported).","Framed text (not widely supported).","Inverted colors (negative mode).","Italic text.","Undo blinking text (not widely supported).","Undo bold text.","Undo crossed out text (not widely supported).","Undo fainted text (not widely supported).","Undo inverted colors (negative mode).","Undo italic text.","Undo underlined text.","Reset SGR parameters.","Underlined text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,0,0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,2,2,3,3,4,4,5,5,6,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,7,8,9,10,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,9,10,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,8,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,9,10,29,29,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,29,29,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,8,28,30,31,32,33,34,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,46,45,30,45,45,45,30,31,32,33,34,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,35,36,37,38,39,40,41,42,43,44,30,31,32,33,34,45,47,47,47,47,47,47,47,47,47,0,47,48,47,47,0,49,50,47,50,49,0,0,47,47,47,48,48,50,47,49,47,50,50,49,48,50,47,49,48,50,47,49,48,50,47,49,48,50,47,49,48,50,47,49,48,50,47,49,48,50,47,49,48,50,47,49,48,50,47,49,48,47,0,49,48,50,47,49,48,50,47,49,48,50,47,49,48,50,47,51,52,53,54,55,56,57,58,59,60,58,59,60,58,0,0,0,0,0,0,61,62,63,64,61,62,63,64,61,61,61,61,61,65,66,61,62,63,64,61,61,61,62,63,64,61,62,63,64,61,65,62,63,64,65,65,62,63,64,61,62,63,64,61,62,63,64,61,61,0,0,0,67,67,67,67,67,67,67,67,67,67,67,67,68,67,67,67,67,67,67,0,0,0,69,70,71,69,70,71,69,69,69,69,69,69,70,71,70,71,69,69,70,71,69,69,70,71,70,71,69,70,71,69,70,71,69,69,72,73,0,0,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,72,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"f":[null,[[],["asyncreader",3]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,[[],["events",3]],[[],["eventsandraw",3]],[[]],[[],["result",6,[["file",3]]]],null,[[]],[[["",0]],["bool",0]],[[],["keys",3]],null,[[["asyncreader",3]],["result",6,[["usize",0]]]],[[["",0]],["result",4,[["option",4,[["string",3]]],["error",3]]]],null,null,null,[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["all",3]]],[[["all",3]],["str",0]],[[["aftercursor",3]],["str",0]],[[["aftercursor",3]]],[[["beforecursor",3]],["str",0]],[[["beforecursor",3]]],[[["currentline",3]]],[[["currentline",3]],["str",0]],[[["untilnewline",3]],["str",0]],[[["untilnewline",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["all",3]],["all",3]],[[["aftercursor",3]],["aftercursor",3]],[[["beforecursor",3]],["beforecursor",3]],[[["currentline",3]],["currentline",3]],[[["untilnewline",3]],["untilnewline",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["all",3],["formatter",3]],["result",6]],[[["aftercursor",3],["formatter",3]],["result",6]],[[["beforecursor",3],["formatter",3]],["result",6]],[[["currentline",3],["formatter",3]],["result",6]],[[["untilnewline",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["result",6,[["u16",0]]]],[[["black",3]],["str",0]],[[["red",3]],["str",0]],[[["green",3]],["str",0]],[[["yellow",3]],["str",0]],[[["blue",3]],["str",0]],[[["magenta",3]],["str",0]],[[["cyan",3]],["str",0]],[[["white",3]],["str",0]],[[["lightblack",3]],["str",0]],[[["lightred",3]],["str",0]],[[["lightgreen",3]],["str",0]],[[["lightyellow",3]],["str",0]],[[["lightblue",3]],["str",0]],[[["lightmagenta",3]],["str",0]],[[["lightcyan",3]],["str",0]],[[["lightwhite",3]],["str",0]],[[["reset",3]],["str",0]],[[["ansivalue",3]],["string",3]],[[["rgb",3]],["stringblack",3]],["black",3]],[[["red",3]],["red",3]],[[["green",3]],["green",3]],[[["yellow",3]],["yellow",3]],[[["blue",3]],["blue",3]],[[["magenta",3]],["magenta",3]],[[["cyan",3]],["cyan",3]],[[["white",3]],["white",3]],[[["lightblack",3]],["lightblack",3]],[[["lightred",3]],["lightred",3]],[[["lightgreen",3]],["lightgreen",3]],[[["lightyellow",3]],["lightyellow",3]],[[["lightblue",3]],["lightblue",3]],[[["lightmagenta",3]],["lightmagenta",3]],[[["lightcyan",3]],["lightcyan",3]],[[["lightwhite",3]],["lightwhite",3]],[[["ansivalue",3]],["ansivalue",3]],[[["rgb",3]],["rgb",3]],[[["reset",3]],["reset",3]],[[["fg",3,[["",26,[["clone",8],["color",8]]]]]],["fg",3,[["",26,[["clone",8],["color",8]]]]]],[[["bg",3,[["",26,[["clone",8],["color",8]]]]]],["bg",3,[["",26,[["clone",8],["color",8]]]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["rgb",3],["rgb",3]],["bool",0]],[[["black",3]],["str",0]],[[["red",3]],["str",0]],[[["green",3]],["str",0]],[[["yellow",3]],["str",0]],[[["blue",3]],["str",0]],[[["magenta",3]],["str",0]],[[["cyan",3]],["str",0]],[[["white",3]],["str",0]],[[["lightblack",3]],["str",0]],[[["lightred",3]],["str",0]],[[["lightgreen",3]],["str",0]],[[["lightyellow",3]],["str",0]],[[["lightblue",3]],["str",0]],[[["lightmagenta",3]],["str",0]],[[["lightcyan",3]],["str",0]],[[["lightwhite",3]],["str",0]],[[["reset",3]],["str",0]],[[["ansivalue",3]],["string",3]],[[["rgb",3]],["string",3]],[[["black",3],["formatter",3]],["result",6]],[[["red",3],["formatter",3]],["result",6]],[[["green",3],["formatter",3]],["result",6]],[[["yellow",3],["formatter",3]],["result",6]],[[["blue",3],["formatter",3]],["result",6]],[[["magenta",3],["formatter",3]],["result",6]],[[["cyan",3],["formatter",3]],["result",6]],[[["white",3],["formatter",3]],["result",6]],[[["lightblack",3],["formatter",3]],["result",6]],[[["lightred",3],["formatter",3]],["result",6]],[[["lightgreen",3],["formatter",3]],["result",6]],[[["lightyellow",3],["formatter",3]],["result",6]],[[["lightblue",3],["formatter",3]],["result",6]],[[["lightmagenta",3],["formatter",3]],["result",6]],[[["lightcyan",3],["formatter",3]],["result",6]],[[["lightwhite",3],["formatter",3]],["result",6]],[[["ansivalue",3],["formatter",3]],["result",6]],[[["rgb",3],["formatter",3]],["result",6]],[[["reset",3],["formatter",3]],["result",6]],[[["fg",3,[["",26,[["debug",8],["color",8]]]]],["formatter",3]],["result",6]],[[["fg",3,[["color",8]]],["formatter",3]],["result",6]],[[["bg",3,[["",26,[["debug",8],["color",8]]]]],["formatter",3]],["result",6]],[[["bg",3,[["color",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["ansivalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rgb",3],["rgb",3]],["bool",0]],[[["u8",0],["u8",0],["u8",0]],["ansivalue",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["formatter",3]],["result",6]],[[["color",8],["formatter",3]],["result",6]],[[["black",3],["formatter",3]],["result",6]],[[["red",3],["formatter",3]],["result",6]],[[["green",3],["formatter",3]],["result",6]],[[["yellow",3],["formatter",3]],["result",6]],[[["blue",3],["formatter",3]],["result",6]],[[["magenta",3],["formatter",3]],["result",6]],[[["cyan",3],["formatter",3]],["result",6]],[[["white",3],["formatter",3]],["result",6]],[[["lightblack",3],["formatter",3]],["result",6]],[[["lightred",3],["formatter",3]],["result",6]],[[["lightgreen",3],["formatter",3]],["result",6]],[[["lightyellow",3],["formatter",3]],["result",6]],[[["lightblue",3],["formatter",3]],["result",6]],[[["lightmagenta",3],["formatter",3]],["result",6]],[[["lightcyan",3],["formatter",3]],["result",6]],[[["lightwhite",3],["formatter",3]],["result",6]],[[["ansivalue",3],["formatter",3]],["result",6]],[[["rgb",3],["formatter",3]],["result",6]],[[["reset",3],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["color",8],["formatter",3]],["result",6]],[[["black",3],["formatter",3]],["result",6]],[[["red",3],["formatter",3]],["result",6]],[[["green",3],["formatter",3]],["result",6]],[[["yellow",3],["formatter",3]],["result",6]],[[["blue",3],["formatter",3]],["result",6]],[[["magenta",3],["formatter",3]],["result",6]],[[["cyan",3],["formatter",3]],["result",6]],[[["white",3],["formatter",3]],["result",6]],[[["lightblack",3],["formatter",3]],["result",6]],[[["lightred",3],["formatter",3]],["result",6]],[[["lightgreen",3],["formatter",3]],["result",6]],[[["lightyellow",3],["formatter",3]],["result",6]],[[["lightblue",3],["formatter",3]],["result",6]],[[["lightmagenta",3],["formatter",3]],["result",6]],[[["lightcyan",3],["formatter",3]],["result",6]],[[["lightwhite",3],["formatter",3]],["result",6]],[[["ansivalue",3],["formatter",3]],["result",6]],[[["rgb",3],["formatter",3]],["result",6]],[[["reset",3],["formatter",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hide",3]],["str",0]],[[["hide",3]]],[[["show",3]],["str",0]],[[["show",3]]],[[["restore",3]]],[[["restore",3]],["str",0]],[[["save",3]]],[[["save",3]],["str",0]],[[["blinkingblock",3]]],[[["blinkingblock",3]],["str",0]],[[["steadyblock",3]],["str",0]],[[["steadyblock",3]]],[[["blinkingunderline",3]]],[[["blinkingunderline",3]],["str",0]],[[["steadyunderline",3]]],[[["steadyunderline",3]],["str",0]],[[["blinkingbar",3]],["str",0]],[[["blinkingbar",3]]],[[["steadybar",3]]],[[["steadybar",3]],["str",0]],[[["",0]],["result",4,[["u16",0],["errorhide",3]],["hide",3]],[[["show",3]],["show",3]],[[["restore",3]],["restore",3]],[[["save",3]],["save",3]],[[["blinkingblock",3]],["blinkingblock",3]],[[["steadyblock",3]],["steadyblock",3]],[[["blinkingunderline",3]],["blinkingunderline",3]],[[["steadyunderline",3]],["steadyunderline",3]],[[["blinkingbar",3]],["blinkingbar",3]],[[["steadybar",3]],["steadybar",3]],[[["goto",3]],["goto",3]],[[["left",3]],["left",3]],[[["right",3]],["right",3]],[[["up",3]],["up",3]],[[["down",3]],["down",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["result",6]],[[["",0]],["result",4,[["error",3]]]],[[],["goto",3]],[[["hidecursor",3,[["write",8]]]],["",0]],[[["hidecursor",3,[["write",8]]]],["",0]],[[["hidecursor",3,[["write",8]]]]],[[["goto",3],["goto",3]],["bool",0]],[[["left",3],["left",3]],["bool",0]],[[["right",3],["right",3]],["bool",0]],[[["up",3],["up",3]],["bool",0]],[[["down",3],["down",3]],["bool",0]],[[["hidecursor",3,[["write",8]]]],["result",6]],[[["hide",3],["formatter",3]],["result",6]],[[["show",3],["formatter",3]],["result",6]],[[["restore",3],["formatter",3]],["result",6]],[[["save",3],["formatter",3]],["result",6]],[[["blinkingblock",3],["formatter",3]],["result",6]],[[["steadyblock",3],["formatter",3]],["result",6]],[[["blinkingunderline",3],["formatter",3]],["result",6]],[[["steadyunderline",3],["formatter",3]],["result",6]],[[["blinkingbar",3],["formatter",3]],["result",6]],[[["steadybar",3],["formatter",3]],["result",6]],[[["goto",3],["formatter",3]],["result",6]],[[["left",3],["formatter",3]],["result",6]],[[["right",3],["formatter",3]],["result",6]],[[["up",3],["formatter",3]],["result",6]],[[["down",3],["formatter",3]],["result",6]],[[]],[[["write",8]],["hidecursor",3,[["write",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["rawterminal",3],["error",3]]]],[[["goto",3],["goto",3]],["bool",0]],[[["left",3],["left",3]],["bool",0]],[[["right",3],["right",3]],["bool",0]],[[["up",3],["up",3]],["bool",0]],[[["down",3],["down",3]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["hidecursor",3,[["write",8]]]],["result",6,[["usize",0]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["event",4]],["event",4]],[[["mouseevent",4]],["mouseevent",4]],[[["mousebutton",4]],["mousebutton",4]],[[["key",4]],["key",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["event",4],["event",4]],["bool",0]],[[["mouseevent",4],["mouseevent",4]],["bool",0]],[[["mousebutton",4],["mousebutton",4]],["bool",0]],[[["key",4],["key",4]],["bool",0]],[[["event",4],["formatter",3]],["result",6]],[[["mouseevent",4],["formatter",3]],["result",6]],[[["mousebutton",4],["formatter",3]],["result",6]],[[["key",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["event",4],["",0]]],[[["mouseevent",4],["",0]]],[[["mousebutton",4],["",0]]],[[["key",4],["",0]]],[[]],[[]],[[]],[[]],[[["event",4],["event",4]],["bool",0]],[[["mouseevent",4],["mouseevent",4]],["bool",0]],[[["key",4],["key",4]],["bool",0]],[[["u8",0],["",0]],["result",4,[["event",4],["error",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",4,[["error",3]]]],[[["mouseterminal",3,[["write",8]]]],["",0]],[[["mouseterminal",3,[["write",8]]]],["",0]],[[["mouseterminal",3,[["write",8]]]]],[[],["events",3]],[[],["eventsandraw",3]],[[["mouseterminal",3,[["write",8]]]],["result",6]],[[]],[[]],[[]],[[["write",8]],["mouseterminal",3,[["write",8]]]],[[]],[[["never",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["rawterminal",3],["error",3]]]],[[],["keys",3]],[[["keys",3,[["read",8]]]],["option",4,[["result",4,[["key",4],["error",3]]]]]],[[["events",3,[["read",8]]]],["option",4,[["result",4,[["event",4],["error",3]]]]]],[[["eventsandraw",3,[["read",8]]]],["option",4,[["result",4,[["error",3]]]]]],[[["",0]],["result",6,[["option",4,[["string",3]]]]]],[[["",0],["",0]],["result",6,[["option",4,[["string",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["mouseterminal",3,[["write",8]]]],["result",6,[["usize",0]]]],null,null,null,[[["rawterminal",3,[["write",8]]]],["result",6]],[[["rawterminal",3,[["",26,[["write",8],["asrawfd",8]]]]]],["rawfd",6]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",4,[["error",3]]]],[[["rawterminal",3,[["write",8]]]],["",0]],[[["rawterminal",3,[["write",8]]]],["",0]],[[["rawterminal",3,[["write",8]]]]],[[["rawterminal",3,[["write",8]]]],["result",6]],[[]],[[]],[[],["result",6,[["rawterminal",3]]]],[[],["result",4,[["rawterminal",3],["error",3]]]],[[["rawterminal",3,[["write",8]]]],["result",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["rawterminal",3,[["write",8]]]],["result",6,[["usize",0]]]],null,null,null,[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["result",4,[["error",3]]]],[[["alternatescreen",3,[["write",8]]]],["",0]],[[["alternatescreen",3,[["write",8]]]],["",0]],[[["alternatescreen",3,[["write",8]]]]],[[["alternatescreen",3,[["write",8]]]],["result",6]],[[["tomainscreen",3],["formatter",3]],["result",6]],[[["toalternatescreen",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["write",8]],["alternatescreen",3,[["write",8]]]],[[]],[[]],[[]],[[],["result",4,[["rawterminal",3],["error",3]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["alternatescreen",3,[["write",8]]]],["result",6,[["usize",0]]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["up",3]],["up",3]],[[["down",3]],["down",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["up",3],["up",3]],["bool",0]],[[["down",3],["down",3]],["bool",0]],[[["up",3],["formatter",3]],["result",6]],[[["down",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["up",3],["up",3]],["bool",0]],[[["down",3],["down",3]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["reset",3]]],[[["reset",3]],["str",0]],[[["bold",3]],["str",0]],[[["bold",3]]],[[["faint",3]],["str",0]],[[["faint",3]]],[[["italic",3]],["str",0]],[[["italic",3]]],[[["underline",3]]],[[["underline",3]],["str",0]],[[["blink",3]]],[[["blink",3]],["str",0]],[[["invert",3]],["str",0]],[[["invert",3]]],[[["crossedout",3]]],[[["crossedout",3]],["str",0]],[[["nobold",3]]],[[["nobold",3]],["str",0]],[[["nofaint",3]]],[[["nofaint",3]],["str",0]],[[["noitalic",3]]],[[["noitalic",3]],["str",0]],[[["nounderline",3]],["str",0]],[[["nounderline",3]]],[[["noblink",3]]],[[["noblink",3]],["str",0]],[[["noinvert",3]]],[[["noinvert",3]],["str",0]],[[["nocrossedout",3]]],[[["nocrossedout",3]],["str",0]],[[["framed",3]],["str",0]],[[["framedreset",3]],["reset",3]],[[["bold",3]],["bold",3]],[[["faint",3]],["faint",3]],[[["italic",3]],["italic",3]],[[["underline",3]],["underline",3]],[[["blink",3]],["blink",3]],[[["invert",3]],["invert",3]],[[["crossedout",3]],["crossedout",3]],[[["nobold",3]],["nobold",3]],[[["nofaint",3]],["nofaint",3]],[[["noitalic",3]],["noitalic",3]],[[["nounderline",3]],["nounderline",3]],[[["noblink",3]],["noblink",3]],[[["noinvert",3]],["noinvert",3]],[[["nocrossedout",3]],["nocrossedout",3]],[[["framed",3]],["framed",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["reset",3],["formatter",3]],["result",6]],[[["bold",3],["formatter",3]],["result",6]],[[["faint",3],["formatter",3]],["result",6]],[[["italic",3],["formatter",3]],["result",6]],[[["underline",3],["formatter",3]],["result",6]],[[["blink",3],["formatter",3]],["result",6]],[[["invert",3],["formatter",3]],["result",6]],[[["crossedout",3],["formatter",3]],["result",6]],[[["nobold",3],["formatter",3]],["result",6]],[[["nofaint",3],["formatter",3]],["result",6]],[[["noitalic",3],["formatter",3]],["result",6]],[[["nounderline",3],["formatter",3]],["result",6]],[[["noblink",3],["formatter",3]],["result",6]],[[["noinvert",3],["formatter",3]],["result",6]],[[["nocrossedout",3],["formatter",3]],["result",6]],[[["framed",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"AsyncReader"],[3,"All"],[3,"AfterCursor"],[3,"BeforeCursor"],[3,"CurrentLine"],[3,"UntilNewline"],[3,"AnsiValue"],[3,"Rgb"],[3,"Fg"],[3,"Bg"],[8,"DetectColors"],[3,"Black"],[3,"Red"],[3,"Green"],[3,"Yellow"],[3,"Blue"],[3,"Magenta"],[3,"Cyan"],[3,"White"],[3,"LightBlack"],[3,"LightRed"],[3,"LightGreen"],[3,"LightYellow"],[3,"LightBlue"],[3,"LightMagenta"],[3,"LightCyan"],[3,"LightWhite"],[3,"Reset"],[8,"Color"],[3,"Goto"],[3,"Left"],[3,"Right"],[3,"Up"],[3,"Down"],[3,"Hide"],[3,"Show"],[3,"Restore"],[3,"Save"],[3,"BlinkingBlock"],[3,"SteadyBlock"],[3,"BlinkingUnderline"],[3,"SteadyUnderline"],[3,"BlinkingBar"],[3,"SteadyBar"],[3,"HideCursor"],[8,"DetectCursorPos"],[4,"Key"],[4,"MouseEvent"],[4,"Event"],[4,"MouseButton"],[13,"Key"],[13,"Mouse"],[13,"Unsupported"],[13,"F"],[13,"Char"],[13,"Alt"],[13,"Ctrl"],[13,"Press"],[13,"Release"],[13,"Hold"],[3,"MouseTerminal"],[3,"Keys"],[3,"Events"],[3,"EventsAndRaw"],[8,"TermRead"],[8,"TermReadEventsAndRaw"],[3,"RawTerminal"],[8,"IntoRawMode"],[3,"AlternateScreen"],[3,"ToMainScreen"],[3,"ToAlternateScreen"],[3,"Up"],[3,"Down"],[3,"Reset"],[3,"Bold"],[3,"Faint"],[3,"Italic"],[3,"Underline"],[3,"Blink"],[3,"Invert"],[3,"CrossedOut"],[3,"NoBold"],[3,"NoFaint"],[3,"NoItalic"],[3,"NoUnderline"],[3,"NoBlink"],[3,"NoInvert"],[3,"NoCrossedOut"],[3,"Framed"]]},\
"tui":{"doc":"tui is a library used to build rich terminal users …","t":[2,2,2,2,0,0,0,0,0,0,0,0,8,3,3,11,11,11,11,11,11,11,10,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,3,3,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,4,13,13,13,4,4,4,13,3,13,13,3,13,13,13,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,18,13,13,18,4,13,18,13,13,13,18,18,13,13,13,13,13,13,13,13,3,18,18,13,13,13,18,3,18,13,13,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,17,13,4,0,0,11,11,0,11,11,11,11,11,0,11,11,11,11,17,17,17,17,17,17,17,3,17,17,17,11,11,11,11,12,12,11,11,12,12,11,12,12,12,12,12,11,11,11,11,17,17,17,17,17,17,17,3,17,17,17,11,11,11,11,12,12,11,11,12,12,11,12,12,12,12,12,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,12,12,11,11,12,11,11,12,12,12,11,11,12,12,11,11,11,12,12,12,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,18,3,3,4,3,3,3,3,3,13,3,4,18,13,3,3,3,3,18,3,13,18,13,3,13,3,16,8,18,3,3,3,13,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,3,3,13,3,4,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,11],"n":["Frame","Terminal","TerminalOptions","Viewport","backend","buffer","layout","style","symbols","terminal","text","widgets","Backend","TermionBackend","TestBackend","assert_buffer","available_colors","borrow","borrow","borrow_mut","borrow_mut","buffer","clear","clear","clear","cursor_pos","draw","draw","draw","flush","flush","flush","flush","fmt","from","from","get_cursor","get_cursor","get_cursor","hide_cursor","hide_cursor","hide_cursor","into","into","into_raw_mode","new","new","resize","set_cursor","set_cursor","set_cursor","show_cursor","show_cursor","show_cursor","size","size","size","try_from","try_from","try_into","try_into","type_id","type_id","write","Buffer","Cell","area","area","bg","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content","content","default","default","diff","empty","eq","eq","fg","filled","fmt","fmt","from","from","get","get_mut","index_of","into","into","merge","modifier","ne","ne","pos_of","reset","reset","resize","set_background","set_bg","set_char","set_fg","set_span","set_spans","set_string","set_stringn","set_style","set_style","set_symbol","style","symbol","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_lines","Alignment","BottomLeft","BottomRight","Center","Constraint","Corner","Direction","Horizontal","Layout","Left","Length","Margin","Max","Min","Percentage","Ratio","Rect","Right","TopLeft","TopRight","Vertical","apply","area","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","default","default","direction","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","height","horizontal","horizontal_margin","inner","intersection","intersects","into","into","into","into","into","into","into","left","margin","ne","ne","ne","ne","new","right","split","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","vertical","vertical_margin","width","x","y","0","0","0","0","0","1","BOLD","Black","Blue","CROSSED_OUT","Color","Cyan","DIM","DarkGray","Gray","Green","HIDDEN","ITALIC","Indexed","LightBlue","LightCyan","LightGreen","LightMagenta","LightRed","LightYellow","Magenta","Modifier","RAPID_BLINK","REVERSED","Red","Reset","Rgb","SLOW_BLINK","Style","UNDERLINED","White","Yellow","add_modifier","add_modifier","all","bg","bg","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","eq","eq","extend","fg","fg","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","ne","ne","ne","not","partial_cmp","patch","remove","remove_modifier","reset","set","sub","sub_assign","sub_modifier","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","0","0","1","2","Block","Braille","DOT","Dot","Marker","bar","block","borrow","borrow_mut","braille","clone","clone_into","fmt","from","into","line","to_owned","try_from","try_into","type_id","FIVE_EIGHTHS","FULL","HALF","NINE_LEVELS","ONE_EIGHTH","ONE_QUARTER","SEVEN_EIGHTHS","Set","THREE_EIGHTHS","THREE_LEVELS","THREE_QUARTERS","borrow","borrow_mut","clone","clone_into","empty","five_eighths","fmt","from","full","half","into","one_eighth","one_quarter","seven_eighths","three_eighths","three_quarters","to_owned","try_from","try_into","type_id","FIVE_EIGHTHS","FULL","HALF","NINE_LEVELS","ONE_EIGHTH","ONE_QUARTER","SEVEN_EIGHTHS","Set","THREE_EIGHTHS","THREE_LEVELS","THREE_QUARTERS","borrow","borrow_mut","clone","clone_into","empty","five_eighths","fmt","from","full","half","into","one_eighth","one_quarter","seven_eighths","three_eighths","three_quarters","to_owned","try_from","try_into","type_id","BLANK","DOTS","BOTTOM_LEFT","BOTTOM_RIGHT","CROSS","DOUBLE","DOUBLE_BOTTOM_LEFT","DOUBLE_BOTTOM_RIGHT","DOUBLE_CROSS","DOUBLE_HORIZONTAL","DOUBLE_HORIZONTAL_DOWN","DOUBLE_HORIZONTAL_UP","DOUBLE_TOP_LEFT","DOUBLE_TOP_RIGHT","DOUBLE_VERTICAL","DOUBLE_VERTICAL_LEFT","DOUBLE_VERTICAL_RIGHT","HORIZONTAL","HORIZONTAL_DOWN","HORIZONTAL_UP","NORMAL","ROUNDED","ROUNDED_BOTTOM_LEFT","ROUNDED_BOTTOM_RIGHT","ROUNDED_TOP_LEFT","ROUNDED_TOP_RIGHT","Set","THICK","THICK_BOTTOM_LEFT","THICK_BOTTOM_RIGHT","THICK_CROSS","THICK_HORIZONTAL","THICK_HORIZONTAL_DOWN","THICK_HORIZONTAL_UP","THICK_TOP_LEFT","THICK_TOP_RIGHT","THICK_VERTICAL","THICK_VERTICAL_LEFT","THICK_VERTICAL_RIGHT","TOP_LEFT","TOP_RIGHT","VERTICAL","VERTICAL_LEFT","VERTICAL_RIGHT","borrow","borrow_mut","bottom_left","bottom_right","clone","clone_into","cross","fmt","from","horizontal","horizontal_down","horizontal_up","into","to_owned","top_left","top_right","try_from","try_into","type_id","vertical","vertical_left","vertical_right","CompletedFrame","Frame","Terminal","TerminalOptions","Viewport","area","autoresize","backend","backend_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clear","clone","clone","clone_into","clone_into","current_buffer_mut","draw","drop","eq","eq","fixed","flush","fmt","fmt","fmt","from","from","from","from","from","get_cursor","get_frame","hide_cursor","into","into","into","into","into","ne","ne","new","render_stateful_widget","render_widget","resize","set_cursor","set_cursor","show_cursor","size","size","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","viewport","with_options","0","Span","Spans","StyledGrapheme","Text","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","content","default","default","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","height","into","into","into","into","into_iter","lines","ne","ne","ne","ne","patch_style","raw","raw","style","style","styled","styled","styled_graphemes","symbol","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","width","width","width","ALL","Axis","BOTTOM","BarChart","Block","BorderType","Borders","Cell","Chart","Clear","Dataset","Double","Gauge","GraphType","LEFT","Line","LineGauge","List","ListItem","ListState","NONE","Paragraph","Plain","RIGHT","Rounded","Row","Scatter","Sparkline","State","StatefulWidget","TOP","Table","TableState","Tabs","Thick","Widget","Wrap","alignment","all","bar_gap","bar_set","bar_set","bar_style","bar_width","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","block","block","block","block","block","block","block","block","block","border_style","border_type","borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_margin","bounds","canvas","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","column_spacing","complement","contains","data","data","data","default","default","default","default","default","default","default","default","default","default","default","difference","divider","empty","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","gauge_style","gauge_style","graph_type","hash","header","height","height","hidden_legend_constraints","highlight_style","highlight_style","highlight_style","highlight_symbol","highlight_symbol","inner","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","label","label","label_style","labels","line_set","line_symbols","marker","max","max","name","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","not","partial_cmp","percent","ratio","ratio","remove","render","render","render","render","render","render","render","render","render","render","render","render","render","render","render","scroll","select","select","select","selected","selected","set","start_corner","style","style","style","style","style","style","style","style","style","style","style","style","style","style","style","sub","sub_assign","symmetric_difference","title","title","title_alignment","title_style","title_style","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","trim","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","use_unicode","value_style","widths","wrap","x_axis","y_axis","Canvas","Context","High","Label","Line","Low","Map","MapResolution","Painter","Points","Rectangle","Shape","background_color","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color","color","color","color","coords","default","default","default","draw","draw","draw","draw","draw","draw","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_point","height","into","into","into","into","into","into","into","into","into","layer","marker","new","paint","paint","print","render","resolution","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","x","x","x1","x2","x_bounds","y","y","y1","y2","y_bounds"],"q":["tui","","","","","","","","","","","","tui::backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::layout::Constraint","","","","","","tui::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::style::Color","","","","tui::symbols","","","","","","","","","","","","","","","","","","","","tui::symbols::bar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::symbols::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::symbols::braille","","tui::symbols::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::terminal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::widgetstui::widgets::canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","<code>style</code> contains the primitives used to control how your …","","","Primitives for styled text.","<code>widgets</code> is a collection of types that implement <code>Widget</code> or …","","","A backend used for the integration tests.","","","","","","","","","Clears the entire screen and move the cursor to the top …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Gets cursor position (0-based index)","","","Hides cursor","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Sets cursor position (0-based index)","","","Shows cursor","","","Return the size of the terminal","","","","","","","","","A buffer that maps to the desired content of the terminal …","A buffer cell","Returns the area covered by this buffer","The area represented by this buffer","","","","","","","","","","Returns the content of the buffer as a slice","The content of the buffer. The length of this Vec should …","","","Builds a minimal sequence of coordinates and Cells …","Returns a Buffer with all cells set to the default one","","","","Returns a Buffer with all cells initialized with the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to Cell at the given coordinates","Returns a mutable reference to Cell at the given …","Returns the index in the Vec for the given global (x, y) …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Merge an other buffer into this one","","","","Returns the (global) coordinates of a cell given its index","","Reset all cells in the buffer","Resize the buffer so that the mapped area matches the …","","","","","","","Print a string, starting at the position (x, y)","Print at most the first n characters of a string if enough …","","","","","","","","","","","","","","Returns a Buffer containing the given lines","","","","","","","","","","","","","","","","","A simple rectangle used in the computation of the layout …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new rect, with width and height limited to keep …","","Wrapper function around the cassowary-rs solver to be able …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modifier changes the way a piece of text is displayed.","","","","","","","Style let you control the main characteristics of the …","","","","Changes the text emphasis.","","Returns the set containing all flags.","Changes the background color.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","Changes the foreground color.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","","Results in a combined style that is equivalent to applying …","Removes the specified flags in-place.","Changes the text emphasis.","Returns a <code>Style</code> resetting all properties.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","One point per cell in shape of a block","Up to 8 points per cell","","One point per cell in shape of dot","Marker to use when plotting data points","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","CompletedFrame represents the state of the terminal after …","Represents a consistent terminal interface for rendering.","Interface to the terminal backed by Termion","Options to pass to <code>Terminal::with_options</code>","UNSTABLE","","Queries the backend for size and resizes if it doesn’t …","","","","","","","","","","","","","","Clear the terminal and force a full redraw on the next …","","","","","","Synchronizes terminal size, calls the rendering closure, …","","","","UNSTABLE","Obtains a difference between the previous and the current …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a Frame object which provides a consistent view into …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Wrapper around Terminal initialization. Each buffer is …","Render a <code>StatefulWidget</code> to the current buffer using …","Render a <code>Widget</code> to the current buffer using <code>Widget::render</code>.","Updates the Terminal so that internal buffers match the …","After drawing this frame, make the cursor visible and put …","","","Terminal size, guaranteed not to change when rendering.","Queries the real size of the backend.","","","","","","","","","","","","","","","","","","Viewport used to draw to the terminal","UNSTABLE","","A string where all graphemes have the same style.","A string composed of clusters of graphemes, each with …","A grapheme associated to a style.","A string split over multiple lines where each line is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the height.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Apply a new style to existing text.","Create a span with no style.","Create some text (potentially multiple lines) with no …","","","Create a span with a style.","Create some text (potentially multiple lines) with a style.","Returns an iterator over the graphemes held by this span.","","","","","","","","","","","","","","","","","","Returns the width of the content held by this span.","Returns the width of the underlying string.","Returns the max width of all the lines.","Show all borders","An X or Y axis for the chart widget","Show the bottom border","Display multiple bars in a single widgets","Base widget to be used with all upper level ones. It may …","","Bitflags that can be composed to set the visible borders …","A <code>Cell</code> contains the <code>Text</code> to be displayed in a <code>Row</code> of a …","A widget to plot one or more dataset in a cartesian …","A widget to clear/reset a certain area to allow …","A group of data points","","A widget to display a task progress.","Used to determine which style of graphing to use","Show the left border","Draw each point and lines between each point using the …","A compact widget to display a task progress over a single …","A widget to display several items among which one can be …","","","Show no border (default)","A widget to display some text.","","Show the right border","","Holds data to be displayed in a <code>Table</code> widget.","Draw each point","Widget to render a sparkline over one or more lines.","","A <code>StatefulWidget</code> is a widget that can take advantage of …","Show the top border","A widget to display data in formatted columns.","","A widget to display available tabs in a multiple panels …","","Base requirements for a Widget","Describes how to wrap text across lines.","","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the bottom margin. By default, the bottom margin is <code>0</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","Set the fixed height of the <code>Row</code>. Any <code>Cell</code> whose content …","Set the constraints used to determine whether the legend …","","","","","","Compute the inner area of a block based on its border …","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Row</code> from an iterator where items can be …","","","Returns the complement of this set of flags.","","","","Sets ratio ([0.0, 1.0]) directly.","Removes the specified flags in-place.","Draws the current state of the widget in the given buffer. …","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","Set the <code>Style</code> of this cell.","Set the <code>Style</code> of the entire row. This <code>Style</code> can be …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Should leading whitespace be trimmed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","The Canvas widget may be used to draw more detailed …","Holds the state of the Canvas when painting to it.","","Label to draw some text on the canvas","Shape to draw a line from (x1, y1) to (x2, y2) with the …","","Shape to draw a world map with the given resolution and …","","","A shape to draw a group of points with the given color","Shape to draw a rectangle from a <code>Rect</code> with the given color","Interface for all shapes that may be drawn on a Canvas …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw any object that may implement the Shape trait","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert the (x, y) coordinates to location of a point on …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Go one layer above in the canvas.","Change the type of points used to draw the shapes. By …","","Store the closure that will be used to draw to the Canvas","Paint a point of the grid","Print a string on the canvas at the given position","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,2,1,1,3,2,1,2,3,2,1,3,2,2,1,1,2,1,3,2,1,3,2,1,2,1,2,2,1,1,3,2,1,3,2,1,3,2,1,2,1,2,1,2,1,2,0,0,4,4,5,5,4,5,4,5,4,5,4,4,4,5,4,4,4,5,4,5,4,5,4,5,4,4,4,4,5,4,4,5,5,4,4,5,4,4,4,5,5,5,4,4,4,4,5,4,5,5,5,5,4,5,4,5,4,5,4,4,0,6,6,7,0,0,0,8,0,7,9,0,9,9,9,9,0,7,6,6,8,9,10,6,8,9,11,7,12,10,6,8,9,11,7,12,10,10,6,8,9,11,7,12,10,6,8,9,11,7,12,10,12,12,10,12,6,8,9,11,7,12,10,6,8,9,11,7,12,10,6,8,9,11,7,12,10,6,8,9,11,12,10,10,11,12,10,10,10,6,8,9,11,7,12,10,10,12,9,11,12,10,10,10,12,6,8,9,11,7,12,10,10,6,8,9,11,7,12,10,6,8,9,11,7,12,10,6,8,9,11,7,12,10,10,11,12,10,10,10,13,14,15,16,17,14,18,19,19,18,0,19,18,19,19,19,18,18,19,19,19,19,19,19,19,19,0,18,18,19,19,19,18,0,18,19,19,20,20,18,20,20,18,18,18,18,18,18,18,19,18,20,19,18,20,19,18,20,19,18,20,18,18,18,20,18,18,19,18,20,18,20,20,19,18,18,18,18,18,20,19,18,20,18,18,18,18,18,18,18,18,19,18,20,18,18,19,18,20,18,18,20,18,20,20,18,18,18,20,18,19,18,20,18,19,18,20,19,18,20,19,18,20,18,21,22,21,21,23,23,0,23,0,0,0,23,23,0,23,23,23,23,23,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,27,28,28,28,29,27,30,31,28,29,27,30,31,28,27,28,30,31,30,31,28,28,28,30,31,30,28,30,31,28,29,27,30,31,28,28,28,28,29,27,30,31,28,30,31,28,29,29,28,29,28,28,29,28,30,31,29,27,30,31,28,29,27,30,31,28,29,27,30,31,28,31,28,32,0,0,0,0,33,34,32,35,33,34,32,35,33,34,32,35,33,34,32,35,34,32,35,33,34,32,35,35,33,34,32,35,33,34,34,34,32,32,32,32,32,35,35,35,35,35,35,35,35,33,34,32,35,35,35,33,34,32,35,35,34,35,33,34,34,35,34,33,33,34,32,35,33,34,32,35,33,34,32,35,33,34,32,35,34,32,35,36,0,36,0,0,0,0,0,0,0,0,37,0,0,36,38,0,0,0,0,36,0,37,36,37,0,38,0,39,0,36,0,0,0,37,0,0,40,36,41,41,42,41,41,36,36,36,36,36,36,36,43,41,44,45,46,40,42,47,48,49,49,49,43,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,43,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,57,50,0,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,36,47,36,36,41,51,42,43,41,49,50,51,45,53,42,56,57,58,36,48,36,37,49,54,56,57,47,36,36,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,36,36,36,36,43,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,56,57,47,58,48,36,36,36,36,36,43,45,51,36,47,54,57,44,46,47,48,46,47,49,36,36,36,43,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,36,36,43,45,41,50,43,37,51,41,42,51,49,54,56,57,47,36,44,54,46,40,57,47,48,36,36,45,43,45,36,59,39,43,41,49,44,52,45,46,46,40,42,47,47,48,40,53,58,48,53,58,36,46,43,41,49,50,51,44,45,54,46,40,42,56,57,47,48,36,36,36,49,50,49,49,50,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,36,55,43,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,43,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,43,41,37,49,50,38,51,44,52,45,53,54,46,40,55,42,56,57,47,58,48,36,36,45,41,47,40,44,44,0,0,60,0,0,60,0,0,0,0,0,0,61,61,61,62,60,63,64,65,66,67,68,61,62,60,63,64,65,66,67,68,62,60,63,64,65,66,62,60,63,64,65,66,62,63,64,65,66,64,61,63,64,69,62,63,64,65,68,62,60,63,64,65,66,67,68,61,62,60,63,64,65,66,67,67,68,67,65,61,62,60,63,64,65,66,67,68,68,61,68,61,67,68,61,63,66,62,60,63,64,65,66,61,62,60,63,64,65,66,67,68,61,62,60,63,64,65,66,67,68,61,62,60,63,64,65,66,67,68,65,65,66,62,62,61,65,66,62,62,61],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["testbackend",3],["buffer",3]]],[[["",0]],["result",4,[["u16",0],["error",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["testbackend",3]],["buffer",3]],[[["",0]],["result",4,[["error",3]]]],[[["termionbackend",3]],["result",6]],[[["testbackend",3]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["termionbackend",3]],["result",6]],[[["testbackend",3]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["termionbackend",3]],["result",6]],[[["termionbackend",3]],["result",6]],[[["testbackend",3]],["result",4,[["error",3]]]],[[["testbackend",3],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["result",4,[["error",3]]]],[[["termionbackend",3]],["result",6]],[[["testbackend",3]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["termionbackend",3]],["result",6]],[[["testbackend",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["result",4,[["rawterminal",3],["error",3]]]],[[],["termionbackend",3]],[[["u16",0],["u16",0]],["testbackend",3]],[[["testbackend",3],["u16",0],["u16",0]]],[[["",0],["u16",0],["u16",0]],["result",4,[["error",3]]]],[[["termionbackend",3],["u16",0],["u16",0]],["result",6]],[[["testbackend",3],["u16",0],["u16",0]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["error",3]]]],[[["termionbackend",3]],["result",6]],[[["testbackend",3]],["result",4,[["error",3]]]],[[["",0]],["result",4,[["rect",3],["error",3]]]],[[["termionbackend",3]],["result",6,[["rect",3]]]],[[["testbackend",3]],["result",4,[["rect",3],["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["termionbackend",3]],["result",6,[["usize",0]]]],null,null,[[["buffer",3]],["rect",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["cell",3]],["cell",3]],[[["buffer",3]],["buffer",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["buffer",3]]],null,[[],["cell",3]],[[],["buffer",3]],[[["buffer",3],["buffer",3]],["vec",3]],[[["rect",3]],["buffer",3]],[[["cell",3],["cell",3]],["bool",0]],[[["buffer",3],["buffer",3]],["bool",0]],null,[[["rect",3],["cell",3]],["buffer",3]],[[["cell",3],["formatter",3]],["result",6]],[[["buffer",3],["formatter",3]],["result",6]],[[]],[[]],[[["buffer",3],["u16",0],["u16",0]],["cell",3]],[[["buffer",3],["u16",0],["u16",0]],["cell",3]],[[["buffer",3],["u16",0],["u16",0]],["usize",0]],[[]],[[]],[[["buffer",3],["buffer",3]]],null,[[["cell",3],["cell",3]],["bool",0]],[[["buffer",3],["buffer",3]],["bool",0]],[[["buffer",3],["usize",0]]],[[["cell",3]]],[[["buffer",3]]],[[["buffer",3],["rect",3]]],[[["buffer",3],["rect",3],["color",4]]],[[["cell",3],["color",4]],["cell",3]],[[["cell",3],["char",0]],["cell",3]],[[["cell",3],["color",4]],["cell",3]],[[["buffer",3],["u16",0],["u16",0],["span",3],["u16",0]]],[[["buffer",3],["u16",0],["u16",0],["spans",3],["u16",0]]],[[["buffer",3],["u16",0],["u16",0],["style",3]]],[[["buffer",3],["u16",0],["u16",0],["usize",0],["style",3]]],[[["cell",3],["style",3]],["cell",3]],[[["buffer",3],["rect",3],["style",3]]],[[["cell",3],["str",0]],["cell",3]],[[["cell",3]],["style",3]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["vec",3]],["buffer",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["constraint",4],["u16",0]],["u16",0]],[[["rect",3]],["u16",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["rect",3]],["u16",0]],[[["corner",4]],["corner",4]],[[["direction",4]],["direction",4]],[[["constraint",4]],["constraint",4]],[[["margin",3]],["margin",3]],[[["alignment",4]],["alignment",4]],[[["layout",3]],["layout",3]],[[["rect",3]],["rect",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["layout",3]],["layout",3]],[[],["layout",3]],[[],["rect",3]],[[["layout",3],["direction",4]],["layout",3]],[[["corner",4],["corner",4]],["bool",0]],[[["direction",4],["direction",4]],["bool",0]],[[["constraint",4],["constraint",4]],["bool",0]],[[["margin",3],["margin",3]],["bool",0]],[[["alignment",4],["alignment",4]],["bool",0]],[[["layout",3],["layout",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["corner",4],["formatter",3]],["result",6]],[[["direction",4],["formatter",3]],["result",6]],[[["constraint",4],["formatter",3]],["result",6]],[[["margin",3],["formatter",3]],["result",6]],[[["alignment",4],["formatter",3]],["result",6]],[[["layout",3],["formatter",3]],["result",6]],[[["rect",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["corner",4],["",0]]],[[["direction",4],["",0]]],[[["constraint",4],["",0]]],[[["margin",3],["",0]]],[[["layout",3],["",0]]],[[["rect",3],["",0]]],null,null,[[["layout",3],["u16",0]],["layout",3]],[[["rect",3],["margin",3]],["rect",3]],[[["rect",3],["rect",3]],["rect",3]],[[["rect",3],["rect",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rect",3]],["u16",0]],[[["layout",3],["u16",0]],["layout",3]],[[["constraint",4],["constraint",4]],["bool",0]],[[["margin",3],["margin",3]],["bool",0]],[[["layout",3],["layout",3]],["bool",0]],[[["rect",3],["rect",3]],["bool",0]],[[["u16",0],["u16",0],["u16",0],["u16",0]],["rect",3]],[[["rect",3]],["u16",0]],[[["layout",3],["rect",3]],["vec",3,[["rect",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["rect",3]],["u16",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["rect",3],["rect",3]],["rect",3]],null,[[["layout",3],["u16",0]],["layout",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["style",3],["modifier",3]],["style",3]],null,[[],["modifier",3]],[[["style",3],["color",4]],["style",3]],null,[[["modifier",3],["modifier",3]],["modifier",3]],[[["modifier",3],["modifier",3]]],[[["modifier",3],["modifier",3]],["modifier",3]],[[["modifier",3],["modifier",3]]],[[["modifier",3]],["u16",0]],[[["modifier",3],["modifier",3]],["modifier",3]],[[["modifier",3],["modifier",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["color",4]],["color",4]],[[["modifier",3]],["modifier",3]],[[["style",3]],["style",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["modifier",3],["modifier",3]],["ordering",4]],[[["modifier",3]],["modifier",3]],[[["modifier",3],["modifier",3]],["bool",0]],[[],["style",3]],[[["modifier",3],["modifier",3]],["modifier",3]],[[],["modifier",3]],[[["color",4],["color",4]],["bool",0]],[[["modifier",3],["modifier",3]],["bool",0]],[[["style",3],["style",3]],["bool",0]],[[["modifier",3],["intoiterator",8]]],[[["style",3],["color",4]],["style",3]],null,[[["color",4],["formatter",3]],["result",6]],[[["modifier",3],["formatter",3]],["result",6]],[[["modifier",3],["formatter",3]],["result",6]],[[["modifier",3],["formatter",3]],["result",6]],[[["modifier",3],["formatter",3]],["result",6]],[[["modifier",3],["formatter",3]],["result",6]],[[["style",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["u16",0]],["option",4,[["modifier",3]]]],[[["u16",0]],["modifier",3]],[[["u16",0]],["modifier",3]],[[["intoiterator",8]],["modifier",3]],[[["modifier",3],["",0]]],[[["modifier",3],["modifier",3]]],[[["modifier",3],["modifier",3]],["modifier",3]],[[["modifier",3],["modifier",3]],["bool",0]],[[]],[[]],[[]],[[["modifier",3]],["bool",0]],[[["modifier",3]],["bool",0]],[[["color",4],["color",4]],["bool",0]],[[["modifier",3],["modifier",3]],["bool",0]],[[["style",3],["style",3]],["bool",0]],[[["modifier",3]],["modifier",3]],[[["modifier",3],["modifier",3]],["option",4,[["ordering",4]]]],[[["style",3],["style",3]],["style",3]],[[["modifier",3],["modifier",3]]],[[["style",3],["modifier",3]],["style",3]],[[],["style",3]],[[["modifier",3],["modifier",3],["bool",0]]],[[["modifier",3],["modifier",3]],["modifier",3]],[[["modifier",3],["modifier",3]]],null,[[["modifier",3],["modifier",3]],["modifier",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["modifier",3],["modifier",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["modifier",3],["modifier",3]],["modifier",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["marker",4]],["marker",4]],[[["",0],["",0]]],[[["marker",4],["formatter",3]],["result",6]],[[]],[[]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["set",3]],["set",3]],[[["",0],["",0]]],null,null,[[["set",3],["formatter",3]],["result",6]],[[]],null,null,[[]],null,null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["set",3]],["set",3]],[[["",0],["",0]]],null,null,[[["set",3],["formatter",3]],["result",6]],[[]],null,null,[[]],null,null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["set",3]],["set",3]],[[["",0],["",0]]],null,[[["set",3],["formatter",3]],["result",6]],[[]],null,null,null,[[]],[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["terminal",3]],["result",6]],[[["terminal",3]],["",0]],[[["terminal",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["terminal",3]],["result",6]],[[["viewport",3]],["viewport",3]],[[["terminaloptions",3]],["terminaloptions",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["terminal",3]],["buffer",3]],[[["terminal",3]],["result",6,[["completedframe",3]]]],[[["terminal",3]]],[[["viewport",3],["viewport",3]],["bool",0]],[[["terminaloptions",3],["terminaloptions",3]],["bool",0]],[[["rect",3]],["viewport",3]],[[["terminal",3]],["result",6]],[[["viewport",3],["formatter",3]],["result",6]],[[["terminaloptions",3],["formatter",3]],["result",6]],[[["terminal",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["terminal",3]],["result",6]],[[["terminal",3]],["frame",3]],[[["terminal",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["viewport",3],["viewport",3]],["bool",0]],[[["terminaloptions",3],["terminaloptions",3]],["bool",0]],[[],["result",6,[["terminal",3]]]],[[["frame",3],["rect",3]]],[[["frame",3],["rect",3]]],[[["terminal",3],["rect",3]],["result",6]],[[["frame",3],["u16",0],["u16",0]]],[[["terminal",3],["u16",0],["u16",0]],["result",6]],[[["terminal",3]],["result",6]],[[["frame",3]],["rect",3]],[[["terminal",3]],["result",6,[["rect",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["terminaloptions",3]],["result",6,[["terminal",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["styledgrapheme",3]],["styledgrapheme",3]],[[["span",3]],["span",3]],[[["spans",3]],["spans",3]],[[["text",3]],["text",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["spans",3]],[[],["text",3]],[[["styledgrapheme",3],["styledgrapheme",3]],["bool",0]],[[["span",3],["span",3]],["bool",0]],[[["spans",3],["spans",3]],["bool",0]],[[["text",3],["text",3]],["bool",0]],[[["text",3],["intoiterator",8]]],[[["styledgrapheme",3],["formatter",3]],["result",6]],[[["span",3],["formatter",3]],["result",6]],[[["spans",3],["formatter",3]],["result",6]],[[["text",3],["formatter",3]],["result",6]],[[]],[[["string",3]],["span",3]],[[["str",0]],["span",3]],[[]],[[["span",3]],["spans",3]],[[["vec",3,[["span",3]]]],["spans",3]],[[]],[[["string",3]],["spans",3]],[[["str",0]],["spans",3]],[[]],[[["string",3]],["text",3]],[[["str",0]],["text",3]],[[["vec",3,[["spans",3]]]],["text",3]],[[["cow",4,[["str",0]]]],["text",3]],[[["span",3]],["text",3]],[[["spans",3]],["text",3]],[[["text",3]],["usize",0]],[[]],[[]],[[]],[[]],[[["text",3]]],null,[[["styledgrapheme",3],["styledgrapheme",3]],["bool",0]],[[["span",3],["span",3]],["bool",0]],[[["spans",3],["spans",3]],["bool",0]],[[["text",3],["text",3]],["bool",0]],[[["text",3],["style",3]]],[[],["span",3]],[[],["text",3]],null,null,[[["style",3]],["span",3]],[[["style",3]],["text",3]],[[["span",3],["style",3]],["iterator",8]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["span",3]],["usize",0]],[[["spans",3]],["usize",0]],[[["text",3]],["usize",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["paragraph",3],["alignment",4]],["paragraph",3]],[[],["borders",3]],[[["barchart",3],["u16",0]],["barchart",3]],[[["barchart",3],["set",3]],["barchart",3]],[[["sparkline",3],["set",3]],["sparkline",3]],[[["barchart",3],["style",3]],["barchart",3]],[[["barchart",3],["u16",0]],["barchart",3]],[[["borders",3],["borders",3]],["borders",3]],[[["borders",3],["borders",3]]],[[["borders",3],["borders",3]],["borders",3]],[[["borders",3],["borders",3]]],[[["borders",3]],["u32",0]],[[["borders",3],["borders",3]],["borders",3]],[[["borders",3],["borders",3]]],[[["linegauge",3],["block",3]],["linegauge",3]],[[["barchart",3],["block",3]],["barchart",3]],[[["chart",3],["block",3]],["chart",3]],[[["gauge",3],["block",3]],["gauge",3]],[[["list",3],["block",3]],["list",3]],[[["paragraph",3],["block",3]],["paragraph",3]],[[["sparkline",3],["block",3]],["sparkline",3]],[[["table",3],["block",3]],["table",3]],[[["tabs",3],["block",3]],["tabs",3]],[[["block",3],["style",3]],["block",3]],[[["block",3],["bordertype",4]],["block",3]],[[["block",3],["borders",3]],["blockrow",3],["u16",0]],["row",3]],[[["axis",3]],["axis",3]],null,[[["barchart",3]],["barchart",3]],[[["bordertype",4]],["bordertype",4]],[[["block",3]],["block",3]],[[["axis",3]],["axis",3]],[[["graphtype",4]],["graphtype",4]],[[["dataset",3]],["dataset",3]],[[["chart",3]],["chart",3]],[[["clear",3]],["clear",3]],[[["gauge",3]],["gauge",3]],[[["liststate",3]],["liststate",3]],[[["listitem",3]],["listitem",3]],[[["list",3]],["list",3]],[[["paragraph",3]],["paragraph",3]],[[["wrap",3]],["wrap",3]],[[["sparkline",3]],["sparkline",3]],[[["cell",3]],["cell",3]],[[["row",3]],["row",3]],[[["table",3]],["table",3]],[[["tablestate",3]],["tablestate",3]],[[["tabs",3]],["tabs",3]],[[["borders",3]],["borders",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["borders",3],["borders",3]],["ordering",4]],[[["table",3],["u16",0]],["table",3]],[[["borders",3]],["borders",3]],[[["borders",3],["borders",3]],["bool",0]],[[["barchart",3]],["barchart",3]],[[["dataset",3]],["dataset",3]],[[["sparkline",3]],["sparkline",3]],[[],["linegauge",3]],[[],["barchart",3]],[[],["block",3]],[[],["axis",3]],[[],["dataset",3]],[[],["gauge",3]],[[],["liststate",3]],[[],["sparkline",3]],[[],["cell",3]],[[],["row",3]],[[],["tablestate",3]],[[["borders",3],["borders",3]],["borders",3]],[[["tabs",3]],["tabs",3]],[[],["borders",3]],[[["bordertype",4],["bordertype",4]],["bool",0]],[[["block",3],["block",3]],["bool",0]],[[["listitem",3],["listitem",3]],["bool",0]],[[["cell",3],["cell",3]],["bool",0]],[[["row",3],["row",3]],["bool",0]],[[["table",3],["table",3]],["bool",0]],[[["borders",3],["borders",3]],["bool",0]],[[["borders",3],["intoiterator",8]]],[[["barchart",3],["formatter",3]],["result",6]],[[["bordertype",4],["formatter",3]],["result",6]],[[["block",3],["formatter",3]],["result",6]],[[["axis",3],["formatter",3]],["result",6]],[[["graphtype",4],["formatter",3]],["result",6]],[[["dataset",3],["formatter",3]],["result",6]],[[["chart",3],["formatter",3]],["result",6]],[[["clear",3],["formatter",3]],["result",6]],[[["gauge",3],["formatter",3]],["result",6]],[[["liststate",3],["formatter",3]],["result",6]],[[["listitem",3],["formatter",3]],["result",6]],[[["list",3],["formatter",3]],["result",6]],[[["paragraph",3],["formatter",3]],["result",6]],[[["wrap",3],["formatter",3]],["result",6]],[[["sparkline",3],["formatter",3]],["result",6]],[[["cell",3],["formatter",3]],["result",6]],[[["row",3],["formatter",3]],["result",6]],[[["table",3],["formatter",3]],["result",6]],[[["tablestate",3],["formatter",3]],["result",6]],[[["tabs",3],["formatter",3]],["result",6]],[[["borders",3],["formatter",3]],["result",6]],[[["borders",3],["formatter",3]],["result",6]],[[["borders",3],["formatter",3]],["result",6]],[[["borders",3],["formatter",3]],["result",6]],[[["borders",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cell",3]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["option",4,[["borders",3]]]],[[["u32",0]],["borders",3]],[[["u32",0]],["borders",3]],[[["intoiterator",8]],["borders",3]],[[["linegauge",3],["style",3]],["linegauge",3]],[[["gauge",3],["style",3]],["gauge",3]],[[["dataset",3],["graphtype",4]],["dataset",3]],[[["borders",3],["",0]]],[[["table",3],["row",3]],["table",3]],[[["listitem",3]],["usize",0]],[[["row",3],["u16",0]],["row",3]],[[["chart",3]],["chart",3]],[[["list",3],["style",3]],["list",3]],[[["table",3],["style",3]],["table",3]],[[["tabs",3],["style",3]],["tabs",3]],[[["list",3],["str",0]],["list",3]],[[["table",3],["str",0]],["table",3]],[[["block",3],["rect",3]],["rect",3]],[[["borders",3],["borders",3]]],[[["borders",3],["borders",3]],["borders",3]],[[["borders",3],["borders",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["borders",3]],["bool",0]],[[["borders",3]],["bool",0]],[[["linegauge",3]],["linegauge",3]],[[["gauge",3]],["gauge",3]],[[["barchart",3],["style",3]],["barchart",3]],[[["axis",3],["vec",3,[["span",3]]]],["axis",3]],[[["linegauge",3],["set",3]],["linegauge",3]],[[["bordertype",4]],["set",3]],[[["dataset",3],["marker",4]],["dataset",3]],[[["barchart",3],["u64",0]],["barchart",3]],[[["sparkline",3],["u64",0]],["sparkline",3]],[[["dataset",3]],["dataset",3]],[[["block",3],["block",3]],["bool",0]],[[["listitem",3],["listitem",3]],["bool",0]],[[["cell",3],["cell",3]],["bool",0]],[[["row",3],["row",3]],["bool",0]],[[["table",3],["table",3]],["bool",0]],[[["borders",3],["borders",3]],["bool",0]],[[["vec",3,[["dataset",3]]]],["chart",3]],[[],["listitem",3]],[[],["list",3]],[[],["paragraph",3]],[[],["row",3]],[[],["table",3]],[[["vec",3,[["spans",3]]]],["tabs",3]],[[["borders",3]],["borders",3]],[[["borders",3],["borders",3]],["option",4,[["ordering",4]]]],[[["gauge",3],["u16",0]],["gauge",3]],[[["linegauge",3],["f64",0]],["linegauge",3]],[[["gauge",3],["f64",0]],["gauge",3]],[[["borders",3],["borders",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["linegauge",3],["rect",3],["buffer",3]]],[[["barchart",3],["rect",3],["buffer",3]]],[[["block",3],["rect",3],["buffer",3]]],[[["chart",3],["rect",3],["buffer",3]]],[[["clear",3],["rect",3],["buffer",3]]],[[["gauge",3],["rect",3],["buffer",3]]],[[["list",3],["rect",3],["buffer",3]]],[[["list",3],["rect",3],["buffer",3]]],[[["paragraph",3],["rect",3],["buffer",3]]],[[["sparkline",3],["rect",3],["buffer",3]]],[[["table",3],["rect",3],["buffer",3]]],[[["table",3],["rect",3],["buffer",3]]],[[["tabs",3],["rect",3],["buffer",3]]],[[["paragraph",3]],["paragraph",3]],[[["liststate",3],["option",4,[["usize",0]]]]],[[["tablestate",3],["option",4,[["usize",0]]]]],[[["tabs",3],["usize",0]],["tabs",3]],[[["liststate",3]],["option",4,[["usize",0]]]],[[["tablestate",3]],["option",4,[["usize",0]]]],[[["borders",3],["borders",3],["bool",0]]],[[["list",3],["corner",4]],["list",3]],[[["linegauge",3],["style",3]],["linegauge",3]],[[["barchart",3],["style",3]],["barchart",3]],[[["block",3],["style",3]],["block",3]],[[["axis",3],["style",3]],["axis",3]],[[["dataset",3],["style",3]],["dataset",3]],[[["chart",3],["style",3]],["chart",3]],[[["gauge",3],["style",3]],["gauge",3]],[[["listitem",3],["style",3]],["listitem",3]],[[["list",3],["style",3]],["list",3]],[[["paragraph",3],["style",3]],["paragraph",3]],[[["sparkline",3],["style",3]],["sparkline",3]],[[["cell",3],["style",3]],["cell",3]],[[["row",3],["style",3]],["row",3]],[[["table",3],["style",3]],["table",3]],[[["tabs",3],["style",3]],["tabs",3]],[[["borders",3],["borders",3]],["borders",3]],[[["borders",3],["borders",3]]],[[["borders",3],["borders",3]],["borders",3]],[[["block",3]],["block",3]],[[["axis",3]],["axis",3]],[[["block",3],["alignment",4]],["block",3]],[[["block",3],["style",3]],["block",3]],[[["axis",3],["style",3]],["axis",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["borders",3],["borders",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["borders",3],["borders",3]],["borders",3]],[[["gauge",3],["bool",0]],["gauge",3]],[[["barchart",3],["style",3]],["barchart",3]],[[["table",3]],["table",3]],[[["paragraph",3],["wrap",3]],["paragraph",3]],[[["chart",3],["axis",3]],["chart",3]],[[["chart",3],["axis",3]],["chart",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["canvas",3],["color",4]],["canvas",3]],[[["canvas",3],["block",3]],["canvas",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["line",3]],["line",3]],[[["mapresolution",4]],["mapresolution",4]],[[["map",3]],["map",3]],[[["points",3]],["points",3]],[[["rectangle",3]],["rectangle",3]],[[["label",3]],["label",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,[[],["canvas",3]],[[],["map",3]],[[],["points",3]],[[["",0],["painter",3]]],[[["line",3],["painter",3]]],[[["map",3],["painter",3]]],[[["points",3],["painter",3]]],[[["rectangle",3],["painter",3]]],[[["context",3],["",0]]],[[["line",3],["formatter",3]],["result",6]],[[["mapresolution",4],["formatter",3]],["result",6]],[[["map",3],["formatter",3]],["result",6]],[[["points",3],["formatter",3]],["result",6]],[[["rectangle",3],["formatter",3]],["result",6]],[[["label",3],["formatter",3]],["result",6]],[[["painter",3],["formatter",3]],["result",6]],[[["context",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3]],["painter",3]],[[]],[[]],[[["painter",3],["f64",0],["f64",0]],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3]]],[[["canvas",3],["marker",4]],["canvas",3]],[[["u16",0],["u16",0],["marker",4]],["context",3]],[[["canvas",3]],["canvas",3]],[[["painter",3],["usize",0],["usize",0],["color",4]]],[[["context",3],["f64",0],["f64",0],["str",0],["color",4]]],[[["canvas",3],["rect",3],["buffer",3]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["canvas",3]],["canvas",3]],null,null,null,null,[[["canvas",3]],["canvas",3]]],"p":[[3,"TestBackend"],[3,"TermionBackend"],[8,"Backend"],[3,"Buffer"],[3,"Cell"],[4,"Corner"],[4,"Alignment"],[4,"Direction"],[4,"Constraint"],[3,"Rect"],[3,"Margin"],[3,"Layout"],[13,"Percentage"],[13,"Ratio"],[13,"Length"],[13,"Max"],[13,"Min"],[3,"Modifier"],[4,"Color"],[3,"Style"],[13,"Rgb"],[13,"Indexed"],[4,"Marker"],[3,"Set"],[3,"Set"],[3,"Set"],[3,"CompletedFrame"],[3,"Terminal"],[3,"Frame"],[3,"Viewport"],[3,"TerminalOptions"],[3,"Spans"],[3,"StyledGrapheme"],[3,"Span"],[3,"Text"],[3,"Borders"],[4,"BorderType"],[4,"GraphType"],[8,"StatefulWidget"],[3,"Paragraph"],[3,"BarChart"],[3,"Sparkline"],[3,"LineGauge"],[3,"Chart"],[3,"Gauge"],[3,"List"],[3,"Table"],[3,"Tabs"],[3,"Block"],[3,"Axis"],[3,"Dataset"],[3,"Clear"],[3,"ListState"],[3,"ListItem"],[3,"Wrap"],[3,"Cell"],[3,"Row"],[3,"TableState"],[8,"Widget"],[4,"MapResolution"],[3,"Canvas"],[3,"Line"],[3,"Map"],[3,"Points"],[3,"Rectangle"],[3,"Label"],[3,"Painter"],[3,"Context"],[8,"Shape"]]},\
"tui_2048":{"doc":"","t":[0,0,0,5,5,5,0,3,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,12,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,4,13,3,6,13,13,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["app","event","game","main","pad_str","score_to_color","utils","App","add_command","borrow","borrow_mut","box_size","from","game","get_game_over_modal","get_grid","get_score","get_size","into","is_alive","new","next","queue","restart","score","try_from","try_into","type_id","vzip","x","y","Config","Event","Events","Input","Tick","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","fmt","from","from","from","input_handle","into","into","into","new","next","rx","tick_handle","tick_rate","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_config","0","Command","Down","Game","Grid","Left","Nil","Panel","Right","Up","alive","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_alive","eq","fmt","from","from","from","get_grid","get_grid","get_score","grid","init","into","into","into","is_equal_grid","new","new","next_tick","next_tick","panel","random_insert","start","sum","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","equal_slice"],"q":["tui_2048","","","","","","","tui_2048::app","","","","","","","","","","","","","","","","","","","","","","","","tui_2048::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui_2048::event::Event","tui_2048::game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui_2048::utils"],"d":["","","","","","","","2048 Application","add some command","","","each square size","Returns the argument unchanged.","Application’s game","calculate result board points when game over","game grid","get current score","box_size * 4","Calls <code>U::from(self)</code>.","get game status, alive or dead","create your application","calculate the next tick","Application’s commands","restart application","Application’s score","","","","","terminal x-axis start point","terminal y-axis start point","","common events","A small event handler that wrap termion input and tick …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","keyboard events","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","multi-producer-single-consumer","each tick","","","","","","","","","","","","","","","config all your events for tui","","game command","to bottom","Game","game grid","to left","ignore command","game grid panel","to right","to top","alive or dead","","","","","","","check if alive","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","get grid","get grid","","","grid init","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","check if two grid is equal","","","calculate next tick grid","calculate next grid","board","randomly insert one number into grid","","recursive calculate vector’s adjacent boxes","","","","","","","","","","","","","predict if two matrices contains same value takes two …"],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,3,4,2,3,4,4,4,4,4,2,3,4,3,2,3,4,3,3,3,3,4,4,2,3,4,2,3,4,2,3,4,2,3,4,3,5,0,6,0,0,6,6,0,6,6,7,7,8,6,7,8,6,8,6,6,7,8,6,7,8,7,8,8,7,8,6,0,7,8,7,8,7,8,7,0,7,8,6,7,8,6,7,8,6,7,8,6,0],"f":[null,null,null,[[],["result",4,[["box",3,[["error",8]]]]]],[[["string",3],["usize",0]],["string",3]],[[["i32",0]],["color",4]],null,null,[[["app",3],["command",4]]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],null,[[["app",3]],["vec",3]],[[["app",3]]],[[["app",3]],["i32",0]],[[["app",3]],["f64",0]],[[]],[[["app",3]],["bool",0]],[[],["app",3]],[[["app",3]]],null,[[["app",3]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["config",3]],["config",3]],[[["",0],["",0]]],[[],["config",3]],[[["config",3],["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["events",3]],[[["events",3]],["result",4,[["event",4,[["key",4]]],["recverror",3]]]],null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[["config",3]],["events",3]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["panel",3]],["bool",0]],[[["command",4],["command",4]],["bool",0]],[[["command",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["game",3]]],[[["panel",3]]],[[["game",3]],["i32",0]],null,[[["panel",3]]],[[]],[[]],[[]],[[],["bool",0]],[[],["game",3]],[[],["panel",3]],[[["game",3],["command",4]]],[[["panel",3],["command",4]],["bool",0]],null,[[["panel",3]]],[[["game",3]]],[[["vec",3,[["i32",0]]]],["vec",3,[["i32",0]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[],["bool",0]]],"p":[[3,"App"],[4,"Event"],[3,"Events"],[3,"Config"],[13,"Input"],[4,"Command"],[3,"Game"],[3,"Panel"]]},\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word or …","t":[3,4,3,3,13,13,13,13,17,3,3,3,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,12],"n":["GraphemeCursor","GraphemeIncomplete","GraphemeIndices","Graphemes","InvalidOffset","NextChunk","PreContext","PrevChunk","UNICODE_VERSION","USentenceBoundIndices","USentenceBounds","UWordBoundIndices","UWordBounds","UnicodeSegmentation","UnicodeSentences","UnicodeWordIndices","UnicodeWords","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","cur_cursor","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","grapheme_indices","graphemes","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_boundary","ne","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_boundary","prev_boundary","provide_context","set_cursor","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","split_sentence_bound_indices","split_sentence_bounds","split_word_bound_indices","split_word_bounds","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode_sentences","unicode_word_indices","unicode_words","0"],"q":["unicode_segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unicode_segmentation::GraphemeIncomplete"],"d":["Cursor-based segmenter for grapheme clusters.","An error return indicating that not enough content was …","External iterator for grapheme clusters and byte offsets.","External iterator for a string’s grapheme clusters.","An error returned when the chunk given does not contain …","When requesting <code>next_boundary</code>, the cursor is moving past …","More pre-context is needed. The caller should call …","When requesting <code>prev_boundary</code>, the cursor is moving past …","The version of Unicode that this version of …","External iterator for sentence boundaries and byte offsets.","External iterator for a string’s sentence boundaries.","External iterator for word boundaries and byte offsets.","External iterator for a string’s word boundaries.","Methods for segmenting strings according to Unicode …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The current offset of the cursor. Equal to the last value …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an iterator over the grapheme clusters of <code>self</code> and …","Returns an iterator over the grapheme clusters of <code>self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Determine whether the current cursor location is a …","","Create a new cursor. The string and initial offset are …","","","","","","","","","","","","","","","","Find the next boundary after the current cursor position. …","Find the previous boundary after the current cursor …","Provide additional pre-context when it is needed to decide …","Set the cursor to a new location in the same string.","","","","","","","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over the words of <code>self</code>, separated on …","Returns an iterator over the words of <code>self</code>, separated on …",""],"i":[0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,8,1,4,5,9,10,11,2,3,8,4,5,9,10,11,8,1,3,8,1,6,7,2,3,8,1,4,5,9,10,11,12,12,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,4,5,9,10,11,8,1,8,6,7,2,3,4,5,9,10,11,6,7,2,3,4,5,8,8,8,8,2,3,4,5,10,11,12,12,12,12,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,8,1,4,5,9,10,11,6,7,2,3,8,1,4,5,9,10,11,12,12,12,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["graphemeindices",3]],["str",0]],[[["graphemes",3]],["str",0]],[[["uwordbounds",3]],["str",0]],[[["uwordboundindices",3]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["graphemeindices",3]],["graphemeindices",3]],[[["graphemes",3]],["graphemes",3]],[[["graphemecursor",3]],["graphemecursor",3]],[[["uwordbounds",3]],["uwordbounds",3]],[[["uwordboundindices",3]],["uwordboundindices",3]],[[["unicodesentences",3]],["unicodesentences",3]],[[["usentencebounds",3]],["usentencebounds",3]],[[["usentenceboundindices",3]],["usentenceboundindices",3]],[[["graphemecursor",3]],["usize",0]],[[["graphemeincomplete",4],["graphemeincomplete",4]],["bool",0]],[[["graphemes",3],["formatter",3]],["result",6]],[[["graphemecursor",3],["formatter",3]],["result",6]],[[["graphemeincomplete",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["bool",0]],["graphemeindices",3]],[[["",0],["bool",0]],["graphemes",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["graphemecursor",3],["str",0],["usize",0]],["result",4,[["bool",0],["graphemeincomplete",4]]]],[[["graphemeincomplete",4],["graphemeincomplete",4]],["bool",0]],[[["usize",0],["usize",0],["bool",0]],["graphemecursor",3]],[[["unicodewords",3]],["option",4,[["str",0]]]],[[["unicodewordindices",3]],["option",4]],[[["graphemeindices",3]],["option",4]],[[["graphemes",3]],["option",4,[["str",0]]]],[[["uwordbounds",3]],["option",4,[["str",0]]]],[[["uwordboundindices",3]],["option",4]],[[["unicodesentences",3]],["option",4,[["str",0]]]],[[["usentencebounds",3]],["option",4,[["str",0]]]],[[["usentenceboundindices",3]],["option",4]],[[["unicodewords",3]],["option",4,[["str",0]]]],[[["unicodewordindices",3]],["option",4]],[[["graphemeindices",3]],["option",4]],[[["graphemes",3]],["option",4,[["str",0]]]],[[["uwordbounds",3]],["option",4,[["str",0]]]],[[["uwordboundindices",3]],["option",4]],[[["graphemecursor",3],["str",0],["usize",0]],["result",4,[["option",4,[["usize",0]]],["graphemeincomplete",4]]]],[[["graphemecursor",3],["str",0],["usize",0]],["result",4,[["option",4,[["usize",0]]],["graphemeincomplete",4]]]],[[["graphemecursor",3],["str",0],["usize",0]]],[[["graphemecursor",3],["usize",0]]],[[["graphemeindices",3]]],[[["graphemes",3]]],[[["uwordbounds",3]]],[[["uwordboundindices",3]]],[[["usentencebounds",3]]],[[["usentenceboundindices",3]]],[[["",0]],["usentenceboundindices",3]],[[["",0]],["usentencebounds",3]],[[["",0]],["uwordboundindices",3]],[[["",0]],["uwordbounds",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["unicodesentences",3]],[[["",0]],["unicodewordindices",3]],[[["",0]],["unicodewords",3]],null],"p":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[3,"UnicodeWords"],[3,"UnicodeWordIndices"],[3,"GraphemeCursor"],[3,"UnicodeSentences"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"],[8,"UnicodeSegmentation"],[13,"PreContext"]]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","t":[17,8,8,10,10,10,10],"n":["UNICODE_VERSION","UnicodeWidthChar","UnicodeWidthStr","width","width","width_cjk","width_cjk"],"q":["unicode_width","","","","","",""],"d":["The version of Unicode that this version of unicode-width …","Methods for determining displayed width of Unicode …","Methods for determining displayed width of Unicode strings.","Returns the character’s displayed width in columns, or …","Returns the string’s displayed width in columns.","Returns the character’s displayed width in columns, or …","Returns the string’s displayed width in columns."],"i":[0,0,0,1,2,1,2],"f":[null,null,null,[[],["option",4,[["usize",0]]]],[[["",0]],["usize",0]],[[],["option",4,[["usize",0]]]],[[["",0]],["usize",0]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
